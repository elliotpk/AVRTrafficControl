
Lab5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000050  00800100  000023bc  00002450  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000023bc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  00800150  00800150  000024a0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000024a0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000024d0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002b0  00000000  00000000  00002510  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000034bb  00000000  00000000  000027c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000012c1  00000000  00000000  00005c7b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000182f  00000000  00000000  00006f3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000d94  00000000  00000000  0000876c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009df  00000000  00000000  00009500  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003077  00000000  00000000  00009edf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000230  00000000  00000000  0000cf56  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 c6 05 	jmp	0xb8c	; 0xb8c <__vector_1>
       8:	0c 94 32 06 	jmp	0xc64	; 0xc64 <__vector_2>
       c:	0c 94 9e 06 	jmp	0xd3c	; 0xd3c <__vector_3>
      10:	0c 94 0a 07 	jmp	0xe14	; 0xe14 <__vector_4>
      14:	0c 94 76 07 	jmp	0xeec	; 0xeec <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 4d 0e 	jmp	0x1c9a	; 0x1c9a <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 fb 0d 	jmp	0x1bf6	; 0x1bf6 <__vector_9>
      28:	0c 94 e2 07 	jmp	0xfc4	; 0xfc4 <__vector_10>
      2c:	0c 94 4e 08 	jmp	0x109c	; 0x109c <__vector_11>
      30:	0c 94 ba 08 	jmp	0x1174	; 0x1174 <__vector_12>
      34:	0c 94 26 09 	jmp	0x124c	; 0x124c <__vector_13>
      38:	0c 94 92 09 	jmp	0x1324	; 0x1324 <__vector_14>
      3c:	0c 94 fe 09 	jmp	0x13fc	; 0x13fc <__vector_15>
      40:	0c 94 6a 0a 	jmp	0x14d4	; 0x14d4 <__vector_16>
      44:	0c 94 d6 0a 	jmp	0x15ac	; 0x15ac <__vector_17>
      48:	0c 94 42 0b 	jmp	0x1684	; 0x1684 <__vector_18>
      4c:	0c 94 ae 0b 	jmp	0x175c	; 0x175c <__vector_19>
      50:	0c 94 1a 0c 	jmp	0x1834	; 0x1834 <__vector_20>
      54:	0c 94 86 0c 	jmp	0x190c	; 0x190c <__vector_21>
      58:	0c 94 f2 0c 	jmp	0x19e4	; 0x19e4 <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	ec eb       	ldi	r30, 0xBC	; 188
      70:	f3 e2       	ldi	r31, 0x23	; 35
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	a0 35       	cpi	r26, 0x50	; 80
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	a0 e5       	ldi	r26, 0x50	; 80
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	a3 3a       	cpi	r26, 0xA3	; 163
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <main>
      92:	0c 94 dc 11 	jmp	0x23b8	; 0x23b8 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <clearBridge>:
	ASYNC(self->lights[val], red, 0);
	AFTER(SEC(1), self, clearBridge, 0);	// Adds 1 second of full red time before letting cars through again.
}

void clearBridge(TC *self) {
	self->bridgeClear = 0;
      9a:	fc 01       	movw	r30, r24
      9c:	11 a2       	std	Z+33, r1	; 0x21
      9e:	10 a2       	std	Z+32, r1	; 0x20
      a0:	08 95       	ret

000000a2 <removeEntry>:
	ASYNC(&(self->display[1]), updateDisplay, self->onBridge);
	AFTER(SEC(5), self, removeEntry, 0);
	removeCar(self, val);
}

void removeEntry(TC *self) {
      a2:	cf 92       	push	r12
      a4:	df 92       	push	r13
      a6:	ef 92       	push	r14
      a8:	ff 92       	push	r15
      aa:	0f 93       	push	r16
      ac:	1f 93       	push	r17
	self->onBridge--;
      ae:	fc 01       	movw	r30, r24
      b0:	c6 8c       	ldd	r12, Z+30	; 0x1e
      b2:	d7 8c       	ldd	r13, Z+31	; 0x1f
      b4:	f1 e0       	ldi	r31, 0x01	; 1
      b6:	cf 1a       	sub	r12, r31
      b8:	d1 08       	sbc	r13, r1
      ba:	fc 01       	movw	r30, r24
      bc:	d7 8e       	std	Z+31, r13	; 0x1f
      be:	c6 8e       	std	Z+30, r12	; 0x1e
	ASYNC(&(self->display[1]), updateDisplay, self->onBridge);
      c0:	8c 01       	movw	r16, r24
      c2:	06 5f       	subi	r16, 0xF6	; 246
      c4:	1f 4f       	sbci	r17, 0xFF	; 255
      c6:	0f 2e       	mov	r0, r31
      c8:	f1 eb       	ldi	r31, 0xB1	; 177
      ca:	ef 2e       	mov	r14, r31
      cc:	f2 e0       	ldi	r31, 0x02	; 2
      ce:	ff 2e       	mov	r15, r31
      d0:	f0 2d       	mov	r31, r0
      d2:	20 e0       	ldi	r18, 0x00	; 0
      d4:	30 e0       	ldi	r19, 0x00	; 0
      d6:	a9 01       	movw	r20, r18
      d8:	60 e0       	ldi	r22, 0x00	; 0
      da:	70 e0       	ldi	r23, 0x00	; 0
      dc:	cb 01       	movw	r24, r22
      de:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
}
      e2:	1f 91       	pop	r17
      e4:	0f 91       	pop	r16
      e6:	ff 90       	pop	r15
      e8:	ef 90       	pop	r14
      ea:	df 90       	pop	r13
      ec:	cf 90       	pop	r12
      ee:	08 95       	ret

000000f0 <closeRoad>:

void closeRoad(TC *self, int val) {
      f0:	cf 92       	push	r12
      f2:	df 92       	push	r13
      f4:	ef 92       	push	r14
      f6:	ff 92       	push	r15
      f8:	0f 93       	push	r16
      fa:	1f 93       	push	r17
      fc:	cf 93       	push	r28
      fe:	df 93       	push	r29
     100:	ec 01       	movw	r28, r24
	ASYNC(self->lights[val], red, 0);
     102:	fb 01       	movw	r30, r22
     104:	3b 96       	adiw	r30, 0x0b	; 11
     106:	ee 0f       	add	r30, r30
     108:	ff 1f       	adc	r31, r31
     10a:	e8 0f       	add	r30, r24
     10c:	f9 1f       	adc	r31, r25
     10e:	00 81       	ld	r16, Z
     110:	11 81       	ldd	r17, Z+1	; 0x01
     112:	c1 2c       	mov	r12, r1
     114:	d1 2c       	mov	r13, r1
     116:	0f 2e       	mov	r0, r31
     118:	fa ef       	ldi	r31, 0xFA	; 250
     11a:	ef 2e       	mov	r14, r31
     11c:	f4 e0       	ldi	r31, 0x04	; 4
     11e:	ff 2e       	mov	r15, r31
     120:	f0 2d       	mov	r31, r0
     122:	20 e0       	ldi	r18, 0x00	; 0
     124:	30 e0       	ldi	r19, 0x00	; 0
     126:	a9 01       	movw	r20, r18
     128:	60 e0       	ldi	r22, 0x00	; 0
     12a:	70 e0       	ldi	r23, 0x00	; 0
     12c:	cb 01       	movw	r24, r22
     12e:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
	AFTER(SEC(1), self, clearBridge, 0);	// Adds 1 second of full red time before letting cars through again.
     132:	0f 2e       	mov	r0, r31
     134:	fd e4       	ldi	r31, 0x4D	; 77
     136:	ef 2e       	mov	r14, r31
     138:	f0 e0       	ldi	r31, 0x00	; 0
     13a:	ff 2e       	mov	r15, r31
     13c:	f0 2d       	mov	r31, r0
     13e:	8e 01       	movw	r16, r28
     140:	20 e0       	ldi	r18, 0x00	; 0
     142:	30 e0       	ldi	r19, 0x00	; 0
     144:	a9 01       	movw	r20, r18
     146:	62 e1       	ldi	r22, 0x12	; 18
     148:	7a e7       	ldi	r23, 0x7A	; 122
     14a:	80 e0       	ldi	r24, 0x00	; 0
     14c:	90 e0       	ldi	r25, 0x00	; 0
     14e:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
}
     152:	df 91       	pop	r29
     154:	cf 91       	pop	r28
     156:	1f 91       	pop	r17
     158:	0f 91       	pop	r16
     15a:	ff 90       	pop	r15
     15c:	ef 90       	pop	r14
     15e:	df 90       	pop	r13
     160:	cf 90       	pop	r12
     162:	08 95       	ret

00000164 <addCar>:
 * Created: 2021-03-14 21:46:41
 *  Author: ailio
 */ 
#include "controller.h"

void addCar(TC *self, int val) {
     164:	cf 92       	push	r12
     166:	df 92       	push	r13
     168:	ef 92       	push	r14
     16a:	ff 92       	push	r15
     16c:	0f 93       	push	r16
     16e:	1f 93       	push	r17
	if(val == 0) {
     170:	67 2b       	or	r22, r23
     172:	d9 f4       	brne	.+54     	; 0x1aa <addCar+0x46>
		self->queues[0]++;
     174:	fc 01       	movw	r30, r24
     176:	c2 8c       	ldd	r12, Z+26	; 0x1a
     178:	d3 8c       	ldd	r13, Z+27	; 0x1b
     17a:	ff ef       	ldi	r31, 0xFF	; 255
     17c:	cf 1a       	sub	r12, r31
     17e:	df 0a       	sbc	r13, r31
     180:	fc 01       	movw	r30, r24
     182:	d3 8e       	std	Z+27, r13	; 0x1b
     184:	c2 8e       	std	Z+26, r12	; 0x1a
		ASYNC(&(self->display[0]), updateDisplay, self->queues[0]);
     186:	8c 01       	movw	r16, r24
     188:	0c 5f       	subi	r16, 0xFC	; 252
     18a:	1f 4f       	sbci	r17, 0xFF	; 255
     18c:	0f 2e       	mov	r0, r31
     18e:	f1 eb       	ldi	r31, 0xB1	; 177
     190:	ef 2e       	mov	r14, r31
     192:	f2 e0       	ldi	r31, 0x02	; 2
     194:	ff 2e       	mov	r15, r31
     196:	f0 2d       	mov	r31, r0
     198:	20 e0       	ldi	r18, 0x00	; 0
     19a:	30 e0       	ldi	r19, 0x00	; 0
     19c:	a9 01       	movw	r20, r18
     19e:	60 e0       	ldi	r22, 0x00	; 0
     1a0:	70 e0       	ldi	r23, 0x00	; 0
     1a2:	cb 01       	movw	r24, r22
     1a4:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
     1a8:	1a c0       	rjmp	.+52     	; 0x1de <addCar+0x7a>
	} else {
		self->queues[1]++;
     1aa:	fc 01       	movw	r30, r24
     1ac:	c4 8c       	ldd	r12, Z+28	; 0x1c
     1ae:	d5 8c       	ldd	r13, Z+29	; 0x1d
     1b0:	ff ef       	ldi	r31, 0xFF	; 255
     1b2:	cf 1a       	sub	r12, r31
     1b4:	df 0a       	sbc	r13, r31
     1b6:	fc 01       	movw	r30, r24
     1b8:	d5 8e       	std	Z+29, r13	; 0x1d
     1ba:	c4 8e       	std	Z+28, r12	; 0x1c
		ASYNC(&(self->display[2]), updateDisplay, self->queues[1]);
     1bc:	8c 01       	movw	r16, r24
     1be:	00 5f       	subi	r16, 0xF0	; 240
     1c0:	1f 4f       	sbci	r17, 0xFF	; 255
     1c2:	0f 2e       	mov	r0, r31
     1c4:	f1 eb       	ldi	r31, 0xB1	; 177
     1c6:	ef 2e       	mov	r14, r31
     1c8:	f2 e0       	ldi	r31, 0x02	; 2
     1ca:	ff 2e       	mov	r15, r31
     1cc:	f0 2d       	mov	r31, r0
     1ce:	20 e0       	ldi	r18, 0x00	; 0
     1d0:	30 e0       	ldi	r19, 0x00	; 0
     1d2:	a9 01       	movw	r20, r18
     1d4:	60 e0       	ldi	r22, 0x00	; 0
     1d6:	70 e0       	ldi	r23, 0x00	; 0
     1d8:	cb 01       	movw	r24, r22
     1da:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
	}
}
     1de:	1f 91       	pop	r17
     1e0:	0f 91       	pop	r16
     1e2:	ff 90       	pop	r15
     1e4:	ef 90       	pop	r14
     1e6:	df 90       	pop	r13
     1e8:	cf 90       	pop	r12
     1ea:	08 95       	ret

000001ec <removeCar>:

void removeCar(TC *self, int val) {
     1ec:	cf 92       	push	r12
     1ee:	df 92       	push	r13
     1f0:	ef 92       	push	r14
     1f2:	ff 92       	push	r15
     1f4:	0f 93       	push	r16
     1f6:	1f 93       	push	r17
	if(val == 0) {
     1f8:	67 2b       	or	r22, r23
     1fa:	d9 f4       	brne	.+54     	; 0x232 <__EEPROM_REGION_LENGTH__+0x32>
		self->queues[0]--;
     1fc:	fc 01       	movw	r30, r24
     1fe:	c2 8c       	ldd	r12, Z+26	; 0x1a
     200:	d3 8c       	ldd	r13, Z+27	; 0x1b
     202:	f1 e0       	ldi	r31, 0x01	; 1
     204:	cf 1a       	sub	r12, r31
     206:	d1 08       	sbc	r13, r1
     208:	fc 01       	movw	r30, r24
     20a:	d3 8e       	std	Z+27, r13	; 0x1b
     20c:	c2 8e       	std	Z+26, r12	; 0x1a
		ASYNC(&(self->display[0]), updateDisplay, self->queues[0]);
     20e:	8c 01       	movw	r16, r24
     210:	0c 5f       	subi	r16, 0xFC	; 252
     212:	1f 4f       	sbci	r17, 0xFF	; 255
     214:	0f 2e       	mov	r0, r31
     216:	f1 eb       	ldi	r31, 0xB1	; 177
     218:	ef 2e       	mov	r14, r31
     21a:	f2 e0       	ldi	r31, 0x02	; 2
     21c:	ff 2e       	mov	r15, r31
     21e:	f0 2d       	mov	r31, r0
     220:	20 e0       	ldi	r18, 0x00	; 0
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	a9 01       	movw	r20, r18
     226:	60 e0       	ldi	r22, 0x00	; 0
     228:	70 e0       	ldi	r23, 0x00	; 0
     22a:	cb 01       	movw	r24, r22
     22c:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
     230:	1a c0       	rjmp	.+52     	; 0x266 <__EEPROM_REGION_LENGTH__+0x66>
	} else {
		self->queues[1]--;
     232:	fc 01       	movw	r30, r24
     234:	c4 8c       	ldd	r12, Z+28	; 0x1c
     236:	d5 8c       	ldd	r13, Z+29	; 0x1d
     238:	f1 e0       	ldi	r31, 0x01	; 1
     23a:	cf 1a       	sub	r12, r31
     23c:	d1 08       	sbc	r13, r1
     23e:	fc 01       	movw	r30, r24
     240:	d5 8e       	std	Z+29, r13	; 0x1d
     242:	c4 8e       	std	Z+28, r12	; 0x1c
		ASYNC(&(self->display[2]), updateDisplay, self->queues[1]);
     244:	8c 01       	movw	r16, r24
     246:	00 5f       	subi	r16, 0xF0	; 240
     248:	1f 4f       	sbci	r17, 0xFF	; 255
     24a:	0f 2e       	mov	r0, r31
     24c:	f1 eb       	ldi	r31, 0xB1	; 177
     24e:	ef 2e       	mov	r14, r31
     250:	f2 e0       	ldi	r31, 0x02	; 2
     252:	ff 2e       	mov	r15, r31
     254:	f0 2d       	mov	r31, r0
     256:	20 e0       	ldi	r18, 0x00	; 0
     258:	30 e0       	ldi	r19, 0x00	; 0
     25a:	a9 01       	movw	r20, r18
     25c:	60 e0       	ldi	r22, 0x00	; 0
     25e:	70 e0       	ldi	r23, 0x00	; 0
     260:	cb 01       	movw	r24, r22
     262:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
	}
}
     266:	1f 91       	pop	r17
     268:	0f 91       	pop	r16
     26a:	ff 90       	pop	r15
     26c:	ef 90       	pop	r14
     26e:	df 90       	pop	r13
     270:	cf 90       	pop	r12
     272:	08 95       	ret

00000274 <entry>:

void entry(TC *self, int val) {	//0 = north entry, 1 = south entry
     274:	af 92       	push	r10
     276:	bf 92       	push	r11
     278:	cf 92       	push	r12
     27a:	df 92       	push	r13
     27c:	ef 92       	push	r14
     27e:	ff 92       	push	r15
     280:	0f 93       	push	r16
     282:	1f 93       	push	r17
     284:	cf 93       	push	r28
     286:	df 93       	push	r29
     288:	ec 01       	movw	r28, r24
     28a:	5b 01       	movw	r10, r22
	self->onBridge++;
     28c:	ce 8c       	ldd	r12, Y+30	; 0x1e
     28e:	df 8c       	ldd	r13, Y+31	; 0x1f
     290:	8f ef       	ldi	r24, 0xFF	; 255
     292:	c8 1a       	sub	r12, r24
     294:	d8 0a       	sbc	r13, r24
     296:	df 8e       	std	Y+31, r13	; 0x1f
     298:	ce 8e       	std	Y+30, r12	; 0x1e
	ASYNC(&(self->display[1]), updateDisplay, self->onBridge);
     29a:	8e 01       	movw	r16, r28
     29c:	06 5f       	subi	r16, 0xF6	; 246
     29e:	1f 4f       	sbci	r17, 0xFF	; 255
     2a0:	0f 2e       	mov	r0, r31
     2a2:	f1 eb       	ldi	r31, 0xB1	; 177
     2a4:	ef 2e       	mov	r14, r31
     2a6:	f2 e0       	ldi	r31, 0x02	; 2
     2a8:	ff 2e       	mov	r15, r31
     2aa:	f0 2d       	mov	r31, r0
     2ac:	20 e0       	ldi	r18, 0x00	; 0
     2ae:	30 e0       	ldi	r19, 0x00	; 0
     2b0:	a9 01       	movw	r20, r18
     2b2:	60 e0       	ldi	r22, 0x00	; 0
     2b4:	70 e0       	ldi	r23, 0x00	; 0
     2b6:	cb 01       	movw	r24, r22
     2b8:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
	AFTER(SEC(5), self, removeEntry, 0);
     2bc:	c1 2c       	mov	r12, r1
     2be:	d1 2c       	mov	r13, r1
     2c0:	0f 2e       	mov	r0, r31
     2c2:	f1 e5       	ldi	r31, 0x51	; 81
     2c4:	ef 2e       	mov	r14, r31
     2c6:	f0 e0       	ldi	r31, 0x00	; 0
     2c8:	ff 2e       	mov	r15, r31
     2ca:	f0 2d       	mov	r31, r0
     2cc:	8e 01       	movw	r16, r28
     2ce:	20 e0       	ldi	r18, 0x00	; 0
     2d0:	30 e0       	ldi	r19, 0x00	; 0
     2d2:	a9 01       	movw	r20, r18
     2d4:	6a e5       	ldi	r22, 0x5A	; 90
     2d6:	72 e6       	ldi	r23, 0x62	; 98
     2d8:	82 e0       	ldi	r24, 0x02	; 2
     2da:	90 e0       	ldi	r25, 0x00	; 0
     2dc:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
	removeCar(self, val);
     2e0:	b5 01       	movw	r22, r10
     2e2:	ce 01       	movw	r24, r28
     2e4:	0e 94 f6 00 	call	0x1ec	; 0x1ec <removeCar>
}
     2e8:	df 91       	pop	r29
     2ea:	cf 91       	pop	r28
     2ec:	1f 91       	pop	r17
     2ee:	0f 91       	pop	r16
     2f0:	ff 90       	pop	r15
     2f2:	ef 90       	pop	r14
     2f4:	df 90       	pop	r13
     2f6:	cf 90       	pop	r12
     2f8:	bf 90       	pop	r11
     2fa:	af 90       	pop	r10
     2fc:	08 95       	ret

000002fe <openNorth>:

void clearBridge(TC *self) {
	self->bridgeClear = 0;
}
 
 void openNorth(TC *self, int val) {
     2fe:	af 92       	push	r10
     300:	bf 92       	push	r11
     302:	cf 92       	push	r12
     304:	df 92       	push	r13
     306:	ef 92       	push	r14
     308:	ff 92       	push	r15
     30a:	0f 93       	push	r16
     30c:	1f 93       	push	r17
     30e:	cf 93       	push	r28
     310:	df 93       	push	r29
     312:	ec 01       	movw	r28, r24
     314:	5b 01       	movw	r10, r22
	 self->bridgeClear = 1;
     316:	81 e0       	ldi	r24, 0x01	; 1
     318:	90 e0       	ldi	r25, 0x00	; 0
     31a:	99 a3       	std	Y+33, r25	; 0x21
     31c:	88 a3       	std	Y+32, r24	; 0x20
	 ASYNC(self->lights[0], green, 0);
     31e:	0e 89       	ldd	r16, Y+22	; 0x16
     320:	1f 89       	ldd	r17, Y+23	; 0x17
     322:	c1 2c       	mov	r12, r1
     324:	d1 2c       	mov	r13, r1
     326:	0f 2e       	mov	r0, r31
     328:	f2 ef       	ldi	r31, 0xF2	; 242
     32a:	ef 2e       	mov	r14, r31
     32c:	f4 e0       	ldi	r31, 0x04	; 4
     32e:	ff 2e       	mov	r15, r31
     330:	f0 2d       	mov	r31, r0
     332:	20 e0       	ldi	r18, 0x00	; 0
     334:	30 e0       	ldi	r19, 0x00	; 0
     336:	a9 01       	movw	r20, r18
     338:	60 e0       	ldi	r22, 0x00	; 0
     33a:	70 e0       	ldi	r23, 0x00	; 0
     33c:	cb 01       	movw	r24, r22
     33e:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
	 AFTER(SEC(val), self, closeRoad, 0);
     342:	22 e1       	ldi	r18, 0x12	; 18
     344:	3a e7       	ldi	r19, 0x7A	; 122
     346:	d5 01       	movw	r26, r10
     348:	0e 94 63 11 	call	0x22c6	; 0x22c6 <__usmulhisi3>
     34c:	0f 2e       	mov	r0, r31
     34e:	f8 e7       	ldi	r31, 0x78	; 120
     350:	ef 2e       	mov	r14, r31
     352:	f0 e0       	ldi	r31, 0x00	; 0
     354:	ff 2e       	mov	r15, r31
     356:	f0 2d       	mov	r31, r0
     358:	8e 01       	movw	r16, r28
     35a:	20 e0       	ldi	r18, 0x00	; 0
     35c:	30 e0       	ldi	r19, 0x00	; 0
     35e:	a9 01       	movw	r20, r18
     360:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
}
     364:	df 91       	pop	r29
     366:	cf 91       	pop	r28
     368:	1f 91       	pop	r17
     36a:	0f 91       	pop	r16
     36c:	ff 90       	pop	r15
     36e:	ef 90       	pop	r14
     370:	df 90       	pop	r13
     372:	cf 90       	pop	r12
     374:	bf 90       	pop	r11
     376:	af 90       	pop	r10
     378:	08 95       	ret

0000037a <openSouth>:

void openSouth(TC *self, int val) {
     37a:	af 92       	push	r10
     37c:	bf 92       	push	r11
     37e:	cf 92       	push	r12
     380:	df 92       	push	r13
     382:	ef 92       	push	r14
     384:	ff 92       	push	r15
     386:	0f 93       	push	r16
     388:	1f 93       	push	r17
     38a:	cf 93       	push	r28
     38c:	df 93       	push	r29
     38e:	ec 01       	movw	r28, r24
     390:	5b 01       	movw	r10, r22
	 self->bridgeClear = 1;
     392:	81 e0       	ldi	r24, 0x01	; 1
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	99 a3       	std	Y+33, r25	; 0x21
     398:	88 a3       	std	Y+32, r24	; 0x20
	 ASYNC(self->lights[1], green, 0);
     39a:	08 8d       	ldd	r16, Y+24	; 0x18
     39c:	19 8d       	ldd	r17, Y+25	; 0x19
     39e:	c1 2c       	mov	r12, r1
     3a0:	d1 2c       	mov	r13, r1
     3a2:	0f 2e       	mov	r0, r31
     3a4:	f2 ef       	ldi	r31, 0xF2	; 242
     3a6:	ef 2e       	mov	r14, r31
     3a8:	f4 e0       	ldi	r31, 0x04	; 4
     3aa:	ff 2e       	mov	r15, r31
     3ac:	f0 2d       	mov	r31, r0
     3ae:	20 e0       	ldi	r18, 0x00	; 0
     3b0:	30 e0       	ldi	r19, 0x00	; 0
     3b2:	a9 01       	movw	r20, r18
     3b4:	60 e0       	ldi	r22, 0x00	; 0
     3b6:	70 e0       	ldi	r23, 0x00	; 0
     3b8:	cb 01       	movw	r24, r22
     3ba:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
	 AFTER(SEC(val), self, closeRoad, 1);
     3be:	22 e1       	ldi	r18, 0x12	; 18
     3c0:	3a e7       	ldi	r19, 0x7A	; 122
     3c2:	d5 01       	movw	r26, r10
     3c4:	0e 94 63 11 	call	0x22c6	; 0x22c6 <__usmulhisi3>
     3c8:	cc 24       	eor	r12, r12
     3ca:	c3 94       	inc	r12
     3cc:	d1 2c       	mov	r13, r1
     3ce:	0f 2e       	mov	r0, r31
     3d0:	f8 e7       	ldi	r31, 0x78	; 120
     3d2:	ef 2e       	mov	r14, r31
     3d4:	f0 e0       	ldi	r31, 0x00	; 0
     3d6:	ff 2e       	mov	r15, r31
     3d8:	f0 2d       	mov	r31, r0
     3da:	8e 01       	movw	r16, r28
     3dc:	20 e0       	ldi	r18, 0x00	; 0
     3de:	30 e0       	ldi	r19, 0x00	; 0
     3e0:	a9 01       	movw	r20, r18
     3e2:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
}
     3e6:	df 91       	pop	r29
     3e8:	cf 91       	pop	r28
     3ea:	1f 91       	pop	r17
     3ec:	0f 91       	pop	r16
     3ee:	ff 90       	pop	r15
     3f0:	ef 90       	pop	r14
     3f2:	df 90       	pop	r13
     3f4:	cf 90       	pop	r12
     3f6:	bf 90       	pop	r11
     3f8:	af 90       	pop	r10
     3fa:	08 95       	ret

000003fc <controlling>:
 
void controlling(TC *self) {
     3fc:	cf 92       	push	r12
     3fe:	df 92       	push	r13
     400:	ef 92       	push	r14
     402:	ff 92       	push	r15
     404:	0f 93       	push	r16
     406:	1f 93       	push	r17
     408:	cf 93       	push	r28
     40a:	df 93       	push	r29
     40c:	ec 01       	movw	r28, r24
	int time = 0;
	
	if(self->onBridge == 0 && self->bridgeClear == 0) {
     40e:	8e 8d       	ldd	r24, Y+30	; 0x1e
     410:	9f 8d       	ldd	r25, Y+31	; 0x1f
     412:	89 2b       	or	r24, r25
     414:	09 f0       	breq	.+2      	; 0x418 <__DATA_REGION_LENGTH__+0x18>
     416:	4a c0       	rjmp	.+148    	; 0x4ac <__DATA_REGION_LENGTH__+0xac>
     418:	88 a1       	ldd	r24, Y+32	; 0x20
     41a:	99 a1       	ldd	r25, Y+33	; 0x21
     41c:	89 2b       	or	r24, r25
     41e:	09 f0       	breq	.+2      	; 0x422 <__DATA_REGION_LENGTH__+0x22>
     420:	45 c0       	rjmp	.+138    	; 0x4ac <__DATA_REGION_LENGTH__+0xac>
		if(self->northLast >= 2) {
     422:	8a a1       	ldd	r24, Y+34	; 0x22
     424:	9b a1       	ldd	r25, Y+35	; 0x23
     426:	82 30       	cpi	r24, 0x02	; 2
     428:	91 05       	cpc	r25, r1
     42a:	6c f0       	brlt	.+26     	; 0x446 <__DATA_REGION_LENGTH__+0x46>
			self->northLast = 0;
     42c:	1b a2       	std	Y+35, r1	; 0x23
     42e:	1a a2       	std	Y+34, r1	; 0x22
			self->southLast += 1;
     430:	8c a1       	ldd	r24, Y+36	; 0x24
     432:	9d a1       	ldd	r25, Y+37	; 0x25
     434:	01 96       	adiw	r24, 0x01	; 1
     436:	9d a3       	std	Y+37, r25	; 0x25
     438:	8c a3       	std	Y+36, r24	; 0x24
			time = self->queues[1];
			openSouth(self, time);
     43a:	6c 8d       	ldd	r22, Y+28	; 0x1c
     43c:	7d 8d       	ldd	r23, Y+29	; 0x1d
     43e:	ce 01       	movw	r24, r28
     440:	0e 94 bd 01 	call	0x37a	; 0x37a <openSouth>
     444:	33 c0       	rjmp	.+102    	; 0x4ac <__DATA_REGION_LENGTH__+0xac>
		} else if(self->southLast >= 2) {
     446:	2c a1       	ldd	r18, Y+36	; 0x24
     448:	3d a1       	ldd	r19, Y+37	; 0x25
     44a:	22 30       	cpi	r18, 0x02	; 2
     44c:	31 05       	cpc	r19, r1
     44e:	5c f0       	brlt	.+22     	; 0x466 <__DATA_REGION_LENGTH__+0x66>
			self->northLast += 1;
     450:	01 96       	adiw	r24, 0x01	; 1
     452:	9b a3       	std	Y+35, r25	; 0x23
     454:	8a a3       	std	Y+34, r24	; 0x22
			self->southLast = 0;
     456:	1d a2       	std	Y+37, r1	; 0x25
     458:	1c a2       	std	Y+36, r1	; 0x24
			time = self->queues[0];
			openNorth(self, time);
     45a:	6a 8d       	ldd	r22, Y+26	; 0x1a
     45c:	7b 8d       	ldd	r23, Y+27	; 0x1b
     45e:	ce 01       	movw	r24, r28
     460:	0e 94 7f 01 	call	0x2fe	; 0x2fe <openNorth>
     464:	23 c0       	rjmp	.+70     	; 0x4ac <__DATA_REGION_LENGTH__+0xac>
		} else if(self->queues[0] >= self->queues[1] && self->queues[0] > 0) {				
     466:	4a 8d       	ldd	r20, Y+26	; 0x1a
     468:	5b 8d       	ldd	r21, Y+27	; 0x1b
     46a:	6c 8d       	ldd	r22, Y+28	; 0x1c
     46c:	7d 8d       	ldd	r23, Y+29	; 0x1d
     46e:	46 17       	cp	r20, r22
     470:	57 07       	cpc	r21, r23
     472:	84 f0       	brlt	.+32     	; 0x494 <__DATA_REGION_LENGTH__+0x94>
     474:	14 16       	cp	r1, r20
     476:	15 06       	cpc	r1, r21
     478:	54 f4       	brge	.+20     	; 0x48e <__DATA_REGION_LENGTH__+0x8e>
			time = self->queues[0];													
			self->northLast += 1;													
     47a:	01 96       	adiw	r24, 0x01	; 1
     47c:	9b a3       	std	Y+35, r25	; 0x23
     47e:	8a a3       	std	Y+34, r24	; 0x22
			self->southLast = 0;
     480:	1d a2       	std	Y+37, r1	; 0x25
     482:	1c a2       	std	Y+36, r1	; 0x24
			openNorth(self, time);
     484:	ba 01       	movw	r22, r20
     486:	ce 01       	movw	r24, r28
     488:	0e 94 7f 01 	call	0x2fe	; 0x2fe <openNorth>
     48c:	0f c0       	rjmp	.+30     	; 0x4ac <__DATA_REGION_LENGTH__+0xac>
		} else if(self->queues[1] >= self->queues[0] && self->queues[1] > 0) {
     48e:	64 17       	cp	r22, r20
     490:	75 07       	cpc	r23, r21
     492:	64 f0       	brlt	.+24     	; 0x4ac <__DATA_REGION_LENGTH__+0xac>
     494:	16 16       	cp	r1, r22
     496:	17 06       	cpc	r1, r23
     498:	4c f4       	brge	.+18     	; 0x4ac <__DATA_REGION_LENGTH__+0xac>
			time = self->queues[1];
			self->northLast = 0;
     49a:	1b a2       	std	Y+35, r1	; 0x23
     49c:	1a a2       	std	Y+34, r1	; 0x22
			self->southLast += 1;
     49e:	2f 5f       	subi	r18, 0xFF	; 255
     4a0:	3f 4f       	sbci	r19, 0xFF	; 255
     4a2:	3d a3       	std	Y+37, r19	; 0x25
     4a4:	2c a3       	std	Y+36, r18	; 0x24
			openSouth(self, time);
     4a6:	ce 01       	movw	r24, r28
     4a8:	0e 94 bd 01 	call	0x37a	; 0x37a <openSouth>
		}
	}
	AFTER(MSEC(500), self, controlling, 0);							// Keep running function with 0.5s intervals
     4ac:	c1 2c       	mov	r12, r1
     4ae:	d1 2c       	mov	r13, r1
     4b0:	0f 2e       	mov	r0, r31
     4b2:	fe ef       	ldi	r31, 0xFE	; 254
     4b4:	ef 2e       	mov	r14, r31
     4b6:	f1 e0       	ldi	r31, 0x01	; 1
     4b8:	ff 2e       	mov	r15, r31
     4ba:	f0 2d       	mov	r31, r0
     4bc:	8e 01       	movw	r16, r28
     4be:	20 e0       	ldi	r18, 0x00	; 0
     4c0:	30 e0       	ldi	r19, 0x00	; 0
     4c2:	a9 01       	movw	r20, r18
     4c4:	69 e0       	ldi	r22, 0x09	; 9
     4c6:	7d e3       	ldi	r23, 0x3D	; 61
     4c8:	80 e0       	ldi	r24, 0x00	; 0
     4ca:	90 e0       	ldi	r25, 0x00	; 0
     4cc:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
}
     4d0:	df 91       	pop	r29
     4d2:	cf 91       	pop	r28
     4d4:	1f 91       	pop	r17
     4d6:	0f 91       	pop	r16
     4d8:	ff 90       	pop	r15
     4da:	ef 90       	pop	r14
     4dc:	df 90       	pop	r13
     4de:	cf 90       	pop	r12
     4e0:	08 95       	ret

000004e2 <startup>:

void startup(TC *self) {
     4e2:	cf 92       	push	r12
     4e4:	df 92       	push	r13
     4e6:	ef 92       	push	r14
     4e8:	ff 92       	push	r15
     4ea:	0f 93       	push	r16
     4ec:	1f 93       	push	r17
     4ee:	cf 93       	push	r28
     4f0:	df 93       	push	r29
     4f2:	ec 01       	movw	r28, r24
		ASYNC(&(self->display[0]), updateDisplay, self->queues[0]);
     4f4:	ca 8c       	ldd	r12, Y+26	; 0x1a
     4f6:	db 8c       	ldd	r13, Y+27	; 0x1b
     4f8:	8c 01       	movw	r16, r24
     4fa:	0c 5f       	subi	r16, 0xFC	; 252
     4fc:	1f 4f       	sbci	r17, 0xFF	; 255
     4fe:	0f 2e       	mov	r0, r31
     500:	f1 eb       	ldi	r31, 0xB1	; 177
     502:	ef 2e       	mov	r14, r31
     504:	f2 e0       	ldi	r31, 0x02	; 2
     506:	ff 2e       	mov	r15, r31
     508:	f0 2d       	mov	r31, r0
     50a:	20 e0       	ldi	r18, 0x00	; 0
     50c:	30 e0       	ldi	r19, 0x00	; 0
     50e:	a9 01       	movw	r20, r18
     510:	60 e0       	ldi	r22, 0x00	; 0
     512:	70 e0       	ldi	r23, 0x00	; 0
     514:	cb 01       	movw	r24, r22
     516:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
		ASYNC(&(self->display[1]), updateDisplay, self->onBridge);
     51a:	ce 8c       	ldd	r12, Y+30	; 0x1e
     51c:	df 8c       	ldd	r13, Y+31	; 0x1f
     51e:	0a 5f       	subi	r16, 0xFA	; 250
     520:	1f 4f       	sbci	r17, 0xFF	; 255
     522:	20 e0       	ldi	r18, 0x00	; 0
     524:	30 e0       	ldi	r19, 0x00	; 0
     526:	a9 01       	movw	r20, r18
     528:	60 e0       	ldi	r22, 0x00	; 0
     52a:	70 e0       	ldi	r23, 0x00	; 0
     52c:	cb 01       	movw	r24, r22
     52e:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
		ASYNC(&(self->display[2]), updateDisplay, self->queues[1]);
     532:	cc 8c       	ldd	r12, Y+28	; 0x1c
     534:	dd 8c       	ldd	r13, Y+29	; 0x1d
     536:	0a 5f       	subi	r16, 0xFA	; 250
     538:	1f 4f       	sbci	r17, 0xFF	; 255
     53a:	20 e0       	ldi	r18, 0x00	; 0
     53c:	30 e0       	ldi	r19, 0x00	; 0
     53e:	a9 01       	movw	r20, r18
     540:	60 e0       	ldi	r22, 0x00	; 0
     542:	70 e0       	ldi	r23, 0x00	; 0
     544:	cb 01       	movw	r24, r22
     546:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
		controlling(self);
     54a:	ce 01       	movw	r24, r28
     54c:	0e 94 fe 01 	call	0x3fc	; 0x3fc <controlling>
}
     550:	df 91       	pop	r29
     552:	cf 91       	pop	r28
     554:	1f 91       	pop	r17
     556:	0f 91       	pop	r16
     558:	ff 90       	pop	r15
     55a:	ef 90       	pop	r14
     55c:	df 90       	pop	r13
     55e:	cf 90       	pop	r12
     560:	08 95       	ret

00000562 <updateDisplay>:
     562:	fc 01       	movw	r30, r24
     564:	44 81       	ldd	r20, Z+4	; 0x04
     566:	55 81       	ldd	r21, Z+5	; 0x05
     568:	07 2e       	mov	r0, r23
     56a:	00 0c       	add	r0, r0
     56c:	88 0b       	sbc	r24, r24
     56e:	99 0b       	sbc	r25, r25
     570:	0e 94 9e 03 	call	0x73c	; 0x73c <printAt>
     574:	08 95       	ret

00000576 <comInterrupt>:
 * Created: 2021-03-16 12:25:09
 *  Author: ailio
 */ 
#include "intHandler.h"

void comInterrupt(intH *self) {
     576:	cf 92       	push	r12
     578:	df 92       	push	r13
     57a:	ef 92       	push	r14
     57c:	ff 92       	push	r15
     57e:	0f 93       	push	r16
     580:	1f 93       	push	r17
     582:	dc 01       	movw	r26, r24
	while (!(UCSR0A & (1<<RXC0)));
     584:	e0 ec       	ldi	r30, 0xC0	; 192
     586:	f0 e0       	ldi	r31, 0x00	; 0
     588:	90 81       	ld	r25, Z
     58a:	99 23       	and	r25, r25
     58c:	ec f7       	brge	.-6      	; 0x588 <comInterrupt+0x12>
	int read = UDR0;
     58e:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     592:	30 e0       	ldi	r19, 0x00	; 0
	
	if(read == 1) {
     594:	21 30       	cpi	r18, 0x01	; 1
     596:	31 05       	cpc	r19, r1
     598:	a9 f4       	brne	.+42     	; 0x5c4 <comInterrupt+0x4e>
		ASYNC(self->controlller, addCar, 0);
     59a:	14 96       	adiw	r26, 0x04	; 4
     59c:	0d 91       	ld	r16, X+
     59e:	1c 91       	ld	r17, X
     5a0:	15 97       	sbiw	r26, 0x05	; 5
     5a2:	c1 2c       	mov	r12, r1
     5a4:	d1 2c       	mov	r13, r1
     5a6:	0f 2e       	mov	r0, r31
     5a8:	f2 eb       	ldi	r31, 0xB2	; 178
     5aa:	ef 2e       	mov	r14, r31
     5ac:	f0 e0       	ldi	r31, 0x00	; 0
     5ae:	ff 2e       	mov	r15, r31
     5b0:	f0 2d       	mov	r31, r0
     5b2:	20 e0       	ldi	r18, 0x00	; 0
     5b4:	30 e0       	ldi	r19, 0x00	; 0
     5b6:	a9 01       	movw	r20, r18
     5b8:	60 e0       	ldi	r22, 0x00	; 0
     5ba:	70 e0       	ldi	r23, 0x00	; 0
     5bc:	cb 01       	movw	r24, r22
     5be:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
     5c2:	49 c0       	rjmp	.+146    	; 0x656 <comInterrupt+0xe0>
	} else if (read == 2) {
     5c4:	22 30       	cpi	r18, 0x02	; 2
     5c6:	31 05       	cpc	r19, r1
     5c8:	a9 f4       	brne	.+42     	; 0x5f4 <comInterrupt+0x7e>
		ASYNC(self->controlller, entry, 0);
     5ca:	14 96       	adiw	r26, 0x04	; 4
     5cc:	0d 91       	ld	r16, X+
     5ce:	1c 91       	ld	r17, X
     5d0:	15 97       	sbiw	r26, 0x05	; 5
     5d2:	c1 2c       	mov	r12, r1
     5d4:	d1 2c       	mov	r13, r1
     5d6:	0f 2e       	mov	r0, r31
     5d8:	fa e3       	ldi	r31, 0x3A	; 58
     5da:	ef 2e       	mov	r14, r31
     5dc:	f1 e0       	ldi	r31, 0x01	; 1
     5de:	ff 2e       	mov	r15, r31
     5e0:	f0 2d       	mov	r31, r0
     5e2:	20 e0       	ldi	r18, 0x00	; 0
     5e4:	30 e0       	ldi	r19, 0x00	; 0
     5e6:	a9 01       	movw	r20, r18
     5e8:	60 e0       	ldi	r22, 0x00	; 0
     5ea:	70 e0       	ldi	r23, 0x00	; 0
     5ec:	cb 01       	movw	r24, r22
     5ee:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
     5f2:	31 c0       	rjmp	.+98     	; 0x656 <comInterrupt+0xe0>
	} else if (read == 4) {
     5f4:	24 30       	cpi	r18, 0x04	; 4
     5f6:	31 05       	cpc	r19, r1
     5f8:	b1 f4       	brne	.+44     	; 0x626 <comInterrupt+0xb0>
		ASYNC(self->controlller, addCar, 1);		
     5fa:	14 96       	adiw	r26, 0x04	; 4
     5fc:	0d 91       	ld	r16, X+
     5fe:	1c 91       	ld	r17, X
     600:	15 97       	sbiw	r26, 0x05	; 5
     602:	cc 24       	eor	r12, r12
     604:	c3 94       	inc	r12
     606:	d1 2c       	mov	r13, r1
     608:	0f 2e       	mov	r0, r31
     60a:	f2 eb       	ldi	r31, 0xB2	; 178
     60c:	ef 2e       	mov	r14, r31
     60e:	f0 e0       	ldi	r31, 0x00	; 0
     610:	ff 2e       	mov	r15, r31
     612:	f0 2d       	mov	r31, r0
     614:	20 e0       	ldi	r18, 0x00	; 0
     616:	30 e0       	ldi	r19, 0x00	; 0
     618:	a9 01       	movw	r20, r18
     61a:	60 e0       	ldi	r22, 0x00	; 0
     61c:	70 e0       	ldi	r23, 0x00	; 0
     61e:	cb 01       	movw	r24, r22
     620:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
     624:	18 c0       	rjmp	.+48     	; 0x656 <comInterrupt+0xe0>
	} else if (read == 8) {
     626:	28 30       	cpi	r18, 0x08	; 8
     628:	31 05       	cpc	r19, r1
     62a:	a9 f4       	brne	.+42     	; 0x656 <comInterrupt+0xe0>
		ASYNC(self->controlller, entry, 1);		
     62c:	14 96       	adiw	r26, 0x04	; 4
     62e:	0d 91       	ld	r16, X+
     630:	1c 91       	ld	r17, X
     632:	15 97       	sbiw	r26, 0x05	; 5
     634:	cc 24       	eor	r12, r12
     636:	c3 94       	inc	r12
     638:	d1 2c       	mov	r13, r1
     63a:	0f 2e       	mov	r0, r31
     63c:	fa e3       	ldi	r31, 0x3A	; 58
     63e:	ef 2e       	mov	r14, r31
     640:	f1 e0       	ldi	r31, 0x01	; 1
     642:	ff 2e       	mov	r15, r31
     644:	f0 2d       	mov	r31, r0
     646:	20 e0       	ldi	r18, 0x00	; 0
     648:	30 e0       	ldi	r19, 0x00	; 0
     64a:	a9 01       	movw	r20, r18
     64c:	60 e0       	ldi	r22, 0x00	; 0
     64e:	70 e0       	ldi	r23, 0x00	; 0
     650:	cb 01       	movw	r24, r22
     652:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
	}
     656:	1f 91       	pop	r17
     658:	0f 91       	pop	r16
     65a:	ff 90       	pop	r15
     65c:	ef 90       	pop	r14
     65e:	df 90       	pop	r13
     660:	cf 90       	pop	r12
     662:	08 95       	ret

00000664 <writeChar>:
     664:	66 30       	cpi	r22, 0x06	; 6
     666:	71 05       	cpc	r23, r1
     668:	08 f0       	brcs	.+2      	; 0x66c <writeChar+0x8>
     66a:	5a c0       	rjmp	.+180    	; 0x720 <writeChar+0xbc>
     66c:	9f e9       	ldi	r25, 0x9F	; 159
     66e:	98 0f       	add	r25, r24
     670:	9a 31       	cpi	r25, 0x1A	; 26
     672:	48 f4       	brcc	.+18     	; 0x686 <writeChar+0x22>
     674:	a8 2f       	mov	r26, r24
     676:	b0 e0       	ldi	r27, 0x00	; 0
     678:	aa 0f       	add	r26, r26
     67a:	bb 1f       	adc	r27, r27
     67c:	aa 5b       	subi	r26, 0xBA	; 186
     67e:	bf 4f       	sbci	r27, 0xFF	; 255
     680:	2d 91       	ld	r18, X+
     682:	3c 91       	ld	r19, X
     684:	19 c0       	rjmp	.+50     	; 0x6b8 <writeChar+0x54>
     686:	90 ed       	ldi	r25, 0xD0	; 208
     688:	98 0f       	add	r25, r24
     68a:	9a 30       	cpi	r25, 0x0A	; 10
     68c:	48 f4       	brcc	.+18     	; 0x6a0 <writeChar+0x3c>
     68e:	a8 2f       	mov	r26, r24
     690:	b0 e0       	ldi	r27, 0x00	; 0
     692:	aa 0f       	add	r26, r26
     694:	bb 1f       	adc	r27, r27
     696:	a4 52       	subi	r26, 0x24	; 36
     698:	bf 4f       	sbci	r27, 0xFF	; 255
     69a:	2d 91       	ld	r18, X+
     69c:	3c 91       	ld	r19, X
     69e:	0c c0       	rjmp	.+24     	; 0x6b8 <writeChar+0x54>
     6a0:	9f eb       	ldi	r25, 0xBF	; 191
     6a2:	98 0f       	add	r25, r24
     6a4:	9a 31       	cpi	r25, 0x1A	; 26
     6a6:	e0 f5       	brcc	.+120    	; 0x720 <writeChar+0xbc>
     6a8:	a8 2f       	mov	r26, r24
     6aa:	b0 e0       	ldi	r27, 0x00	; 0
     6ac:	aa 0f       	add	r26, r26
     6ae:	bb 1f       	adc	r27, r27
     6b0:	aa 57       	subi	r26, 0x7A	; 122
     6b2:	bf 4f       	sbci	r27, 0xFF	; 255
     6b4:	2d 91       	ld	r18, X+
     6b6:	3c 91       	ld	r19, X
     6b8:	64 30       	cpi	r22, 0x04	; 4
     6ba:	71 05       	cpc	r23, r1
     6bc:	34 f4       	brge	.+12     	; 0x6ca <writeChar+0x66>
     6be:	62 30       	cpi	r22, 0x02	; 2
     6c0:	71 05       	cpc	r23, r1
     6c2:	54 f4       	brge	.+20     	; 0x6d8 <writeChar+0x74>
     6c4:	77 23       	and	r23, r23
     6c6:	2c f4       	brge	.+10     	; 0x6d2 <writeChar+0x6e>
     6c8:	0c c0       	rjmp	.+24     	; 0x6e2 <writeChar+0x7e>
     6ca:	66 30       	cpi	r22, 0x06	; 6
     6cc:	71 05       	cpc	r23, r1
     6ce:	3c f0       	brlt	.+14     	; 0x6de <writeChar+0x7a>
     6d0:	08 c0       	rjmp	.+16     	; 0x6e2 <writeChar+0x7e>
     6d2:	ec ee       	ldi	r30, 0xEC	; 236
     6d4:	f0 e0       	ldi	r31, 0x00	; 0
     6d6:	05 c0       	rjmp	.+10     	; 0x6e2 <writeChar+0x7e>
     6d8:	ed ee       	ldi	r30, 0xED	; 237
     6da:	f0 e0       	ldi	r31, 0x00	; 0
     6dc:	02 c0       	rjmp	.+4      	; 0x6e2 <writeChar+0x7e>
     6de:	ee ee       	ldi	r30, 0xEE	; 238
     6e0:	f0 e0       	ldi	r31, 0x00	; 0
     6e2:	db 01       	movw	r26, r22
     6e4:	a1 70       	andi	r26, 0x01	; 1
     6e6:	bb 27       	eor	r27, r27
     6e8:	60 ff       	sbrs	r22, 0
     6ea:	02 c0       	rjmp	.+4      	; 0x6f0 <writeChar+0x8c>
     6ec:	6f e0       	ldi	r22, 0x0F	; 15
     6ee:	01 c0       	rjmp	.+2      	; 0x6f2 <writeChar+0x8e>
     6f0:	60 ef       	ldi	r22, 0xF0	; 240
     6f2:	af 01       	movw	r20, r30
     6f4:	4c 5e       	subi	r20, 0xEC	; 236
     6f6:	5f 4f       	sbci	r21, 0xFF	; 255
     6f8:	82 2f       	mov	r24, r18
     6fa:	8f 70       	andi	r24, 0x0F	; 15
     6fc:	32 95       	swap	r19
     6fe:	22 95       	swap	r18
     700:	2f 70       	andi	r18, 0x0F	; 15
     702:	23 27       	eor	r18, r19
     704:	3f 70       	andi	r19, 0x0F	; 15
     706:	23 27       	eor	r18, r19
     708:	10 97       	sbiw	r26, 0x00	; 0
     70a:	11 f0       	breq	.+4      	; 0x710 <writeChar+0xac>
     70c:	82 95       	swap	r24
     70e:	80 7f       	andi	r24, 0xF0	; 240
     710:	90 81       	ld	r25, Z
     712:	96 23       	and	r25, r22
     714:	89 2b       	or	r24, r25
     716:	80 83       	st	Z, r24
     718:	35 96       	adiw	r30, 0x05	; 5
     71a:	4e 17       	cp	r20, r30
     71c:	5f 07       	cpc	r21, r31
     71e:	61 f7       	brne	.-40     	; 0x6f8 <writeChar+0x94>
     720:	08 95       	ret

00000722 <LCD_Init>:
     722:	87 eb       	ldi	r24, 0xB7	; 183
     724:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
     728:	87 e0       	ldi	r24, 0x07	; 7
     72a:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
     72e:	8f e0       	ldi	r24, 0x0F	; 15
     730:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
     734:	80 ec       	ldi	r24, 0xC0	; 192
     736:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
     73a:	08 95       	ret

0000073c <printAt>:
     73c:	8f 92       	push	r8
     73e:	9f 92       	push	r9
     740:	af 92       	push	r10
     742:	bf 92       	push	r11
     744:	cf 92       	push	r12
     746:	df 92       	push	r13
     748:	ef 92       	push	r14
     74a:	ff 92       	push	r15
     74c:	cf 93       	push	r28
     74e:	df 93       	push	r29
     750:	4b 01       	movw	r8, r22
     752:	5c 01       	movw	r10, r24
     754:	ea 01       	movw	r28, r20
     756:	24 e6       	ldi	r18, 0x64	; 100
     758:	30 e0       	ldi	r19, 0x00	; 0
     75a:	40 e0       	ldi	r20, 0x00	; 0
     75c:	50 e0       	ldi	r21, 0x00	; 0
     75e:	0e 94 44 11 	call	0x2288	; 0x2288 <__divmodsi4>
     762:	0f 2e       	mov	r0, r31
     764:	fa e0       	ldi	r31, 0x0A	; 10
     766:	cf 2e       	mov	r12, r31
     768:	d1 2c       	mov	r13, r1
     76a:	e1 2c       	mov	r14, r1
     76c:	f1 2c       	mov	r15, r1
     76e:	f0 2d       	mov	r31, r0
     770:	a7 01       	movw	r20, r14
     772:	96 01       	movw	r18, r12
     774:	0e 94 44 11 	call	0x2288	; 0x2288 <__divmodsi4>
     778:	be 01       	movw	r22, r28
     77a:	80 e3       	ldi	r24, 0x30	; 48
     77c:	82 0f       	add	r24, r18
     77e:	0e 94 32 03 	call	0x664	; 0x664 <writeChar>
     782:	21 96       	adiw	r28, 0x01	; 1
     784:	c5 01       	movw	r24, r10
     786:	b4 01       	movw	r22, r8
     788:	a7 01       	movw	r20, r14
     78a:	96 01       	movw	r18, r12
     78c:	0e 94 44 11 	call	0x2288	; 0x2288 <__divmodsi4>
     790:	86 2f       	mov	r24, r22
     792:	be 01       	movw	r22, r28
     794:	80 5d       	subi	r24, 0xD0	; 208
     796:	0e 94 32 03 	call	0x664	; 0x664 <writeChar>
     79a:	df 91       	pop	r29
     79c:	cf 91       	pop	r28
     79e:	ff 90       	pop	r15
     7a0:	ef 90       	pop	r14
     7a2:	df 90       	pop	r13
     7a4:	cf 90       	pop	r12
     7a6:	bf 90       	pop	r11
     7a8:	af 90       	pop	r10
     7aa:	9f 90       	pop	r9
     7ac:	8f 90       	pop	r8
     7ae:	08 95       	ret

000007b0 <main>:
#include "intHandler.h"
#include "LCD_driver.h"
#include <stdint.h>

int main(void)
{
     7b0:	ef 92       	push	r14
     7b2:	ff 92       	push	r15
     7b4:	0f 93       	push	r16
     7b6:	1f 93       	push	r17
     7b8:	cf 93       	push	r28
     7ba:	df 93       	push	r29
     7bc:	cd b7       	in	r28, 0x3d	; 61
     7be:	de b7       	in	r29, 0x3e	; 62
     7c0:	c4 54       	subi	r28, 0x44	; 68
     7c2:	d1 09       	sbc	r29, r1
     7c4:	0f b6       	in	r0, 0x3f	; 63
     7c6:	f8 94       	cli
     7c8:	de bf       	out	0x3e, r29	; 62
     7ca:	0f be       	out	0x3f, r0	; 63
     7cc:	cd bf       	out	0x3d, r28	; 61
	outH out = initoutH();
     7ce:	1a 82       	std	Y+2, r1	; 0x02
     7d0:	19 82       	std	Y+1, r1	; 0x01
     7d2:	1c 82       	std	Y+4, r1	; 0x04
     7d4:	1b 82       	std	Y+3, r1	; 0x03
	light nLight = initlight(&out, 0);
     7d6:	1e 82       	std	Y+6, r1	; 0x06
     7d8:	1d 82       	std	Y+5, r1	; 0x05
     7da:	18 86       	std	Y+8, r1	; 0x08
     7dc:	1f 82       	std	Y+7, r1	; 0x07
     7de:	8e 01       	movw	r16, r28
     7e0:	0f 5f       	subi	r16, 0xFF	; 255
     7e2:	1f 4f       	sbci	r17, 0xFF	; 255
     7e4:	1a 87       	std	Y+10, r17	; 0x0a
     7e6:	09 87       	std	Y+9, r16	; 0x09
     7e8:	1c 86       	std	Y+12, r1	; 0x0c
     7ea:	1b 86       	std	Y+11, r1	; 0x0b
     7ec:	1e 86       	std	Y+14, r1	; 0x0e
     7ee:	1d 86       	std	Y+13, r1	; 0x0d
	light sLight = initlight(&out, 1);
     7f0:	18 8a       	std	Y+16, r1	; 0x10
     7f2:	1f 86       	std	Y+15, r1	; 0x0f
     7f4:	1a 8a       	std	Y+18, r1	; 0x12
     7f6:	19 8a       	std	Y+17, r1	; 0x11
     7f8:	1c 8b       	std	Y+20, r17	; 0x14
     7fa:	0b 8b       	std	Y+19, r16	; 0x13
     7fc:	1e 8a       	std	Y+22, r1	; 0x16
     7fe:	1d 8a       	std	Y+21, r1	; 0x15
     800:	81 e0       	ldi	r24, 0x01	; 1
     802:	90 e0       	ldi	r25, 0x00	; 0
     804:	98 8f       	std	Y+24, r25	; 0x18
     806:	8f 8b       	std	Y+23, r24	; 0x17
	TC cont = initTC(&nLight, &sLight);
     808:	1a 8e       	std	Y+26, r1	; 0x1a
     80a:	19 8e       	std	Y+25, r1	; 0x19
     80c:	1c 8e       	std	Y+28, r1	; 0x1c
     80e:	1b 8e       	std	Y+27, r1	; 0x1b
     810:	1e 8e       	std	Y+30, r1	; 0x1e
     812:	1d 8e       	std	Y+29, r1	; 0x1d
     814:	18 a2       	std	Y+32, r1	; 0x20
     816:	1f 8e       	std	Y+31, r1	; 0x1f
     818:	84 e0       	ldi	r24, 0x04	; 4
     81a:	90 e0       	ldi	r25, 0x00	; 0
     81c:	9a a3       	std	Y+34, r25	; 0x22
     81e:	89 a3       	std	Y+33, r24	; 0x21
     820:	1c a2       	std	Y+36, r1	; 0x24
     822:	1b a2       	std	Y+35, r1	; 0x23
     824:	1e a2       	std	Y+38, r1	; 0x26
     826:	1d a2       	std	Y+37, r1	; 0x25
     828:	82 e0       	ldi	r24, 0x02	; 2
     82a:	90 e0       	ldi	r25, 0x00	; 0
     82c:	98 a7       	std	Y+40, r25	; 0x28
     82e:	8f a3       	std	Y+39, r24	; 0x27
     830:	1a a6       	std	Y+42, r1	; 0x2a
     832:	19 a6       	std	Y+41, r1	; 0x29
     834:	1c a6       	std	Y+44, r1	; 0x2c
     836:	1b a6       	std	Y+43, r1	; 0x2b
     838:	1e a6       	std	Y+46, r1	; 0x2e
     83a:	1d a6       	std	Y+45, r1	; 0x2d
     83c:	ce 01       	movw	r24, r28
     83e:	05 96       	adiw	r24, 0x05	; 5
     840:	98 ab       	std	Y+48, r25	; 0x30
     842:	8f a7       	std	Y+47, r24	; 0x2f
     844:	0a 96       	adiw	r24, 0x0a	; 10
     846:	9a ab       	std	Y+50, r25	; 0x32
     848:	89 ab       	std	Y+49, r24	; 0x31
     84a:	1c aa       	std	Y+52, r1	; 0x34
     84c:	1b aa       	std	Y+51, r1	; 0x33
     84e:	1e aa       	std	Y+54, r1	; 0x36
     850:	1d aa       	std	Y+53, r1	; 0x35
     852:	18 ae       	std	Y+56, r1	; 0x38
     854:	1f aa       	std	Y+55, r1	; 0x37
     856:	1a ae       	std	Y+58, r1	; 0x3a
     858:	19 ae       	std	Y+57, r1	; 0x39
     85a:	1c ae       	std	Y+60, r1	; 0x3c
     85c:	1b ae       	std	Y+59, r1	; 0x3b
     85e:	1e ae       	std	Y+62, r1	; 0x3e
     860:	1d ae       	std	Y+61, r1	; 0x3d
	intH interr = initintH(&cont);
     862:	21 96       	adiw	r28, 0x01	; 1
     864:	1f ae       	std	Y+63, r1	; 0x3f
     866:	1e ae       	std	Y+62, r1	; 0x3e
     868:	21 97       	sbiw	r28, 0x01	; 1
     86a:	23 96       	adiw	r28, 0x03	; 3
     86c:	1f ae       	std	Y+63, r1	; 0x3f
     86e:	1e ae       	std	Y+62, r1	; 0x3e
     870:	23 97       	sbiw	r28, 0x03	; 3
     872:	7e 01       	movw	r14, r28
     874:	89 e1       	ldi	r24, 0x19	; 25
     876:	e8 0e       	add	r14, r24
     878:	f1 1c       	adc	r15, r1
     87a:	25 96       	adiw	r28, 0x05	; 5
     87c:	ff ae       	std	Y+63, r15	; 0x3f
     87e:	ee ae       	std	Y+62, r14	; 0x3e
     880:	25 97       	sbiw	r28, 0x05	; 5
	CLKPR = 0x80;
     882:	e1 e6       	ldi	r30, 0x61	; 97
     884:	f0 e0       	ldi	r31, 0x00	; 0
     886:	80 e8       	ldi	r24, 0x80	; 128
     888:	80 83       	st	Z, r24
	CLKPR = 0x00;
     88a:	10 82       	st	Z, r1
	LCD_Init();
     88c:	0e 94 91 03 	call	0x722	; 0x722 <LCD_Init>
	initUSART(&out);
     890:	c8 01       	movw	r24, r16
     892:	0e 94 76 04 	call	0x8ec	; 0x8ec <initUSART>
	INSTALL(&interr, comInterrupt, IRQ_USART0_RX);
     896:	48 e0       	ldi	r20, 0x08	; 8
     898:	6b eb       	ldi	r22, 0xBB	; 187
     89a:	72 e0       	ldi	r23, 0x02	; 2
     89c:	ce 01       	movw	r24, r28
     89e:	cf 96       	adiw	r24, 0x3f	; 63
     8a0:	0e 94 0e 11 	call	0x221c	; 0x221c <install>
 	INSTALL(&interr, comInterrupt, IRQ_USART0_TX);
     8a4:	4a e0       	ldi	r20, 0x0A	; 10
     8a6:	6b eb       	ldi	r22, 0xBB	; 187
     8a8:	72 e0       	ldi	r23, 0x02	; 2
     8aa:	ce 01       	movw	r24, r28
     8ac:	cf 96       	adiw	r24, 0x3f	; 63
     8ae:	0e 94 0e 11 	call	0x221c	; 0x221c <install>
 	return TINYTIMBER(&cont, startup, 0);
     8b2:	40 e0       	ldi	r20, 0x00	; 0
     8b4:	50 e0       	ldi	r21, 0x00	; 0
     8b6:	61 e7       	ldi	r22, 0x71	; 113
     8b8:	72 e0       	ldi	r23, 0x02	; 2
     8ba:	c7 01       	movw	r24, r14
     8bc:	0e 94 28 11 	call	0x2250	; 0x2250 <tinytimber>
}
     8c0:	cc 5b       	subi	r28, 0xBC	; 188
     8c2:	df 4f       	sbci	r29, 0xFF	; 255
     8c4:	0f b6       	in	r0, 0x3f	; 63
     8c6:	f8 94       	cli
     8c8:	de bf       	out	0x3e, r29	; 62
     8ca:	0f be       	out	0x3f, r0	; 63
     8cc:	cd bf       	out	0x3d, r28	; 61
     8ce:	df 91       	pop	r29
     8d0:	cf 91       	pop	r28
     8d2:	1f 91       	pop	r17
     8d4:	0f 91       	pop	r16
     8d6:	ff 90       	pop	r15
     8d8:	ef 90       	pop	r14
     8da:	08 95       	ret

000008dc <transmit>:
2 -> South green light
3 -> South red light
*/
void transmit(outH *self, int val) {
	
	while( !(UCSR0A & (1<<UDRE0)) );	//Wait for empty buffer
     8dc:	e0 ec       	ldi	r30, 0xC0	; 192
     8de:	f0 e0       	ldi	r31, 0x00	; 0
     8e0:	80 81       	ld	r24, Z
     8e2:	85 ff       	sbrs	r24, 5
     8e4:	fd cf       	rjmp	.-6      	; 0x8e0 <transmit+0x4>
	
	UDR0 = val;	//"send" data
     8e6:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     8ea:	08 95       	ret

000008ec <initUSART>:
}

void initUSART(outH *self) {
	//Set baud rate
	UBRR0H = (unsigned char)(51>>8); 
     8ec:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7fc0c5>
	UBRR0L = (unsigned char) 51;
     8f0:	83 e3       	ldi	r24, 0x33	; 51
     8f2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7fc0c4>
	//Enable transmit and receive
	UCSR0B |= (1<<RXEN0) | (1<<TXEN0) | (1<<RXCIE0);
     8f6:	e1 ec       	ldi	r30, 0xC1	; 193
     8f8:	f0 e0       	ldi	r31, 0x00	; 0
     8fa:	80 81       	ld	r24, Z
     8fc:	88 69       	ori	r24, 0x98	; 152
     8fe:	80 83       	st	Z, r24
     900:	08 95       	ret

00000902 <write>:
void red(light *self) {
	self->status = 0;
	write(self);
}

void write(light *self) {
     902:	cf 92       	push	r12
     904:	df 92       	push	r13
     906:	ef 92       	push	r14
     908:	ff 92       	push	r15
     90a:	0f 93       	push	r16
     90c:	1f 93       	push	r17
     90e:	fc 01       	movw	r30, r24
	if(self->pos == 0) {	//North light
     910:	80 85       	ldd	r24, Z+8	; 0x08
     912:	91 85       	ldd	r25, Z+9	; 0x09
     914:	89 2b       	or	r24, r25
     916:	81 f5       	brne	.+96     	; 0x978 <write+0x76>
		switch(self->status){
     918:	86 81       	ldd	r24, Z+6	; 0x06
     91a:	97 81       	ldd	r25, Z+7	; 0x07
     91c:	00 97       	sbiw	r24, 0x00	; 0
     91e:	b9 f0       	breq	.+46     	; 0x94e <write+0x4c>
     920:	01 97       	sbiw	r24, 0x01	; 1
     922:	09 f0       	breq	.+2      	; 0x926 <write+0x24>
     924:	58 c0       	rjmp	.+176    	; 0x9d6 <write+0xd4>
			case 1:
				ASYNC(self->output, transmit, 1);	//North green light
     926:	04 81       	ldd	r16, Z+4	; 0x04
     928:	15 81       	ldd	r17, Z+5	; 0x05
     92a:	cc 24       	eor	r12, r12
     92c:	c3 94       	inc	r12
     92e:	d1 2c       	mov	r13, r1
     930:	0f 2e       	mov	r0, r31
     932:	fe e6       	ldi	r31, 0x6E	; 110
     934:	ef 2e       	mov	r14, r31
     936:	f4 e0       	ldi	r31, 0x04	; 4
     938:	ff 2e       	mov	r15, r31
     93a:	f0 2d       	mov	r31, r0
     93c:	20 e0       	ldi	r18, 0x00	; 0
     93e:	30 e0       	ldi	r19, 0x00	; 0
     940:	a9 01       	movw	r20, r18
     942:	60 e0       	ldi	r22, 0x00	; 0
     944:	70 e0       	ldi	r23, 0x00	; 0
     946:	cb 01       	movw	r24, r22
     948:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
				break;
     94c:	44 c0       	rjmp	.+136    	; 0x9d6 <write+0xd4>
			case 0:
				ASYNC(self->output, transmit, 2);	//North red light
     94e:	04 81       	ldd	r16, Z+4	; 0x04
     950:	15 81       	ldd	r17, Z+5	; 0x05
     952:	68 94       	set
     954:	cc 24       	eor	r12, r12
     956:	c1 f8       	bld	r12, 1
     958:	d1 2c       	mov	r13, r1
     95a:	0f 2e       	mov	r0, r31
     95c:	fe e6       	ldi	r31, 0x6E	; 110
     95e:	ef 2e       	mov	r14, r31
     960:	f4 e0       	ldi	r31, 0x04	; 4
     962:	ff 2e       	mov	r15, r31
     964:	f0 2d       	mov	r31, r0
     966:	20 e0       	ldi	r18, 0x00	; 0
     968:	30 e0       	ldi	r19, 0x00	; 0
     96a:	a9 01       	movw	r20, r18
     96c:	60 e0       	ldi	r22, 0x00	; 0
     96e:	70 e0       	ldi	r23, 0x00	; 0
     970:	cb 01       	movw	r24, r22
     972:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
     976:	2f c0       	rjmp	.+94     	; 0x9d6 <write+0xd4>
		}
	} else {				//South light
		switch(self->status){
     978:	86 81       	ldd	r24, Z+6	; 0x06
     97a:	97 81       	ldd	r25, Z+7	; 0x07
     97c:	00 97       	sbiw	r24, 0x00	; 0
     97e:	b9 f0       	breq	.+46     	; 0x9ae <write+0xac>
     980:	01 97       	sbiw	r24, 0x01	; 1
     982:	49 f5       	brne	.+82     	; 0x9d6 <write+0xd4>
			case 1:
				ASYNC(self->output, transmit, 4);	//South green light
     984:	04 81       	ldd	r16, Z+4	; 0x04
     986:	15 81       	ldd	r17, Z+5	; 0x05
     988:	68 94       	set
     98a:	cc 24       	eor	r12, r12
     98c:	c2 f8       	bld	r12, 2
     98e:	d1 2c       	mov	r13, r1
     990:	0f 2e       	mov	r0, r31
     992:	fe e6       	ldi	r31, 0x6E	; 110
     994:	ef 2e       	mov	r14, r31
     996:	f4 e0       	ldi	r31, 0x04	; 4
     998:	ff 2e       	mov	r15, r31
     99a:	f0 2d       	mov	r31, r0
     99c:	20 e0       	ldi	r18, 0x00	; 0
     99e:	30 e0       	ldi	r19, 0x00	; 0
     9a0:	a9 01       	movw	r20, r18
     9a2:	60 e0       	ldi	r22, 0x00	; 0
     9a4:	70 e0       	ldi	r23, 0x00	; 0
     9a6:	cb 01       	movw	r24, r22
     9a8:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
				break;
     9ac:	14 c0       	rjmp	.+40     	; 0x9d6 <write+0xd4>
			case 0:
				ASYNC(self->output, transmit, 8);	//South red light
     9ae:	04 81       	ldd	r16, Z+4	; 0x04
     9b0:	15 81       	ldd	r17, Z+5	; 0x05
     9b2:	68 94       	set
     9b4:	cc 24       	eor	r12, r12
     9b6:	c3 f8       	bld	r12, 3
     9b8:	d1 2c       	mov	r13, r1
     9ba:	0f 2e       	mov	r0, r31
     9bc:	fe e6       	ldi	r31, 0x6E	; 110
     9be:	ef 2e       	mov	r14, r31
     9c0:	f4 e0       	ldi	r31, 0x04	; 4
     9c2:	ff 2e       	mov	r15, r31
     9c4:	f0 2d       	mov	r31, r0
     9c6:	20 e0       	ldi	r18, 0x00	; 0
     9c8:	30 e0       	ldi	r19, 0x00	; 0
     9ca:	a9 01       	movw	r20, r18
     9cc:	60 e0       	ldi	r22, 0x00	; 0
     9ce:	70 e0       	ldi	r23, 0x00	; 0
     9d0:	cb 01       	movw	r24, r22
     9d2:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
				break;
		}
	}
     9d6:	1f 91       	pop	r17
     9d8:	0f 91       	pop	r16
     9da:	ff 90       	pop	r15
     9dc:	ef 90       	pop	r14
     9de:	df 90       	pop	r13
     9e0:	cf 90       	pop	r12
     9e2:	08 95       	ret

000009e4 <green>:
 *  Author: ailio
 */ 
#include "stopLight.h"

void green(light *self) {
	self->status = 1;
     9e4:	21 e0       	ldi	r18, 0x01	; 1
     9e6:	30 e0       	ldi	r19, 0x00	; 0
     9e8:	fc 01       	movw	r30, r24
     9ea:	37 83       	std	Z+7, r19	; 0x07
     9ec:	26 83       	std	Z+6, r18	; 0x06
	write(self);
     9ee:	0e 94 81 04 	call	0x902	; 0x902 <write>
     9f2:	08 95       	ret

000009f4 <red>:
}

void red(light *self) {
	self->status = 0;
     9f4:	fc 01       	movw	r30, r24
     9f6:	17 82       	std	Z+7, r1	; 0x07
     9f8:	16 82       	std	Z+6, r1	; 0x06
	write(self);
     9fa:	0e 94 81 04 	call	0x902	; 0x902 <write>
     9fe:	08 95       	ret

00000a00 <initialize>:
     a00:	cf 93       	push	r28
     a02:	df 93       	push	r29
     a04:	00 d0       	rcall	.+0      	; 0xa06 <initialize+0x6>
     a06:	00 d0       	rcall	.+0      	; 0xa08 <initialize+0x8>
     a08:	cd b7       	in	r28, 0x3d	; 61
     a0a:	de b7       	in	r29, 0x3e	; 62
     a0c:	83 e4       	ldi	r24, 0x43	; 67
     a0e:	92 e0       	ldi	r25, 0x02	; 2
     a10:	23 e2       	ldi	r18, 0x23	; 35
     a12:	33 e0       	ldi	r19, 0x03	; 3
     a14:	fc 01       	movw	r30, r24
     a16:	70 97       	sbiw	r30, 0x10	; 16
     a18:	91 83       	std	Z+1, r25	; 0x01
     a1a:	80 83       	st	Z, r24
     a1c:	40 96       	adiw	r24, 0x10	; 16
     a1e:	82 17       	cp	r24, r18
     a20:	93 07       	cpc	r25, r19
     a22:	c1 f7       	brne	.-16     	; 0xa14 <initialize+0x14>
     a24:	10 92 14 03 	sts	0x0314, r1	; 0x800314 <messages+0xe1>
     a28:	10 92 13 03 	sts	0x0313, r1	; 0x800313 <messages+0xe0>
     a2c:	ee e7       	ldi	r30, 0x7E	; 126
     a2e:	f1 e0       	ldi	r31, 0x01	; 1
     a30:	8b e9       	ldi	r24, 0x9B	; 155
     a32:	91 e0       	ldi	r25, 0x01	; 1
     a34:	91 83       	std	Z+1, r25	; 0x01
     a36:	80 83       	st	Z, r24
     a38:	88 eb       	ldi	r24, 0xB8	; 184
     a3a:	91 e0       	ldi	r25, 0x01	; 1
     a3c:	96 8f       	std	Z+30, r25	; 0x1e
     a3e:	85 8f       	std	Z+29, r24	; 0x1d
     a40:	a5 ed       	ldi	r26, 0xD5	; 213
     a42:	b1 e0       	ldi	r27, 0x01	; 1
     a44:	b3 af       	std	Z+59, r27	; 0x3b
     a46:	a2 af       	std	Z+58, r26	; 0x3a
     a48:	1d 92       	st	X+, r1
     a4a:	1c 92       	st	X, r1
     a4c:	fa 83       	std	Y+2, r31	; 0x02
     a4e:	e9 83       	std	Y+1, r30	; 0x01
     a50:	ef e7       	ldi	r30, 0x7F	; 127
     a52:	f3 e0       	ldi	r31, 0x03	; 3
     a54:	fc 83       	std	Y+4, r31	; 0x04
     a56:	eb 83       	std	Y+3, r30	; 0x03
     a58:	89 81       	ldd	r24, Y+1	; 0x01
     a5a:	9a 81       	ldd	r25, Y+2	; 0x02
     a5c:	06 96       	adiw	r24, 0x06	; 6
     a5e:	0e 94 9b 11 	call	0x2336	; 0x2336 <setjmp>
     a62:	8b 81       	ldd	r24, Y+3	; 0x03
     a64:	9c 81       	ldd	r25, Y+4	; 0x04
     a66:	e9 81       	ldd	r30, Y+1	; 0x01
     a68:	fa 81       	ldd	r31, Y+2	; 0x02
     a6a:	97 8b       	std	Z+23, r25	; 0x17
     a6c:	86 8b       	std	Z+22, r24	; 0x16
     a6e:	91 8f       	std	Z+25, r25	; 0x19
     a70:	80 8f       	std	Z+24, r24	; 0x18
     a72:	80 ea       	ldi	r24, 0xA0	; 160
     a74:	90 e1       	ldi	r25, 0x10	; 16
     a76:	94 8f       	std	Z+28, r25	; 0x1c
     a78:	83 8f       	std	Z+27, r24	; 0x1b
     a7a:	15 82       	std	Z+5, r1	; 0x05
     a7c:	14 82       	std	Z+4, r1	; 0x04
     a7e:	7d 96       	adiw	r30, 0x1d	; 29
     a80:	fa 83       	std	Y+2, r31	; 0x02
     a82:	e9 83       	std	Y+1, r30	; 0x01
     a84:	eb 81       	ldd	r30, Y+3	; 0x03
     a86:	fc 81       	ldd	r31, Y+4	; 0x04
     a88:	e0 5a       	subi	r30, 0xA0	; 160
     a8a:	ff 4f       	sbci	r31, 0xFF	; 255
     a8c:	fc 83       	std	Y+4, r31	; 0x04
     a8e:	eb 83       	std	Y+3, r30	; 0x03
     a90:	89 81       	ldd	r24, Y+1	; 0x01
     a92:	9a 81       	ldd	r25, Y+2	; 0x02
     a94:	82 5f       	subi	r24, 0xF2	; 242
     a96:	91 40       	sbci	r25, 0x01	; 1
     a98:	f9 f6       	brne	.-66     	; 0xa58 <initialize+0x58>
     a9a:	e6 e1       	ldi	r30, 0x16	; 22
     a9c:	f2 e0       	ldi	r31, 0x02	; 2
     a9e:	11 82       	std	Z+1, r1	; 0x01
     aa0:	10 82       	st	Z, r1
     aa2:	15 82       	std	Z+5, r1	; 0x05
     aa4:	14 82       	std	Z+4, r1	; 0x04
     aa6:	13 82       	std	Z+3, r1	; 0x03
     aa8:	12 82       	std	Z+2, r1	; 0x02
     aaa:	e1 e6       	ldi	r30, 0x61	; 97
     aac:	f0 e0       	ldi	r31, 0x00	; 0
     aae:	80 e8       	ldi	r24, 0x80	; 128
     ab0:	80 83       	st	Z, r24
     ab2:	10 82       	st	Z, r1
     ab4:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ab8:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     abc:	84 e0       	ldi	r24, 0x04	; 4
     abe:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     ac2:	81 e0       	ldi	r24, 0x01	; 1
     ac4:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     ac8:	0f 90       	pop	r0
     aca:	0f 90       	pop	r0
     acc:	0f 90       	pop	r0
     ace:	0f 90       	pop	r0
     ad0:	df 91       	pop	r29
     ad2:	cf 91       	pop	r28
     ad4:	08 95       	ret

00000ad6 <dispatch>:
     ad6:	cf 93       	push	r28
     ad8:	df 93       	push	r29
     ada:	00 d0       	rcall	.+0      	; 0xadc <dispatch+0x6>
     adc:	cd b7       	in	r28, 0x3d	; 61
     ade:	de b7       	in	r29, 0x3e	; 62
     ae0:	9a 83       	std	Y+2, r25	; 0x02
     ae2:	89 83       	std	Y+1, r24	; 0x01
     ae4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     ae8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     aec:	06 96       	adiw	r24, 0x06	; 6
     aee:	0e 94 9b 11 	call	0x2336	; 0x2336 <setjmp>
     af2:	89 2b       	or	r24, r25
     af4:	59 f4       	brne	.+22     	; 0xb0c <dispatch+0x36>
     af6:	89 81       	ldd	r24, Y+1	; 0x01
     af8:	9a 81       	ldd	r25, Y+2	; 0x02
     afa:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     afe:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     b02:	61 e0       	ldi	r22, 0x01	; 1
     b04:	70 e0       	ldi	r23, 0x00	; 0
     b06:	06 96       	adiw	r24, 0x06	; 6
     b08:	0e 94 bb 11 	call	0x2376	; 0x2376 <longjmp>
     b0c:	0f 90       	pop	r0
     b0e:	0f 90       	pop	r0
     b10:	df 91       	pop	r29
     b12:	cf 91       	pop	r28
     b14:	08 95       	ret

00000b16 <schedule>:
     b16:	0f 93       	push	r16
     b18:	1f 93       	push	r17
     b1a:	cf 93       	push	r28
     b1c:	df 93       	push	r29
     b1e:	e0 91 58 01 	lds	r30, 0x0158	; 0x800158 <msgQ>
     b22:	f0 91 59 01 	lds	r31, 0x0159	; 0x800159 <msgQ+0x1>
     b26:	30 97       	sbiw	r30, 0x00	; 0
     b28:	61 f1       	breq	.+88     	; 0xb82 <schedule+0x6c>
     b2a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     b2e:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     b32:	00 97       	sbiw	r24, 0x00	; 0
     b34:	31 f1       	breq	.+76     	; 0xb82 <schedule+0x6c>
     b36:	c0 91 02 01 	lds	r28, 0x0102	; 0x800102 <activeStack>
     b3a:	d0 91 03 01 	lds	r29, 0x0103	; 0x800103 <activeStack+0x1>
     b3e:	aa 81       	ldd	r26, Y+2	; 0x02
     b40:	bb 81       	ldd	r27, Y+3	; 0x03
     b42:	10 97       	sbiw	r26, 0x00	; 0
     b44:	79 f0       	breq	.+30     	; 0xb64 <schedule+0x4e>
     b46:	46 81       	ldd	r20, Z+6	; 0x06
     b48:	57 81       	ldd	r21, Z+7	; 0x07
     b4a:	60 85       	ldd	r22, Z+8	; 0x08
     b4c:	71 85       	ldd	r23, Z+9	; 0x09
     b4e:	16 96       	adiw	r26, 0x06	; 6
     b50:	0d 91       	ld	r16, X+
     b52:	1d 91       	ld	r17, X+
     b54:	2d 91       	ld	r18, X+
     b56:	3c 91       	ld	r19, X
     b58:	19 97       	sbiw	r26, 0x09	; 9
     b5a:	40 1b       	sub	r20, r16
     b5c:	51 0b       	sbc	r21, r17
     b5e:	62 0b       	sbc	r22, r18
     b60:	73 0b       	sbc	r23, r19
     b62:	7a f4       	brpl	.+30     	; 0xb82 <schedule+0x6c>
     b64:	fc 01       	movw	r30, r24
     b66:	20 81       	ld	r18, Z
     b68:	31 81       	ldd	r19, Z+1	; 0x01
     b6a:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
     b6e:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
     b72:	d1 83       	std	Z+1, r29	; 0x01
     b74:	c0 83       	st	Z, r28
     b76:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
     b7a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
     b7e:	0e 94 6b 05 	call	0xad6	; 0xad6 <dispatch>
     b82:	df 91       	pop	r29
     b84:	cf 91       	pop	r28
     b86:	1f 91       	pop	r17
     b88:	0f 91       	pop	r16
     b8a:	08 95       	ret

00000b8c <__vector_1>:
     b8c:	1f 92       	push	r1
     b8e:	0f 92       	push	r0
     b90:	0f b6       	in	r0, 0x3f	; 63
     b92:	0f 92       	push	r0
     b94:	11 24       	eor	r1, r1
     b96:	2f 93       	push	r18
     b98:	3f 93       	push	r19
     b9a:	4f 93       	push	r20
     b9c:	5f 93       	push	r21
     b9e:	6f 93       	push	r22
     ba0:	7f 93       	push	r23
     ba2:	8f 93       	push	r24
     ba4:	9f 93       	push	r25
     ba6:	af 93       	push	r26
     ba8:	bf 93       	push	r27
     baa:	ef 93       	push	r30
     bac:	ff 93       	push	r31
     bae:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     bb2:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     bb6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bba:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bbe:	c9 01       	movw	r24, r18
     bc0:	03 2e       	mov	r0, r19
     bc2:	00 0c       	add	r0, r0
     bc4:	aa 0b       	sbc	r26, r26
     bc6:	bb 0b       	sbc	r27, r27
     bc8:	dc 01       	movw	r26, r24
     bca:	99 27       	eor	r25, r25
     bcc:	88 27       	eor	r24, r24
     bce:	60 e0       	ldi	r22, 0x00	; 0
     bd0:	70 e0       	ldi	r23, 0x00	; 0
     bd2:	84 2b       	or	r24, r20
     bd4:	95 2b       	or	r25, r21
     bd6:	a6 2b       	or	r26, r22
     bd8:	b7 2b       	or	r27, r23
     bda:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     bde:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     be2:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     be6:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     bea:	b0 9b       	sbis	0x16, 0	; 22
     bec:	1b c0       	rjmp	.+54     	; 0xc24 <__vector_1+0x98>
     bee:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bf2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bf6:	c9 01       	movw	r24, r18
     bf8:	01 96       	adiw	r24, 0x01	; 1
     bfa:	09 2e       	mov	r0, r25
     bfc:	00 0c       	add	r0, r0
     bfe:	aa 0b       	sbc	r26, r26
     c00:	bb 0b       	sbc	r27, r27
     c02:	dc 01       	movw	r26, r24
     c04:	99 27       	eor	r25, r25
     c06:	88 27       	eor	r24, r24
     c08:	60 e0       	ldi	r22, 0x00	; 0
     c0a:	70 e0       	ldi	r23, 0x00	; 0
     c0c:	84 2b       	or	r24, r20
     c0e:	95 2b       	or	r25, r21
     c10:	a6 2b       	or	r26, r22
     c12:	b7 2b       	or	r27, r23
     c14:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     c18:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     c1c:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     c20:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     c24:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <mtable>
     c28:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <mtable+0x1>
     c2c:	30 97       	sbiw	r30, 0x00	; 0
     c2e:	39 f0       	breq	.+14     	; 0xc3e <__vector_1+0xb2>
     c30:	60 e0       	ldi	r22, 0x00	; 0
     c32:	70 e0       	ldi	r23, 0x00	; 0
     c34:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <otable>
     c38:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <otable+0x1>
     c3c:	09 95       	icall
     c3e:	0e 94 8b 05 	call	0xb16	; 0xb16 <schedule>
     c42:	ff 91       	pop	r31
     c44:	ef 91       	pop	r30
     c46:	bf 91       	pop	r27
     c48:	af 91       	pop	r26
     c4a:	9f 91       	pop	r25
     c4c:	8f 91       	pop	r24
     c4e:	7f 91       	pop	r23
     c50:	6f 91       	pop	r22
     c52:	5f 91       	pop	r21
     c54:	4f 91       	pop	r20
     c56:	3f 91       	pop	r19
     c58:	2f 91       	pop	r18
     c5a:	0f 90       	pop	r0
     c5c:	0f be       	out	0x3f, r0	; 63
     c5e:	0f 90       	pop	r0
     c60:	1f 90       	pop	r1
     c62:	18 95       	reti

00000c64 <__vector_2>:
     c64:	1f 92       	push	r1
     c66:	0f 92       	push	r0
     c68:	0f b6       	in	r0, 0x3f	; 63
     c6a:	0f 92       	push	r0
     c6c:	11 24       	eor	r1, r1
     c6e:	2f 93       	push	r18
     c70:	3f 93       	push	r19
     c72:	4f 93       	push	r20
     c74:	5f 93       	push	r21
     c76:	6f 93       	push	r22
     c78:	7f 93       	push	r23
     c7a:	8f 93       	push	r24
     c7c:	9f 93       	push	r25
     c7e:	af 93       	push	r26
     c80:	bf 93       	push	r27
     c82:	ef 93       	push	r30
     c84:	ff 93       	push	r31
     c86:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     c8a:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     c8e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c92:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c96:	c9 01       	movw	r24, r18
     c98:	03 2e       	mov	r0, r19
     c9a:	00 0c       	add	r0, r0
     c9c:	aa 0b       	sbc	r26, r26
     c9e:	bb 0b       	sbc	r27, r27
     ca0:	dc 01       	movw	r26, r24
     ca2:	99 27       	eor	r25, r25
     ca4:	88 27       	eor	r24, r24
     ca6:	60 e0       	ldi	r22, 0x00	; 0
     ca8:	70 e0       	ldi	r23, 0x00	; 0
     caa:	84 2b       	or	r24, r20
     cac:	95 2b       	or	r25, r21
     cae:	a6 2b       	or	r26, r22
     cb0:	b7 2b       	or	r27, r23
     cb2:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     cb6:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     cba:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     cbe:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     cc2:	b0 9b       	sbis	0x16, 0	; 22
     cc4:	1b c0       	rjmp	.+54     	; 0xcfc <__vector_2+0x98>
     cc6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cca:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cce:	c9 01       	movw	r24, r18
     cd0:	01 96       	adiw	r24, 0x01	; 1
     cd2:	09 2e       	mov	r0, r25
     cd4:	00 0c       	add	r0, r0
     cd6:	aa 0b       	sbc	r26, r26
     cd8:	bb 0b       	sbc	r27, r27
     cda:	dc 01       	movw	r26, r24
     cdc:	99 27       	eor	r25, r25
     cde:	88 27       	eor	r24, r24
     ce0:	60 e0       	ldi	r22, 0x00	; 0
     ce2:	70 e0       	ldi	r23, 0x00	; 0
     ce4:	84 2b       	or	r24, r20
     ce6:	95 2b       	or	r25, r21
     ce8:	a6 2b       	or	r26, r22
     cea:	b7 2b       	or	r27, r23
     cec:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     cf0:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     cf4:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     cf8:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     cfc:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <mtable+0x2>
     d00:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <mtable+0x3>
     d04:	30 97       	sbiw	r30, 0x00	; 0
     d06:	39 f0       	breq	.+14     	; 0xd16 <__vector_2+0xb2>
     d08:	61 e0       	ldi	r22, 0x01	; 1
     d0a:	70 e0       	ldi	r23, 0x00	; 0
     d0c:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <otable+0x2>
     d10:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <otable+0x3>
     d14:	09 95       	icall
     d16:	0e 94 8b 05 	call	0xb16	; 0xb16 <schedule>
     d1a:	ff 91       	pop	r31
     d1c:	ef 91       	pop	r30
     d1e:	bf 91       	pop	r27
     d20:	af 91       	pop	r26
     d22:	9f 91       	pop	r25
     d24:	8f 91       	pop	r24
     d26:	7f 91       	pop	r23
     d28:	6f 91       	pop	r22
     d2a:	5f 91       	pop	r21
     d2c:	4f 91       	pop	r20
     d2e:	3f 91       	pop	r19
     d30:	2f 91       	pop	r18
     d32:	0f 90       	pop	r0
     d34:	0f be       	out	0x3f, r0	; 63
     d36:	0f 90       	pop	r0
     d38:	1f 90       	pop	r1
     d3a:	18 95       	reti

00000d3c <__vector_3>:
     d3c:	1f 92       	push	r1
     d3e:	0f 92       	push	r0
     d40:	0f b6       	in	r0, 0x3f	; 63
     d42:	0f 92       	push	r0
     d44:	11 24       	eor	r1, r1
     d46:	2f 93       	push	r18
     d48:	3f 93       	push	r19
     d4a:	4f 93       	push	r20
     d4c:	5f 93       	push	r21
     d4e:	6f 93       	push	r22
     d50:	7f 93       	push	r23
     d52:	8f 93       	push	r24
     d54:	9f 93       	push	r25
     d56:	af 93       	push	r26
     d58:	bf 93       	push	r27
     d5a:	ef 93       	push	r30
     d5c:	ff 93       	push	r31
     d5e:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     d62:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     d66:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d6a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d6e:	c9 01       	movw	r24, r18
     d70:	03 2e       	mov	r0, r19
     d72:	00 0c       	add	r0, r0
     d74:	aa 0b       	sbc	r26, r26
     d76:	bb 0b       	sbc	r27, r27
     d78:	dc 01       	movw	r26, r24
     d7a:	99 27       	eor	r25, r25
     d7c:	88 27       	eor	r24, r24
     d7e:	60 e0       	ldi	r22, 0x00	; 0
     d80:	70 e0       	ldi	r23, 0x00	; 0
     d82:	84 2b       	or	r24, r20
     d84:	95 2b       	or	r25, r21
     d86:	a6 2b       	or	r26, r22
     d88:	b7 2b       	or	r27, r23
     d8a:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     d8e:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     d92:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     d96:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     d9a:	b0 9b       	sbis	0x16, 0	; 22
     d9c:	1b c0       	rjmp	.+54     	; 0xdd4 <__vector_3+0x98>
     d9e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     da2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     da6:	c9 01       	movw	r24, r18
     da8:	01 96       	adiw	r24, 0x01	; 1
     daa:	09 2e       	mov	r0, r25
     dac:	00 0c       	add	r0, r0
     dae:	aa 0b       	sbc	r26, r26
     db0:	bb 0b       	sbc	r27, r27
     db2:	dc 01       	movw	r26, r24
     db4:	99 27       	eor	r25, r25
     db6:	88 27       	eor	r24, r24
     db8:	60 e0       	ldi	r22, 0x00	; 0
     dba:	70 e0       	ldi	r23, 0x00	; 0
     dbc:	84 2b       	or	r24, r20
     dbe:	95 2b       	or	r25, r21
     dc0:	a6 2b       	or	r26, r22
     dc2:	b7 2b       	or	r27, r23
     dc4:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     dc8:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     dcc:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     dd0:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     dd4:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <mtable+0x4>
     dd8:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <mtable+0x5>
     ddc:	30 97       	sbiw	r30, 0x00	; 0
     dde:	39 f0       	breq	.+14     	; 0xdee <__vector_3+0xb2>
     de0:	62 e0       	ldi	r22, 0x02	; 2
     de2:	70 e0       	ldi	r23, 0x00	; 0
     de4:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <otable+0x4>
     de8:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <otable+0x5>
     dec:	09 95       	icall
     dee:	0e 94 8b 05 	call	0xb16	; 0xb16 <schedule>
     df2:	ff 91       	pop	r31
     df4:	ef 91       	pop	r30
     df6:	bf 91       	pop	r27
     df8:	af 91       	pop	r26
     dfa:	9f 91       	pop	r25
     dfc:	8f 91       	pop	r24
     dfe:	7f 91       	pop	r23
     e00:	6f 91       	pop	r22
     e02:	5f 91       	pop	r21
     e04:	4f 91       	pop	r20
     e06:	3f 91       	pop	r19
     e08:	2f 91       	pop	r18
     e0a:	0f 90       	pop	r0
     e0c:	0f be       	out	0x3f, r0	; 63
     e0e:	0f 90       	pop	r0
     e10:	1f 90       	pop	r1
     e12:	18 95       	reti

00000e14 <__vector_4>:
     e14:	1f 92       	push	r1
     e16:	0f 92       	push	r0
     e18:	0f b6       	in	r0, 0x3f	; 63
     e1a:	0f 92       	push	r0
     e1c:	11 24       	eor	r1, r1
     e1e:	2f 93       	push	r18
     e20:	3f 93       	push	r19
     e22:	4f 93       	push	r20
     e24:	5f 93       	push	r21
     e26:	6f 93       	push	r22
     e28:	7f 93       	push	r23
     e2a:	8f 93       	push	r24
     e2c:	9f 93       	push	r25
     e2e:	af 93       	push	r26
     e30:	bf 93       	push	r27
     e32:	ef 93       	push	r30
     e34:	ff 93       	push	r31
     e36:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     e3a:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     e3e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e42:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e46:	c9 01       	movw	r24, r18
     e48:	03 2e       	mov	r0, r19
     e4a:	00 0c       	add	r0, r0
     e4c:	aa 0b       	sbc	r26, r26
     e4e:	bb 0b       	sbc	r27, r27
     e50:	dc 01       	movw	r26, r24
     e52:	99 27       	eor	r25, r25
     e54:	88 27       	eor	r24, r24
     e56:	60 e0       	ldi	r22, 0x00	; 0
     e58:	70 e0       	ldi	r23, 0x00	; 0
     e5a:	84 2b       	or	r24, r20
     e5c:	95 2b       	or	r25, r21
     e5e:	a6 2b       	or	r26, r22
     e60:	b7 2b       	or	r27, r23
     e62:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     e66:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     e6a:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     e6e:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     e72:	b0 9b       	sbis	0x16, 0	; 22
     e74:	1b c0       	rjmp	.+54     	; 0xeac <__vector_4+0x98>
     e76:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e7a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e7e:	c9 01       	movw	r24, r18
     e80:	01 96       	adiw	r24, 0x01	; 1
     e82:	09 2e       	mov	r0, r25
     e84:	00 0c       	add	r0, r0
     e86:	aa 0b       	sbc	r26, r26
     e88:	bb 0b       	sbc	r27, r27
     e8a:	dc 01       	movw	r26, r24
     e8c:	99 27       	eor	r25, r25
     e8e:	88 27       	eor	r24, r24
     e90:	60 e0       	ldi	r22, 0x00	; 0
     e92:	70 e0       	ldi	r23, 0x00	; 0
     e94:	84 2b       	or	r24, r20
     e96:	95 2b       	or	r25, r21
     e98:	a6 2b       	or	r26, r22
     e9a:	b7 2b       	or	r27, r23
     e9c:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     ea0:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     ea4:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     ea8:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     eac:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <mtable+0x6>
     eb0:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <mtable+0x7>
     eb4:	30 97       	sbiw	r30, 0x00	; 0
     eb6:	39 f0       	breq	.+14     	; 0xec6 <__vector_4+0xb2>
     eb8:	63 e0       	ldi	r22, 0x03	; 3
     eba:	70 e0       	ldi	r23, 0x00	; 0
     ebc:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <otable+0x6>
     ec0:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <otable+0x7>
     ec4:	09 95       	icall
     ec6:	0e 94 8b 05 	call	0xb16	; 0xb16 <schedule>
     eca:	ff 91       	pop	r31
     ecc:	ef 91       	pop	r30
     ece:	bf 91       	pop	r27
     ed0:	af 91       	pop	r26
     ed2:	9f 91       	pop	r25
     ed4:	8f 91       	pop	r24
     ed6:	7f 91       	pop	r23
     ed8:	6f 91       	pop	r22
     eda:	5f 91       	pop	r21
     edc:	4f 91       	pop	r20
     ede:	3f 91       	pop	r19
     ee0:	2f 91       	pop	r18
     ee2:	0f 90       	pop	r0
     ee4:	0f be       	out	0x3f, r0	; 63
     ee6:	0f 90       	pop	r0
     ee8:	1f 90       	pop	r1
     eea:	18 95       	reti

00000eec <__vector_5>:
     eec:	1f 92       	push	r1
     eee:	0f 92       	push	r0
     ef0:	0f b6       	in	r0, 0x3f	; 63
     ef2:	0f 92       	push	r0
     ef4:	11 24       	eor	r1, r1
     ef6:	2f 93       	push	r18
     ef8:	3f 93       	push	r19
     efa:	4f 93       	push	r20
     efc:	5f 93       	push	r21
     efe:	6f 93       	push	r22
     f00:	7f 93       	push	r23
     f02:	8f 93       	push	r24
     f04:	9f 93       	push	r25
     f06:	af 93       	push	r26
     f08:	bf 93       	push	r27
     f0a:	ef 93       	push	r30
     f0c:	ff 93       	push	r31
     f0e:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     f12:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     f16:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f1a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f1e:	c9 01       	movw	r24, r18
     f20:	03 2e       	mov	r0, r19
     f22:	00 0c       	add	r0, r0
     f24:	aa 0b       	sbc	r26, r26
     f26:	bb 0b       	sbc	r27, r27
     f28:	dc 01       	movw	r26, r24
     f2a:	99 27       	eor	r25, r25
     f2c:	88 27       	eor	r24, r24
     f2e:	60 e0       	ldi	r22, 0x00	; 0
     f30:	70 e0       	ldi	r23, 0x00	; 0
     f32:	84 2b       	or	r24, r20
     f34:	95 2b       	or	r25, r21
     f36:	a6 2b       	or	r26, r22
     f38:	b7 2b       	or	r27, r23
     f3a:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     f3e:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     f42:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     f46:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     f4a:	b0 9b       	sbis	0x16, 0	; 22
     f4c:	1b c0       	rjmp	.+54     	; 0xf84 <__vector_5+0x98>
     f4e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f52:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f56:	c9 01       	movw	r24, r18
     f58:	01 96       	adiw	r24, 0x01	; 1
     f5a:	09 2e       	mov	r0, r25
     f5c:	00 0c       	add	r0, r0
     f5e:	aa 0b       	sbc	r26, r26
     f60:	bb 0b       	sbc	r27, r27
     f62:	dc 01       	movw	r26, r24
     f64:	99 27       	eor	r25, r25
     f66:	88 27       	eor	r24, r24
     f68:	60 e0       	ldi	r22, 0x00	; 0
     f6a:	70 e0       	ldi	r23, 0x00	; 0
     f6c:	84 2b       	or	r24, r20
     f6e:	95 2b       	or	r25, r21
     f70:	a6 2b       	or	r26, r22
     f72:	b7 2b       	or	r27, r23
     f74:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     f78:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     f7c:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     f80:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     f84:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <mtable+0x8>
     f88:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <mtable+0x9>
     f8c:	30 97       	sbiw	r30, 0x00	; 0
     f8e:	39 f0       	breq	.+14     	; 0xf9e <__vector_5+0xb2>
     f90:	64 e0       	ldi	r22, 0x04	; 4
     f92:	70 e0       	ldi	r23, 0x00	; 0
     f94:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <otable+0x8>
     f98:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <otable+0x9>
     f9c:	09 95       	icall
     f9e:	0e 94 8b 05 	call	0xb16	; 0xb16 <schedule>
     fa2:	ff 91       	pop	r31
     fa4:	ef 91       	pop	r30
     fa6:	bf 91       	pop	r27
     fa8:	af 91       	pop	r26
     faa:	9f 91       	pop	r25
     fac:	8f 91       	pop	r24
     fae:	7f 91       	pop	r23
     fb0:	6f 91       	pop	r22
     fb2:	5f 91       	pop	r21
     fb4:	4f 91       	pop	r20
     fb6:	3f 91       	pop	r19
     fb8:	2f 91       	pop	r18
     fba:	0f 90       	pop	r0
     fbc:	0f be       	out	0x3f, r0	; 63
     fbe:	0f 90       	pop	r0
     fc0:	1f 90       	pop	r1
     fc2:	18 95       	reti

00000fc4 <__vector_10>:
     fc4:	1f 92       	push	r1
     fc6:	0f 92       	push	r0
     fc8:	0f b6       	in	r0, 0x3f	; 63
     fca:	0f 92       	push	r0
     fcc:	11 24       	eor	r1, r1
     fce:	2f 93       	push	r18
     fd0:	3f 93       	push	r19
     fd2:	4f 93       	push	r20
     fd4:	5f 93       	push	r21
     fd6:	6f 93       	push	r22
     fd8:	7f 93       	push	r23
     fda:	8f 93       	push	r24
     fdc:	9f 93       	push	r25
     fde:	af 93       	push	r26
     fe0:	bf 93       	push	r27
     fe2:	ef 93       	push	r30
     fe4:	ff 93       	push	r31
     fe6:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     fea:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     fee:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ff2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ff6:	c9 01       	movw	r24, r18
     ff8:	03 2e       	mov	r0, r19
     ffa:	00 0c       	add	r0, r0
     ffc:	aa 0b       	sbc	r26, r26
     ffe:	bb 0b       	sbc	r27, r27
    1000:	dc 01       	movw	r26, r24
    1002:	99 27       	eor	r25, r25
    1004:	88 27       	eor	r24, r24
    1006:	60 e0       	ldi	r22, 0x00	; 0
    1008:	70 e0       	ldi	r23, 0x00	; 0
    100a:	84 2b       	or	r24, r20
    100c:	95 2b       	or	r25, r21
    100e:	a6 2b       	or	r26, r22
    1010:	b7 2b       	or	r27, r23
    1012:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1016:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    101a:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    101e:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1022:	b0 9b       	sbis	0x16, 0	; 22
    1024:	1b c0       	rjmp	.+54     	; 0x105c <__vector_10+0x98>
    1026:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    102a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    102e:	c9 01       	movw	r24, r18
    1030:	01 96       	adiw	r24, 0x01	; 1
    1032:	09 2e       	mov	r0, r25
    1034:	00 0c       	add	r0, r0
    1036:	aa 0b       	sbc	r26, r26
    1038:	bb 0b       	sbc	r27, r27
    103a:	dc 01       	movw	r26, r24
    103c:	99 27       	eor	r25, r25
    103e:	88 27       	eor	r24, r24
    1040:	60 e0       	ldi	r22, 0x00	; 0
    1042:	70 e0       	ldi	r23, 0x00	; 0
    1044:	84 2b       	or	r24, r20
    1046:	95 2b       	or	r25, r21
    1048:	a6 2b       	or	r26, r22
    104a:	b7 2b       	or	r27, r23
    104c:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1050:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1054:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1058:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    105c:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <mtable+0xa>
    1060:	f0 91 fd 01 	lds	r31, 0x01FD	; 0x8001fd <mtable+0xb>
    1064:	30 97       	sbiw	r30, 0x00	; 0
    1066:	39 f0       	breq	.+14     	; 0x1076 <__vector_10+0xb2>
    1068:	65 e0       	ldi	r22, 0x05	; 5
    106a:	70 e0       	ldi	r23, 0x00	; 0
    106c:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <otable+0xa>
    1070:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <otable+0xb>
    1074:	09 95       	icall
    1076:	0e 94 8b 05 	call	0xb16	; 0xb16 <schedule>
    107a:	ff 91       	pop	r31
    107c:	ef 91       	pop	r30
    107e:	bf 91       	pop	r27
    1080:	af 91       	pop	r26
    1082:	9f 91       	pop	r25
    1084:	8f 91       	pop	r24
    1086:	7f 91       	pop	r23
    1088:	6f 91       	pop	r22
    108a:	5f 91       	pop	r21
    108c:	4f 91       	pop	r20
    108e:	3f 91       	pop	r19
    1090:	2f 91       	pop	r18
    1092:	0f 90       	pop	r0
    1094:	0f be       	out	0x3f, r0	; 63
    1096:	0f 90       	pop	r0
    1098:	1f 90       	pop	r1
    109a:	18 95       	reti

0000109c <__vector_11>:
    109c:	1f 92       	push	r1
    109e:	0f 92       	push	r0
    10a0:	0f b6       	in	r0, 0x3f	; 63
    10a2:	0f 92       	push	r0
    10a4:	11 24       	eor	r1, r1
    10a6:	2f 93       	push	r18
    10a8:	3f 93       	push	r19
    10aa:	4f 93       	push	r20
    10ac:	5f 93       	push	r21
    10ae:	6f 93       	push	r22
    10b0:	7f 93       	push	r23
    10b2:	8f 93       	push	r24
    10b4:	9f 93       	push	r25
    10b6:	af 93       	push	r26
    10b8:	bf 93       	push	r27
    10ba:	ef 93       	push	r30
    10bc:	ff 93       	push	r31
    10be:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    10c2:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    10c6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10ca:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10ce:	c9 01       	movw	r24, r18
    10d0:	03 2e       	mov	r0, r19
    10d2:	00 0c       	add	r0, r0
    10d4:	aa 0b       	sbc	r26, r26
    10d6:	bb 0b       	sbc	r27, r27
    10d8:	dc 01       	movw	r26, r24
    10da:	99 27       	eor	r25, r25
    10dc:	88 27       	eor	r24, r24
    10de:	60 e0       	ldi	r22, 0x00	; 0
    10e0:	70 e0       	ldi	r23, 0x00	; 0
    10e2:	84 2b       	or	r24, r20
    10e4:	95 2b       	or	r25, r21
    10e6:	a6 2b       	or	r26, r22
    10e8:	b7 2b       	or	r27, r23
    10ea:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    10ee:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    10f2:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    10f6:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    10fa:	b0 9b       	sbis	0x16, 0	; 22
    10fc:	1b c0       	rjmp	.+54     	; 0x1134 <__vector_11+0x98>
    10fe:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1102:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1106:	c9 01       	movw	r24, r18
    1108:	01 96       	adiw	r24, 0x01	; 1
    110a:	09 2e       	mov	r0, r25
    110c:	00 0c       	add	r0, r0
    110e:	aa 0b       	sbc	r26, r26
    1110:	bb 0b       	sbc	r27, r27
    1112:	dc 01       	movw	r26, r24
    1114:	99 27       	eor	r25, r25
    1116:	88 27       	eor	r24, r24
    1118:	60 e0       	ldi	r22, 0x00	; 0
    111a:	70 e0       	ldi	r23, 0x00	; 0
    111c:	84 2b       	or	r24, r20
    111e:	95 2b       	or	r25, r21
    1120:	a6 2b       	or	r26, r22
    1122:	b7 2b       	or	r27, r23
    1124:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1128:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    112c:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1130:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1134:	e0 91 fe 01 	lds	r30, 0x01FE	; 0x8001fe <mtable+0xc>
    1138:	f0 91 ff 01 	lds	r31, 0x01FF	; 0x8001ff <mtable+0xd>
    113c:	30 97       	sbiw	r30, 0x00	; 0
    113e:	39 f0       	breq	.+14     	; 0x114e <__vector_11+0xb2>
    1140:	66 e0       	ldi	r22, 0x06	; 6
    1142:	70 e0       	ldi	r23, 0x00	; 0
    1144:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <otable+0xc>
    1148:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <otable+0xd>
    114c:	09 95       	icall
    114e:	0e 94 8b 05 	call	0xb16	; 0xb16 <schedule>
    1152:	ff 91       	pop	r31
    1154:	ef 91       	pop	r30
    1156:	bf 91       	pop	r27
    1158:	af 91       	pop	r26
    115a:	9f 91       	pop	r25
    115c:	8f 91       	pop	r24
    115e:	7f 91       	pop	r23
    1160:	6f 91       	pop	r22
    1162:	5f 91       	pop	r21
    1164:	4f 91       	pop	r20
    1166:	3f 91       	pop	r19
    1168:	2f 91       	pop	r18
    116a:	0f 90       	pop	r0
    116c:	0f be       	out	0x3f, r0	; 63
    116e:	0f 90       	pop	r0
    1170:	1f 90       	pop	r1
    1172:	18 95       	reti

00001174 <__vector_12>:
    1174:	1f 92       	push	r1
    1176:	0f 92       	push	r0
    1178:	0f b6       	in	r0, 0x3f	; 63
    117a:	0f 92       	push	r0
    117c:	11 24       	eor	r1, r1
    117e:	2f 93       	push	r18
    1180:	3f 93       	push	r19
    1182:	4f 93       	push	r20
    1184:	5f 93       	push	r21
    1186:	6f 93       	push	r22
    1188:	7f 93       	push	r23
    118a:	8f 93       	push	r24
    118c:	9f 93       	push	r25
    118e:	af 93       	push	r26
    1190:	bf 93       	push	r27
    1192:	ef 93       	push	r30
    1194:	ff 93       	push	r31
    1196:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    119a:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    119e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11a2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11a6:	c9 01       	movw	r24, r18
    11a8:	03 2e       	mov	r0, r19
    11aa:	00 0c       	add	r0, r0
    11ac:	aa 0b       	sbc	r26, r26
    11ae:	bb 0b       	sbc	r27, r27
    11b0:	dc 01       	movw	r26, r24
    11b2:	99 27       	eor	r25, r25
    11b4:	88 27       	eor	r24, r24
    11b6:	60 e0       	ldi	r22, 0x00	; 0
    11b8:	70 e0       	ldi	r23, 0x00	; 0
    11ba:	84 2b       	or	r24, r20
    11bc:	95 2b       	or	r25, r21
    11be:	a6 2b       	or	r26, r22
    11c0:	b7 2b       	or	r27, r23
    11c2:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    11c6:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    11ca:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    11ce:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    11d2:	b0 9b       	sbis	0x16, 0	; 22
    11d4:	1b c0       	rjmp	.+54     	; 0x120c <__vector_12+0x98>
    11d6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11da:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11de:	c9 01       	movw	r24, r18
    11e0:	01 96       	adiw	r24, 0x01	; 1
    11e2:	09 2e       	mov	r0, r25
    11e4:	00 0c       	add	r0, r0
    11e6:	aa 0b       	sbc	r26, r26
    11e8:	bb 0b       	sbc	r27, r27
    11ea:	dc 01       	movw	r26, r24
    11ec:	99 27       	eor	r25, r25
    11ee:	88 27       	eor	r24, r24
    11f0:	60 e0       	ldi	r22, 0x00	; 0
    11f2:	70 e0       	ldi	r23, 0x00	; 0
    11f4:	84 2b       	or	r24, r20
    11f6:	95 2b       	or	r25, r21
    11f8:	a6 2b       	or	r26, r22
    11fa:	b7 2b       	or	r27, r23
    11fc:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1200:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1204:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1208:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    120c:	e0 91 00 02 	lds	r30, 0x0200	; 0x800200 <mtable+0xe>
    1210:	f0 91 01 02 	lds	r31, 0x0201	; 0x800201 <mtable+0xf>
    1214:	30 97       	sbiw	r30, 0x00	; 0
    1216:	39 f0       	breq	.+14     	; 0x1226 <__vector_12+0xb2>
    1218:	67 e0       	ldi	r22, 0x07	; 7
    121a:	70 e0       	ldi	r23, 0x00	; 0
    121c:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <otable+0xe>
    1220:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <otable+0xf>
    1224:	09 95       	icall
    1226:	0e 94 8b 05 	call	0xb16	; 0xb16 <schedule>
    122a:	ff 91       	pop	r31
    122c:	ef 91       	pop	r30
    122e:	bf 91       	pop	r27
    1230:	af 91       	pop	r26
    1232:	9f 91       	pop	r25
    1234:	8f 91       	pop	r24
    1236:	7f 91       	pop	r23
    1238:	6f 91       	pop	r22
    123a:	5f 91       	pop	r21
    123c:	4f 91       	pop	r20
    123e:	3f 91       	pop	r19
    1240:	2f 91       	pop	r18
    1242:	0f 90       	pop	r0
    1244:	0f be       	out	0x3f, r0	; 63
    1246:	0f 90       	pop	r0
    1248:	1f 90       	pop	r1
    124a:	18 95       	reti

0000124c <__vector_13>:
    124c:	1f 92       	push	r1
    124e:	0f 92       	push	r0
    1250:	0f b6       	in	r0, 0x3f	; 63
    1252:	0f 92       	push	r0
    1254:	11 24       	eor	r1, r1
    1256:	2f 93       	push	r18
    1258:	3f 93       	push	r19
    125a:	4f 93       	push	r20
    125c:	5f 93       	push	r21
    125e:	6f 93       	push	r22
    1260:	7f 93       	push	r23
    1262:	8f 93       	push	r24
    1264:	9f 93       	push	r25
    1266:	af 93       	push	r26
    1268:	bf 93       	push	r27
    126a:	ef 93       	push	r30
    126c:	ff 93       	push	r31
    126e:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    1272:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1276:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    127a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    127e:	c9 01       	movw	r24, r18
    1280:	03 2e       	mov	r0, r19
    1282:	00 0c       	add	r0, r0
    1284:	aa 0b       	sbc	r26, r26
    1286:	bb 0b       	sbc	r27, r27
    1288:	dc 01       	movw	r26, r24
    128a:	99 27       	eor	r25, r25
    128c:	88 27       	eor	r24, r24
    128e:	60 e0       	ldi	r22, 0x00	; 0
    1290:	70 e0       	ldi	r23, 0x00	; 0
    1292:	84 2b       	or	r24, r20
    1294:	95 2b       	or	r25, r21
    1296:	a6 2b       	or	r26, r22
    1298:	b7 2b       	or	r27, r23
    129a:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    129e:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    12a2:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    12a6:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    12aa:	b0 9b       	sbis	0x16, 0	; 22
    12ac:	1b c0       	rjmp	.+54     	; 0x12e4 <__vector_13+0x98>
    12ae:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12b2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12b6:	c9 01       	movw	r24, r18
    12b8:	01 96       	adiw	r24, 0x01	; 1
    12ba:	09 2e       	mov	r0, r25
    12bc:	00 0c       	add	r0, r0
    12be:	aa 0b       	sbc	r26, r26
    12c0:	bb 0b       	sbc	r27, r27
    12c2:	dc 01       	movw	r26, r24
    12c4:	99 27       	eor	r25, r25
    12c6:	88 27       	eor	r24, r24
    12c8:	60 e0       	ldi	r22, 0x00	; 0
    12ca:	70 e0       	ldi	r23, 0x00	; 0
    12cc:	84 2b       	or	r24, r20
    12ce:	95 2b       	or	r25, r21
    12d0:	a6 2b       	or	r26, r22
    12d2:	b7 2b       	or	r27, r23
    12d4:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    12d8:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    12dc:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    12e0:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    12e4:	e0 91 02 02 	lds	r30, 0x0202	; 0x800202 <mtable+0x10>
    12e8:	f0 91 03 02 	lds	r31, 0x0203	; 0x800203 <mtable+0x11>
    12ec:	30 97       	sbiw	r30, 0x00	; 0
    12ee:	39 f0       	breq	.+14     	; 0x12fe <__vector_13+0xb2>
    12f0:	68 e0       	ldi	r22, 0x08	; 8
    12f2:	70 e0       	ldi	r23, 0x00	; 0
    12f4:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <otable+0x10>
    12f8:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <otable+0x11>
    12fc:	09 95       	icall
    12fe:	0e 94 8b 05 	call	0xb16	; 0xb16 <schedule>
    1302:	ff 91       	pop	r31
    1304:	ef 91       	pop	r30
    1306:	bf 91       	pop	r27
    1308:	af 91       	pop	r26
    130a:	9f 91       	pop	r25
    130c:	8f 91       	pop	r24
    130e:	7f 91       	pop	r23
    1310:	6f 91       	pop	r22
    1312:	5f 91       	pop	r21
    1314:	4f 91       	pop	r20
    1316:	3f 91       	pop	r19
    1318:	2f 91       	pop	r18
    131a:	0f 90       	pop	r0
    131c:	0f be       	out	0x3f, r0	; 63
    131e:	0f 90       	pop	r0
    1320:	1f 90       	pop	r1
    1322:	18 95       	reti

00001324 <__vector_14>:
    1324:	1f 92       	push	r1
    1326:	0f 92       	push	r0
    1328:	0f b6       	in	r0, 0x3f	; 63
    132a:	0f 92       	push	r0
    132c:	11 24       	eor	r1, r1
    132e:	2f 93       	push	r18
    1330:	3f 93       	push	r19
    1332:	4f 93       	push	r20
    1334:	5f 93       	push	r21
    1336:	6f 93       	push	r22
    1338:	7f 93       	push	r23
    133a:	8f 93       	push	r24
    133c:	9f 93       	push	r25
    133e:	af 93       	push	r26
    1340:	bf 93       	push	r27
    1342:	ef 93       	push	r30
    1344:	ff 93       	push	r31
    1346:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    134a:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    134e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1352:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1356:	c9 01       	movw	r24, r18
    1358:	03 2e       	mov	r0, r19
    135a:	00 0c       	add	r0, r0
    135c:	aa 0b       	sbc	r26, r26
    135e:	bb 0b       	sbc	r27, r27
    1360:	dc 01       	movw	r26, r24
    1362:	99 27       	eor	r25, r25
    1364:	88 27       	eor	r24, r24
    1366:	60 e0       	ldi	r22, 0x00	; 0
    1368:	70 e0       	ldi	r23, 0x00	; 0
    136a:	84 2b       	or	r24, r20
    136c:	95 2b       	or	r25, r21
    136e:	a6 2b       	or	r26, r22
    1370:	b7 2b       	or	r27, r23
    1372:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1376:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    137a:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    137e:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1382:	b0 9b       	sbis	0x16, 0	; 22
    1384:	1b c0       	rjmp	.+54     	; 0x13bc <__vector_14+0x98>
    1386:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    138a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    138e:	c9 01       	movw	r24, r18
    1390:	01 96       	adiw	r24, 0x01	; 1
    1392:	09 2e       	mov	r0, r25
    1394:	00 0c       	add	r0, r0
    1396:	aa 0b       	sbc	r26, r26
    1398:	bb 0b       	sbc	r27, r27
    139a:	dc 01       	movw	r26, r24
    139c:	99 27       	eor	r25, r25
    139e:	88 27       	eor	r24, r24
    13a0:	60 e0       	ldi	r22, 0x00	; 0
    13a2:	70 e0       	ldi	r23, 0x00	; 0
    13a4:	84 2b       	or	r24, r20
    13a6:	95 2b       	or	r25, r21
    13a8:	a6 2b       	or	r26, r22
    13aa:	b7 2b       	or	r27, r23
    13ac:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    13b0:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    13b4:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    13b8:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    13bc:	e0 91 04 02 	lds	r30, 0x0204	; 0x800204 <mtable+0x12>
    13c0:	f0 91 05 02 	lds	r31, 0x0205	; 0x800205 <mtable+0x13>
    13c4:	30 97       	sbiw	r30, 0x00	; 0
    13c6:	39 f0       	breq	.+14     	; 0x13d6 <__vector_14+0xb2>
    13c8:	69 e0       	ldi	r22, 0x09	; 9
    13ca:	70 e0       	ldi	r23, 0x00	; 0
    13cc:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <otable+0x12>
    13d0:	90 91 6d 01 	lds	r25, 0x016D	; 0x80016d <otable+0x13>
    13d4:	09 95       	icall
    13d6:	0e 94 8b 05 	call	0xb16	; 0xb16 <schedule>
    13da:	ff 91       	pop	r31
    13dc:	ef 91       	pop	r30
    13de:	bf 91       	pop	r27
    13e0:	af 91       	pop	r26
    13e2:	9f 91       	pop	r25
    13e4:	8f 91       	pop	r24
    13e6:	7f 91       	pop	r23
    13e8:	6f 91       	pop	r22
    13ea:	5f 91       	pop	r21
    13ec:	4f 91       	pop	r20
    13ee:	3f 91       	pop	r19
    13f0:	2f 91       	pop	r18
    13f2:	0f 90       	pop	r0
    13f4:	0f be       	out	0x3f, r0	; 63
    13f6:	0f 90       	pop	r0
    13f8:	1f 90       	pop	r1
    13fa:	18 95       	reti

000013fc <__vector_15>:
    13fc:	1f 92       	push	r1
    13fe:	0f 92       	push	r0
    1400:	0f b6       	in	r0, 0x3f	; 63
    1402:	0f 92       	push	r0
    1404:	11 24       	eor	r1, r1
    1406:	2f 93       	push	r18
    1408:	3f 93       	push	r19
    140a:	4f 93       	push	r20
    140c:	5f 93       	push	r21
    140e:	6f 93       	push	r22
    1410:	7f 93       	push	r23
    1412:	8f 93       	push	r24
    1414:	9f 93       	push	r25
    1416:	af 93       	push	r26
    1418:	bf 93       	push	r27
    141a:	ef 93       	push	r30
    141c:	ff 93       	push	r31
    141e:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    1422:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1426:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    142a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    142e:	c9 01       	movw	r24, r18
    1430:	03 2e       	mov	r0, r19
    1432:	00 0c       	add	r0, r0
    1434:	aa 0b       	sbc	r26, r26
    1436:	bb 0b       	sbc	r27, r27
    1438:	dc 01       	movw	r26, r24
    143a:	99 27       	eor	r25, r25
    143c:	88 27       	eor	r24, r24
    143e:	60 e0       	ldi	r22, 0x00	; 0
    1440:	70 e0       	ldi	r23, 0x00	; 0
    1442:	84 2b       	or	r24, r20
    1444:	95 2b       	or	r25, r21
    1446:	a6 2b       	or	r26, r22
    1448:	b7 2b       	or	r27, r23
    144a:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    144e:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1452:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1456:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    145a:	b0 9b       	sbis	0x16, 0	; 22
    145c:	1b c0       	rjmp	.+54     	; 0x1494 <__vector_15+0x98>
    145e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1462:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1466:	c9 01       	movw	r24, r18
    1468:	01 96       	adiw	r24, 0x01	; 1
    146a:	09 2e       	mov	r0, r25
    146c:	00 0c       	add	r0, r0
    146e:	aa 0b       	sbc	r26, r26
    1470:	bb 0b       	sbc	r27, r27
    1472:	dc 01       	movw	r26, r24
    1474:	99 27       	eor	r25, r25
    1476:	88 27       	eor	r24, r24
    1478:	60 e0       	ldi	r22, 0x00	; 0
    147a:	70 e0       	ldi	r23, 0x00	; 0
    147c:	84 2b       	or	r24, r20
    147e:	95 2b       	or	r25, r21
    1480:	a6 2b       	or	r26, r22
    1482:	b7 2b       	or	r27, r23
    1484:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1488:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    148c:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1490:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1494:	e0 91 06 02 	lds	r30, 0x0206	; 0x800206 <mtable+0x14>
    1498:	f0 91 07 02 	lds	r31, 0x0207	; 0x800207 <mtable+0x15>
    149c:	30 97       	sbiw	r30, 0x00	; 0
    149e:	39 f0       	breq	.+14     	; 0x14ae <__vector_15+0xb2>
    14a0:	6a e0       	ldi	r22, 0x0A	; 10
    14a2:	70 e0       	ldi	r23, 0x00	; 0
    14a4:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <otable+0x14>
    14a8:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <otable+0x15>
    14ac:	09 95       	icall
    14ae:	0e 94 8b 05 	call	0xb16	; 0xb16 <schedule>
    14b2:	ff 91       	pop	r31
    14b4:	ef 91       	pop	r30
    14b6:	bf 91       	pop	r27
    14b8:	af 91       	pop	r26
    14ba:	9f 91       	pop	r25
    14bc:	8f 91       	pop	r24
    14be:	7f 91       	pop	r23
    14c0:	6f 91       	pop	r22
    14c2:	5f 91       	pop	r21
    14c4:	4f 91       	pop	r20
    14c6:	3f 91       	pop	r19
    14c8:	2f 91       	pop	r18
    14ca:	0f 90       	pop	r0
    14cc:	0f be       	out	0x3f, r0	; 63
    14ce:	0f 90       	pop	r0
    14d0:	1f 90       	pop	r1
    14d2:	18 95       	reti

000014d4 <__vector_16>:
    14d4:	1f 92       	push	r1
    14d6:	0f 92       	push	r0
    14d8:	0f b6       	in	r0, 0x3f	; 63
    14da:	0f 92       	push	r0
    14dc:	11 24       	eor	r1, r1
    14de:	2f 93       	push	r18
    14e0:	3f 93       	push	r19
    14e2:	4f 93       	push	r20
    14e4:	5f 93       	push	r21
    14e6:	6f 93       	push	r22
    14e8:	7f 93       	push	r23
    14ea:	8f 93       	push	r24
    14ec:	9f 93       	push	r25
    14ee:	af 93       	push	r26
    14f0:	bf 93       	push	r27
    14f2:	ef 93       	push	r30
    14f4:	ff 93       	push	r31
    14f6:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    14fa:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    14fe:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1502:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1506:	c9 01       	movw	r24, r18
    1508:	03 2e       	mov	r0, r19
    150a:	00 0c       	add	r0, r0
    150c:	aa 0b       	sbc	r26, r26
    150e:	bb 0b       	sbc	r27, r27
    1510:	dc 01       	movw	r26, r24
    1512:	99 27       	eor	r25, r25
    1514:	88 27       	eor	r24, r24
    1516:	60 e0       	ldi	r22, 0x00	; 0
    1518:	70 e0       	ldi	r23, 0x00	; 0
    151a:	84 2b       	or	r24, r20
    151c:	95 2b       	or	r25, r21
    151e:	a6 2b       	or	r26, r22
    1520:	b7 2b       	or	r27, r23
    1522:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1526:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    152a:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    152e:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1532:	b0 9b       	sbis	0x16, 0	; 22
    1534:	1b c0       	rjmp	.+54     	; 0x156c <__vector_16+0x98>
    1536:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    153a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    153e:	c9 01       	movw	r24, r18
    1540:	01 96       	adiw	r24, 0x01	; 1
    1542:	09 2e       	mov	r0, r25
    1544:	00 0c       	add	r0, r0
    1546:	aa 0b       	sbc	r26, r26
    1548:	bb 0b       	sbc	r27, r27
    154a:	dc 01       	movw	r26, r24
    154c:	99 27       	eor	r25, r25
    154e:	88 27       	eor	r24, r24
    1550:	60 e0       	ldi	r22, 0x00	; 0
    1552:	70 e0       	ldi	r23, 0x00	; 0
    1554:	84 2b       	or	r24, r20
    1556:	95 2b       	or	r25, r21
    1558:	a6 2b       	or	r26, r22
    155a:	b7 2b       	or	r27, r23
    155c:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1560:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1564:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1568:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    156c:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <mtable+0x16>
    1570:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <mtable+0x17>
    1574:	30 97       	sbiw	r30, 0x00	; 0
    1576:	39 f0       	breq	.+14     	; 0x1586 <__vector_16+0xb2>
    1578:	6b e0       	ldi	r22, 0x0B	; 11
    157a:	70 e0       	ldi	r23, 0x00	; 0
    157c:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <otable+0x16>
    1580:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <otable+0x17>
    1584:	09 95       	icall
    1586:	0e 94 8b 05 	call	0xb16	; 0xb16 <schedule>
    158a:	ff 91       	pop	r31
    158c:	ef 91       	pop	r30
    158e:	bf 91       	pop	r27
    1590:	af 91       	pop	r26
    1592:	9f 91       	pop	r25
    1594:	8f 91       	pop	r24
    1596:	7f 91       	pop	r23
    1598:	6f 91       	pop	r22
    159a:	5f 91       	pop	r21
    159c:	4f 91       	pop	r20
    159e:	3f 91       	pop	r19
    15a0:	2f 91       	pop	r18
    15a2:	0f 90       	pop	r0
    15a4:	0f be       	out	0x3f, r0	; 63
    15a6:	0f 90       	pop	r0
    15a8:	1f 90       	pop	r1
    15aa:	18 95       	reti

000015ac <__vector_17>:
    15ac:	1f 92       	push	r1
    15ae:	0f 92       	push	r0
    15b0:	0f b6       	in	r0, 0x3f	; 63
    15b2:	0f 92       	push	r0
    15b4:	11 24       	eor	r1, r1
    15b6:	2f 93       	push	r18
    15b8:	3f 93       	push	r19
    15ba:	4f 93       	push	r20
    15bc:	5f 93       	push	r21
    15be:	6f 93       	push	r22
    15c0:	7f 93       	push	r23
    15c2:	8f 93       	push	r24
    15c4:	9f 93       	push	r25
    15c6:	af 93       	push	r26
    15c8:	bf 93       	push	r27
    15ca:	ef 93       	push	r30
    15cc:	ff 93       	push	r31
    15ce:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    15d2:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    15d6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15da:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15de:	c9 01       	movw	r24, r18
    15e0:	03 2e       	mov	r0, r19
    15e2:	00 0c       	add	r0, r0
    15e4:	aa 0b       	sbc	r26, r26
    15e6:	bb 0b       	sbc	r27, r27
    15e8:	dc 01       	movw	r26, r24
    15ea:	99 27       	eor	r25, r25
    15ec:	88 27       	eor	r24, r24
    15ee:	60 e0       	ldi	r22, 0x00	; 0
    15f0:	70 e0       	ldi	r23, 0x00	; 0
    15f2:	84 2b       	or	r24, r20
    15f4:	95 2b       	or	r25, r21
    15f6:	a6 2b       	or	r26, r22
    15f8:	b7 2b       	or	r27, r23
    15fa:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    15fe:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1602:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1606:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    160a:	b0 9b       	sbis	0x16, 0	; 22
    160c:	1b c0       	rjmp	.+54     	; 0x1644 <__vector_17+0x98>
    160e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1612:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1616:	c9 01       	movw	r24, r18
    1618:	01 96       	adiw	r24, 0x01	; 1
    161a:	09 2e       	mov	r0, r25
    161c:	00 0c       	add	r0, r0
    161e:	aa 0b       	sbc	r26, r26
    1620:	bb 0b       	sbc	r27, r27
    1622:	dc 01       	movw	r26, r24
    1624:	99 27       	eor	r25, r25
    1626:	88 27       	eor	r24, r24
    1628:	60 e0       	ldi	r22, 0x00	; 0
    162a:	70 e0       	ldi	r23, 0x00	; 0
    162c:	84 2b       	or	r24, r20
    162e:	95 2b       	or	r25, r21
    1630:	a6 2b       	or	r26, r22
    1632:	b7 2b       	or	r27, r23
    1634:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1638:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    163c:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1640:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1644:	e0 91 0a 02 	lds	r30, 0x020A	; 0x80020a <mtable+0x18>
    1648:	f0 91 0b 02 	lds	r31, 0x020B	; 0x80020b <mtable+0x19>
    164c:	30 97       	sbiw	r30, 0x00	; 0
    164e:	39 f0       	breq	.+14     	; 0x165e <__vector_17+0xb2>
    1650:	6c e0       	ldi	r22, 0x0C	; 12
    1652:	70 e0       	ldi	r23, 0x00	; 0
    1654:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <otable+0x18>
    1658:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <otable+0x19>
    165c:	09 95       	icall
    165e:	0e 94 8b 05 	call	0xb16	; 0xb16 <schedule>
    1662:	ff 91       	pop	r31
    1664:	ef 91       	pop	r30
    1666:	bf 91       	pop	r27
    1668:	af 91       	pop	r26
    166a:	9f 91       	pop	r25
    166c:	8f 91       	pop	r24
    166e:	7f 91       	pop	r23
    1670:	6f 91       	pop	r22
    1672:	5f 91       	pop	r21
    1674:	4f 91       	pop	r20
    1676:	3f 91       	pop	r19
    1678:	2f 91       	pop	r18
    167a:	0f 90       	pop	r0
    167c:	0f be       	out	0x3f, r0	; 63
    167e:	0f 90       	pop	r0
    1680:	1f 90       	pop	r1
    1682:	18 95       	reti

00001684 <__vector_18>:
    1684:	1f 92       	push	r1
    1686:	0f 92       	push	r0
    1688:	0f b6       	in	r0, 0x3f	; 63
    168a:	0f 92       	push	r0
    168c:	11 24       	eor	r1, r1
    168e:	2f 93       	push	r18
    1690:	3f 93       	push	r19
    1692:	4f 93       	push	r20
    1694:	5f 93       	push	r21
    1696:	6f 93       	push	r22
    1698:	7f 93       	push	r23
    169a:	8f 93       	push	r24
    169c:	9f 93       	push	r25
    169e:	af 93       	push	r26
    16a0:	bf 93       	push	r27
    16a2:	ef 93       	push	r30
    16a4:	ff 93       	push	r31
    16a6:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    16aa:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    16ae:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16b2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16b6:	c9 01       	movw	r24, r18
    16b8:	03 2e       	mov	r0, r19
    16ba:	00 0c       	add	r0, r0
    16bc:	aa 0b       	sbc	r26, r26
    16be:	bb 0b       	sbc	r27, r27
    16c0:	dc 01       	movw	r26, r24
    16c2:	99 27       	eor	r25, r25
    16c4:	88 27       	eor	r24, r24
    16c6:	60 e0       	ldi	r22, 0x00	; 0
    16c8:	70 e0       	ldi	r23, 0x00	; 0
    16ca:	84 2b       	or	r24, r20
    16cc:	95 2b       	or	r25, r21
    16ce:	a6 2b       	or	r26, r22
    16d0:	b7 2b       	or	r27, r23
    16d2:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    16d6:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    16da:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    16de:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    16e2:	b0 9b       	sbis	0x16, 0	; 22
    16e4:	1b c0       	rjmp	.+54     	; 0x171c <__vector_18+0x98>
    16e6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16ea:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16ee:	c9 01       	movw	r24, r18
    16f0:	01 96       	adiw	r24, 0x01	; 1
    16f2:	09 2e       	mov	r0, r25
    16f4:	00 0c       	add	r0, r0
    16f6:	aa 0b       	sbc	r26, r26
    16f8:	bb 0b       	sbc	r27, r27
    16fa:	dc 01       	movw	r26, r24
    16fc:	99 27       	eor	r25, r25
    16fe:	88 27       	eor	r24, r24
    1700:	60 e0       	ldi	r22, 0x00	; 0
    1702:	70 e0       	ldi	r23, 0x00	; 0
    1704:	84 2b       	or	r24, r20
    1706:	95 2b       	or	r25, r21
    1708:	a6 2b       	or	r26, r22
    170a:	b7 2b       	or	r27, r23
    170c:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1710:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1714:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1718:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    171c:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <mtable+0x1a>
    1720:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <mtable+0x1b>
    1724:	30 97       	sbiw	r30, 0x00	; 0
    1726:	39 f0       	breq	.+14     	; 0x1736 <__vector_18+0xb2>
    1728:	6d e0       	ldi	r22, 0x0D	; 13
    172a:	70 e0       	ldi	r23, 0x00	; 0
    172c:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <otable+0x1a>
    1730:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <otable+0x1b>
    1734:	09 95       	icall
    1736:	0e 94 8b 05 	call	0xb16	; 0xb16 <schedule>
    173a:	ff 91       	pop	r31
    173c:	ef 91       	pop	r30
    173e:	bf 91       	pop	r27
    1740:	af 91       	pop	r26
    1742:	9f 91       	pop	r25
    1744:	8f 91       	pop	r24
    1746:	7f 91       	pop	r23
    1748:	6f 91       	pop	r22
    174a:	5f 91       	pop	r21
    174c:	4f 91       	pop	r20
    174e:	3f 91       	pop	r19
    1750:	2f 91       	pop	r18
    1752:	0f 90       	pop	r0
    1754:	0f be       	out	0x3f, r0	; 63
    1756:	0f 90       	pop	r0
    1758:	1f 90       	pop	r1
    175a:	18 95       	reti

0000175c <__vector_19>:
    175c:	1f 92       	push	r1
    175e:	0f 92       	push	r0
    1760:	0f b6       	in	r0, 0x3f	; 63
    1762:	0f 92       	push	r0
    1764:	11 24       	eor	r1, r1
    1766:	2f 93       	push	r18
    1768:	3f 93       	push	r19
    176a:	4f 93       	push	r20
    176c:	5f 93       	push	r21
    176e:	6f 93       	push	r22
    1770:	7f 93       	push	r23
    1772:	8f 93       	push	r24
    1774:	9f 93       	push	r25
    1776:	af 93       	push	r26
    1778:	bf 93       	push	r27
    177a:	ef 93       	push	r30
    177c:	ff 93       	push	r31
    177e:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    1782:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1786:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    178a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    178e:	c9 01       	movw	r24, r18
    1790:	03 2e       	mov	r0, r19
    1792:	00 0c       	add	r0, r0
    1794:	aa 0b       	sbc	r26, r26
    1796:	bb 0b       	sbc	r27, r27
    1798:	dc 01       	movw	r26, r24
    179a:	99 27       	eor	r25, r25
    179c:	88 27       	eor	r24, r24
    179e:	60 e0       	ldi	r22, 0x00	; 0
    17a0:	70 e0       	ldi	r23, 0x00	; 0
    17a2:	84 2b       	or	r24, r20
    17a4:	95 2b       	or	r25, r21
    17a6:	a6 2b       	or	r26, r22
    17a8:	b7 2b       	or	r27, r23
    17aa:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    17ae:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    17b2:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    17b6:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    17ba:	b0 9b       	sbis	0x16, 0	; 22
    17bc:	1b c0       	rjmp	.+54     	; 0x17f4 <__vector_19+0x98>
    17be:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17c2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17c6:	c9 01       	movw	r24, r18
    17c8:	01 96       	adiw	r24, 0x01	; 1
    17ca:	09 2e       	mov	r0, r25
    17cc:	00 0c       	add	r0, r0
    17ce:	aa 0b       	sbc	r26, r26
    17d0:	bb 0b       	sbc	r27, r27
    17d2:	dc 01       	movw	r26, r24
    17d4:	99 27       	eor	r25, r25
    17d6:	88 27       	eor	r24, r24
    17d8:	60 e0       	ldi	r22, 0x00	; 0
    17da:	70 e0       	ldi	r23, 0x00	; 0
    17dc:	84 2b       	or	r24, r20
    17de:	95 2b       	or	r25, r21
    17e0:	a6 2b       	or	r26, r22
    17e2:	b7 2b       	or	r27, r23
    17e4:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    17e8:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    17ec:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    17f0:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    17f4:	e0 91 0e 02 	lds	r30, 0x020E	; 0x80020e <mtable+0x1c>
    17f8:	f0 91 0f 02 	lds	r31, 0x020F	; 0x80020f <mtable+0x1d>
    17fc:	30 97       	sbiw	r30, 0x00	; 0
    17fe:	39 f0       	breq	.+14     	; 0x180e <__vector_19+0xb2>
    1800:	6e e0       	ldi	r22, 0x0E	; 14
    1802:	70 e0       	ldi	r23, 0x00	; 0
    1804:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <otable+0x1c>
    1808:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <otable+0x1d>
    180c:	09 95       	icall
    180e:	0e 94 8b 05 	call	0xb16	; 0xb16 <schedule>
    1812:	ff 91       	pop	r31
    1814:	ef 91       	pop	r30
    1816:	bf 91       	pop	r27
    1818:	af 91       	pop	r26
    181a:	9f 91       	pop	r25
    181c:	8f 91       	pop	r24
    181e:	7f 91       	pop	r23
    1820:	6f 91       	pop	r22
    1822:	5f 91       	pop	r21
    1824:	4f 91       	pop	r20
    1826:	3f 91       	pop	r19
    1828:	2f 91       	pop	r18
    182a:	0f 90       	pop	r0
    182c:	0f be       	out	0x3f, r0	; 63
    182e:	0f 90       	pop	r0
    1830:	1f 90       	pop	r1
    1832:	18 95       	reti

00001834 <__vector_20>:
    1834:	1f 92       	push	r1
    1836:	0f 92       	push	r0
    1838:	0f b6       	in	r0, 0x3f	; 63
    183a:	0f 92       	push	r0
    183c:	11 24       	eor	r1, r1
    183e:	2f 93       	push	r18
    1840:	3f 93       	push	r19
    1842:	4f 93       	push	r20
    1844:	5f 93       	push	r21
    1846:	6f 93       	push	r22
    1848:	7f 93       	push	r23
    184a:	8f 93       	push	r24
    184c:	9f 93       	push	r25
    184e:	af 93       	push	r26
    1850:	bf 93       	push	r27
    1852:	ef 93       	push	r30
    1854:	ff 93       	push	r31
    1856:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    185a:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    185e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1862:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1866:	c9 01       	movw	r24, r18
    1868:	03 2e       	mov	r0, r19
    186a:	00 0c       	add	r0, r0
    186c:	aa 0b       	sbc	r26, r26
    186e:	bb 0b       	sbc	r27, r27
    1870:	dc 01       	movw	r26, r24
    1872:	99 27       	eor	r25, r25
    1874:	88 27       	eor	r24, r24
    1876:	60 e0       	ldi	r22, 0x00	; 0
    1878:	70 e0       	ldi	r23, 0x00	; 0
    187a:	84 2b       	or	r24, r20
    187c:	95 2b       	or	r25, r21
    187e:	a6 2b       	or	r26, r22
    1880:	b7 2b       	or	r27, r23
    1882:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1886:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    188a:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    188e:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1892:	b0 9b       	sbis	0x16, 0	; 22
    1894:	1b c0       	rjmp	.+54     	; 0x18cc <__vector_20+0x98>
    1896:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    189a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    189e:	c9 01       	movw	r24, r18
    18a0:	01 96       	adiw	r24, 0x01	; 1
    18a2:	09 2e       	mov	r0, r25
    18a4:	00 0c       	add	r0, r0
    18a6:	aa 0b       	sbc	r26, r26
    18a8:	bb 0b       	sbc	r27, r27
    18aa:	dc 01       	movw	r26, r24
    18ac:	99 27       	eor	r25, r25
    18ae:	88 27       	eor	r24, r24
    18b0:	60 e0       	ldi	r22, 0x00	; 0
    18b2:	70 e0       	ldi	r23, 0x00	; 0
    18b4:	84 2b       	or	r24, r20
    18b6:	95 2b       	or	r25, r21
    18b8:	a6 2b       	or	r26, r22
    18ba:	b7 2b       	or	r27, r23
    18bc:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    18c0:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    18c4:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    18c8:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    18cc:	e0 91 10 02 	lds	r30, 0x0210	; 0x800210 <mtable+0x1e>
    18d0:	f0 91 11 02 	lds	r31, 0x0211	; 0x800211 <mtable+0x1f>
    18d4:	30 97       	sbiw	r30, 0x00	; 0
    18d6:	39 f0       	breq	.+14     	; 0x18e6 <__vector_20+0xb2>
    18d8:	6f e0       	ldi	r22, 0x0F	; 15
    18da:	70 e0       	ldi	r23, 0x00	; 0
    18dc:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <otable+0x1e>
    18e0:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <otable+0x1f>
    18e4:	09 95       	icall
    18e6:	0e 94 8b 05 	call	0xb16	; 0xb16 <schedule>
    18ea:	ff 91       	pop	r31
    18ec:	ef 91       	pop	r30
    18ee:	bf 91       	pop	r27
    18f0:	af 91       	pop	r26
    18f2:	9f 91       	pop	r25
    18f4:	8f 91       	pop	r24
    18f6:	7f 91       	pop	r23
    18f8:	6f 91       	pop	r22
    18fa:	5f 91       	pop	r21
    18fc:	4f 91       	pop	r20
    18fe:	3f 91       	pop	r19
    1900:	2f 91       	pop	r18
    1902:	0f 90       	pop	r0
    1904:	0f be       	out	0x3f, r0	; 63
    1906:	0f 90       	pop	r0
    1908:	1f 90       	pop	r1
    190a:	18 95       	reti

0000190c <__vector_21>:
    190c:	1f 92       	push	r1
    190e:	0f 92       	push	r0
    1910:	0f b6       	in	r0, 0x3f	; 63
    1912:	0f 92       	push	r0
    1914:	11 24       	eor	r1, r1
    1916:	2f 93       	push	r18
    1918:	3f 93       	push	r19
    191a:	4f 93       	push	r20
    191c:	5f 93       	push	r21
    191e:	6f 93       	push	r22
    1920:	7f 93       	push	r23
    1922:	8f 93       	push	r24
    1924:	9f 93       	push	r25
    1926:	af 93       	push	r26
    1928:	bf 93       	push	r27
    192a:	ef 93       	push	r30
    192c:	ff 93       	push	r31
    192e:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    1932:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1936:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    193a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    193e:	c9 01       	movw	r24, r18
    1940:	03 2e       	mov	r0, r19
    1942:	00 0c       	add	r0, r0
    1944:	aa 0b       	sbc	r26, r26
    1946:	bb 0b       	sbc	r27, r27
    1948:	dc 01       	movw	r26, r24
    194a:	99 27       	eor	r25, r25
    194c:	88 27       	eor	r24, r24
    194e:	60 e0       	ldi	r22, 0x00	; 0
    1950:	70 e0       	ldi	r23, 0x00	; 0
    1952:	84 2b       	or	r24, r20
    1954:	95 2b       	or	r25, r21
    1956:	a6 2b       	or	r26, r22
    1958:	b7 2b       	or	r27, r23
    195a:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    195e:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1962:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1966:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    196a:	b0 9b       	sbis	0x16, 0	; 22
    196c:	1b c0       	rjmp	.+54     	; 0x19a4 <__vector_21+0x98>
    196e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1972:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1976:	c9 01       	movw	r24, r18
    1978:	01 96       	adiw	r24, 0x01	; 1
    197a:	09 2e       	mov	r0, r25
    197c:	00 0c       	add	r0, r0
    197e:	aa 0b       	sbc	r26, r26
    1980:	bb 0b       	sbc	r27, r27
    1982:	dc 01       	movw	r26, r24
    1984:	99 27       	eor	r25, r25
    1986:	88 27       	eor	r24, r24
    1988:	60 e0       	ldi	r22, 0x00	; 0
    198a:	70 e0       	ldi	r23, 0x00	; 0
    198c:	84 2b       	or	r24, r20
    198e:	95 2b       	or	r25, r21
    1990:	a6 2b       	or	r26, r22
    1992:	b7 2b       	or	r27, r23
    1994:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1998:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    199c:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    19a0:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    19a4:	e0 91 12 02 	lds	r30, 0x0212	; 0x800212 <mtable+0x20>
    19a8:	f0 91 13 02 	lds	r31, 0x0213	; 0x800213 <mtable+0x21>
    19ac:	30 97       	sbiw	r30, 0x00	; 0
    19ae:	39 f0       	breq	.+14     	; 0x19be <__vector_21+0xb2>
    19b0:	60 e1       	ldi	r22, 0x10	; 16
    19b2:	70 e0       	ldi	r23, 0x00	; 0
    19b4:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <otable+0x20>
    19b8:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <otable+0x21>
    19bc:	09 95       	icall
    19be:	0e 94 8b 05 	call	0xb16	; 0xb16 <schedule>
    19c2:	ff 91       	pop	r31
    19c4:	ef 91       	pop	r30
    19c6:	bf 91       	pop	r27
    19c8:	af 91       	pop	r26
    19ca:	9f 91       	pop	r25
    19cc:	8f 91       	pop	r24
    19ce:	7f 91       	pop	r23
    19d0:	6f 91       	pop	r22
    19d2:	5f 91       	pop	r21
    19d4:	4f 91       	pop	r20
    19d6:	3f 91       	pop	r19
    19d8:	2f 91       	pop	r18
    19da:	0f 90       	pop	r0
    19dc:	0f be       	out	0x3f, r0	; 63
    19de:	0f 90       	pop	r0
    19e0:	1f 90       	pop	r1
    19e2:	18 95       	reti

000019e4 <__vector_22>:
    19e4:	1f 92       	push	r1
    19e6:	0f 92       	push	r0
    19e8:	0f b6       	in	r0, 0x3f	; 63
    19ea:	0f 92       	push	r0
    19ec:	11 24       	eor	r1, r1
    19ee:	2f 93       	push	r18
    19f0:	3f 93       	push	r19
    19f2:	4f 93       	push	r20
    19f4:	5f 93       	push	r21
    19f6:	6f 93       	push	r22
    19f8:	7f 93       	push	r23
    19fa:	8f 93       	push	r24
    19fc:	9f 93       	push	r25
    19fe:	af 93       	push	r26
    1a00:	bf 93       	push	r27
    1a02:	ef 93       	push	r30
    1a04:	ff 93       	push	r31
    1a06:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    1a0a:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1a0e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a12:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a16:	c9 01       	movw	r24, r18
    1a18:	03 2e       	mov	r0, r19
    1a1a:	00 0c       	add	r0, r0
    1a1c:	aa 0b       	sbc	r26, r26
    1a1e:	bb 0b       	sbc	r27, r27
    1a20:	dc 01       	movw	r26, r24
    1a22:	99 27       	eor	r25, r25
    1a24:	88 27       	eor	r24, r24
    1a26:	60 e0       	ldi	r22, 0x00	; 0
    1a28:	70 e0       	ldi	r23, 0x00	; 0
    1a2a:	84 2b       	or	r24, r20
    1a2c:	95 2b       	or	r25, r21
    1a2e:	a6 2b       	or	r26, r22
    1a30:	b7 2b       	or	r27, r23
    1a32:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1a36:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1a3a:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1a3e:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1a42:	b0 9b       	sbis	0x16, 0	; 22
    1a44:	1b c0       	rjmp	.+54     	; 0x1a7c <__vector_22+0x98>
    1a46:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a4a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a4e:	c9 01       	movw	r24, r18
    1a50:	01 96       	adiw	r24, 0x01	; 1
    1a52:	09 2e       	mov	r0, r25
    1a54:	00 0c       	add	r0, r0
    1a56:	aa 0b       	sbc	r26, r26
    1a58:	bb 0b       	sbc	r27, r27
    1a5a:	dc 01       	movw	r26, r24
    1a5c:	99 27       	eor	r25, r25
    1a5e:	88 27       	eor	r24, r24
    1a60:	60 e0       	ldi	r22, 0x00	; 0
    1a62:	70 e0       	ldi	r23, 0x00	; 0
    1a64:	84 2b       	or	r24, r20
    1a66:	95 2b       	or	r25, r21
    1a68:	a6 2b       	or	r26, r22
    1a6a:	b7 2b       	or	r27, r23
    1a6c:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1a70:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1a74:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1a78:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1a7c:	e0 91 14 02 	lds	r30, 0x0214	; 0x800214 <mtable+0x22>
    1a80:	f0 91 15 02 	lds	r31, 0x0215	; 0x800215 <mtable+0x23>
    1a84:	30 97       	sbiw	r30, 0x00	; 0
    1a86:	39 f0       	breq	.+14     	; 0x1a96 <__vector_22+0xb2>
    1a88:	61 e1       	ldi	r22, 0x11	; 17
    1a8a:	70 e0       	ldi	r23, 0x00	; 0
    1a8c:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <otable+0x22>
    1a90:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <otable+0x23>
    1a94:	09 95       	icall
    1a96:	0e 94 8b 05 	call	0xb16	; 0xb16 <schedule>
    1a9a:	ff 91       	pop	r31
    1a9c:	ef 91       	pop	r30
    1a9e:	bf 91       	pop	r27
    1aa0:	af 91       	pop	r26
    1aa2:	9f 91       	pop	r25
    1aa4:	8f 91       	pop	r24
    1aa6:	7f 91       	pop	r23
    1aa8:	6f 91       	pop	r22
    1aaa:	5f 91       	pop	r21
    1aac:	4f 91       	pop	r20
    1aae:	3f 91       	pop	r19
    1ab0:	2f 91       	pop	r18
    1ab2:	0f 90       	pop	r0
    1ab4:	0f be       	out	0x3f, r0	; 63
    1ab6:	0f 90       	pop	r0
    1ab8:	1f 90       	pop	r1
    1aba:	18 95       	reti

00001abc <enqueueByDeadline>:
    1abc:	ef 92       	push	r14
    1abe:	ff 92       	push	r15
    1ac0:	0f 93       	push	r16
    1ac2:	1f 93       	push	r17
    1ac4:	cf 93       	push	r28
    1ac6:	df 93       	push	r29
    1ac8:	7b 01       	movw	r14, r22
    1aca:	eb 01       	movw	r28, r22
    1acc:	a8 81       	ld	r26, Y
    1ace:	b9 81       	ldd	r27, Y+1	; 0x01
    1ad0:	10 97       	sbiw	r26, 0x00	; 0
    1ad2:	61 f1       	breq	.+88     	; 0x1b2c <enqueueByDeadline+0x70>
    1ad4:	fc 01       	movw	r30, r24
    1ad6:	06 81       	ldd	r16, Z+6	; 0x06
    1ad8:	17 81       	ldd	r17, Z+7	; 0x07
    1ada:	20 85       	ldd	r18, Z+8	; 0x08
    1adc:	31 85       	ldd	r19, Z+9	; 0x09
    1ade:	16 96       	adiw	r26, 0x06	; 6
    1ae0:	4d 91       	ld	r20, X+
    1ae2:	5d 91       	ld	r21, X+
    1ae4:	6d 91       	ld	r22, X+
    1ae6:	7c 91       	ld	r23, X
    1ae8:	19 97       	sbiw	r26, 0x09	; 9
    1aea:	04 17       	cp	r16, r20
    1aec:	15 07       	cpc	r17, r21
    1aee:	26 07       	cpc	r18, r22
    1af0:	37 07       	cpc	r19, r23
    1af2:	14 f4       	brge	.+4      	; 0x1af8 <enqueueByDeadline+0x3c>
    1af4:	1b c0       	rjmp	.+54     	; 0x1b2c <enqueueByDeadline+0x70>
    1af6:	df 01       	movw	r26, r30
    1af8:	ed 91       	ld	r30, X+
    1afa:	fc 91       	ld	r31, X
    1afc:	11 97       	sbiw	r26, 0x01	; 1
    1afe:	30 97       	sbiw	r30, 0x00	; 0
    1b00:	49 f0       	breq	.+18     	; 0x1b14 <enqueueByDeadline+0x58>
    1b02:	46 81       	ldd	r20, Z+6	; 0x06
    1b04:	57 81       	ldd	r21, Z+7	; 0x07
    1b06:	60 85       	ldd	r22, Z+8	; 0x08
    1b08:	71 85       	ldd	r23, Z+9	; 0x09
    1b0a:	04 17       	cp	r16, r20
    1b0c:	15 07       	cpc	r17, r21
    1b0e:	26 07       	cpc	r18, r22
    1b10:	37 07       	cpc	r19, r23
    1b12:	8c f7       	brge	.-30     	; 0x1af6 <enqueueByDeadline+0x3a>
    1b14:	ec 01       	movw	r28, r24
    1b16:	f9 83       	std	Y+1, r31	; 0x01
    1b18:	e8 83       	st	Y, r30
    1b1a:	10 97       	sbiw	r26, 0x00	; 0
    1b1c:	21 f4       	brne	.+8      	; 0x1b26 <enqueueByDeadline+0x6a>
    1b1e:	f7 01       	movw	r30, r14
    1b20:	91 83       	std	Z+1, r25	; 0x01
    1b22:	80 83       	st	Z, r24
    1b24:	07 c0       	rjmp	.+14     	; 0x1b34 <enqueueByDeadline+0x78>
    1b26:	8d 93       	st	X+, r24
    1b28:	9c 93       	st	X, r25
    1b2a:	04 c0       	rjmp	.+8      	; 0x1b34 <enqueueByDeadline+0x78>
    1b2c:	ec 01       	movw	r28, r24
    1b2e:	b9 83       	std	Y+1, r27	; 0x01
    1b30:	a8 83       	st	Y, r26
    1b32:	f5 cf       	rjmp	.-22     	; 0x1b1e <enqueueByDeadline+0x62>
    1b34:	df 91       	pop	r29
    1b36:	cf 91       	pop	r28
    1b38:	1f 91       	pop	r17
    1b3a:	0f 91       	pop	r16
    1b3c:	ff 90       	pop	r15
    1b3e:	ef 90       	pop	r14
    1b40:	08 95       	ret

00001b42 <enqueueByBaseline>:
    1b42:	ef 92       	push	r14
    1b44:	ff 92       	push	r15
    1b46:	0f 93       	push	r16
    1b48:	1f 93       	push	r17
    1b4a:	cf 93       	push	r28
    1b4c:	df 93       	push	r29
    1b4e:	7b 01       	movw	r14, r22
    1b50:	eb 01       	movw	r28, r22
    1b52:	a8 81       	ld	r26, Y
    1b54:	b9 81       	ldd	r27, Y+1	; 0x01
    1b56:	10 97       	sbiw	r26, 0x00	; 0
    1b58:	61 f1       	breq	.+88     	; 0x1bb2 <enqueueByBaseline+0x70>
    1b5a:	fc 01       	movw	r30, r24
    1b5c:	02 81       	ldd	r16, Z+2	; 0x02
    1b5e:	13 81       	ldd	r17, Z+3	; 0x03
    1b60:	24 81       	ldd	r18, Z+4	; 0x04
    1b62:	35 81       	ldd	r19, Z+5	; 0x05
    1b64:	12 96       	adiw	r26, 0x02	; 2
    1b66:	4d 91       	ld	r20, X+
    1b68:	5d 91       	ld	r21, X+
    1b6a:	6d 91       	ld	r22, X+
    1b6c:	7c 91       	ld	r23, X
    1b6e:	15 97       	sbiw	r26, 0x05	; 5
    1b70:	04 17       	cp	r16, r20
    1b72:	15 07       	cpc	r17, r21
    1b74:	26 07       	cpc	r18, r22
    1b76:	37 07       	cpc	r19, r23
    1b78:	14 f4       	brge	.+4      	; 0x1b7e <enqueueByBaseline+0x3c>
    1b7a:	1b c0       	rjmp	.+54     	; 0x1bb2 <enqueueByBaseline+0x70>
    1b7c:	df 01       	movw	r26, r30
    1b7e:	ed 91       	ld	r30, X+
    1b80:	fc 91       	ld	r31, X
    1b82:	11 97       	sbiw	r26, 0x01	; 1
    1b84:	30 97       	sbiw	r30, 0x00	; 0
    1b86:	49 f0       	breq	.+18     	; 0x1b9a <enqueueByBaseline+0x58>
    1b88:	42 81       	ldd	r20, Z+2	; 0x02
    1b8a:	53 81       	ldd	r21, Z+3	; 0x03
    1b8c:	64 81       	ldd	r22, Z+4	; 0x04
    1b8e:	75 81       	ldd	r23, Z+5	; 0x05
    1b90:	04 17       	cp	r16, r20
    1b92:	15 07       	cpc	r17, r21
    1b94:	26 07       	cpc	r18, r22
    1b96:	37 07       	cpc	r19, r23
    1b98:	8c f7       	brge	.-30     	; 0x1b7c <enqueueByBaseline+0x3a>
    1b9a:	ec 01       	movw	r28, r24
    1b9c:	f9 83       	std	Y+1, r31	; 0x01
    1b9e:	e8 83       	st	Y, r30
    1ba0:	10 97       	sbiw	r26, 0x00	; 0
    1ba2:	21 f4       	brne	.+8      	; 0x1bac <enqueueByBaseline+0x6a>
    1ba4:	f7 01       	movw	r30, r14
    1ba6:	91 83       	std	Z+1, r25	; 0x01
    1ba8:	80 83       	st	Z, r24
    1baa:	07 c0       	rjmp	.+14     	; 0x1bba <enqueueByBaseline+0x78>
    1bac:	8d 93       	st	X+, r24
    1bae:	9c 93       	st	X, r25
    1bb0:	04 c0       	rjmp	.+8      	; 0x1bba <enqueueByBaseline+0x78>
    1bb2:	ec 01       	movw	r28, r24
    1bb4:	b9 83       	std	Y+1, r27	; 0x01
    1bb6:	a8 83       	st	Y, r26
    1bb8:	f5 cf       	rjmp	.-22     	; 0x1ba4 <enqueueByBaseline+0x62>
    1bba:	df 91       	pop	r29
    1bbc:	cf 91       	pop	r28
    1bbe:	1f 91       	pop	r17
    1bc0:	0f 91       	pop	r16
    1bc2:	ff 90       	pop	r15
    1bc4:	ef 90       	pop	r14
    1bc6:	08 95       	ret

00001bc8 <dequeue>:
    1bc8:	dc 01       	movw	r26, r24
    1bca:	ed 91       	ld	r30, X+
    1bcc:	fc 91       	ld	r31, X
    1bce:	11 97       	sbiw	r26, 0x01	; 1
    1bd0:	30 97       	sbiw	r30, 0x00	; 0
    1bd2:	59 f4       	brne	.+22     	; 0x1bea <dequeue+0x22>
    1bd4:	8f ef       	ldi	r24, 0xFF	; 255
    1bd6:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
    1bda:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
    1bde:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
    1be2:	81 e0       	ldi	r24, 0x01	; 1
    1be4:	83 bf       	out	0x33, r24	; 51
    1be6:	88 95       	sleep
    1be8:	fd cf       	rjmp	.-6      	; 0x1be4 <dequeue+0x1c>
    1bea:	20 81       	ld	r18, Z
    1bec:	31 81       	ldd	r19, Z+1	; 0x01
    1bee:	2d 93       	st	X+, r18
    1bf0:	3c 93       	st	X, r19
    1bf2:	cf 01       	movw	r24, r30
    1bf4:	08 95       	ret

00001bf6 <__vector_9>:
    1bf6:	1f 92       	push	r1
    1bf8:	0f 92       	push	r0
    1bfa:	0f b6       	in	r0, 0x3f	; 63
    1bfc:	0f 92       	push	r0
    1bfe:	11 24       	eor	r1, r1
    1c00:	2f 93       	push	r18
    1c02:	3f 93       	push	r19
    1c04:	4f 93       	push	r20
    1c06:	5f 93       	push	r21
    1c08:	6f 93       	push	r22
    1c0a:	7f 93       	push	r23
    1c0c:	8f 93       	push	r24
    1c0e:	9f 93       	push	r25
    1c10:	ef 93       	push	r30
    1c12:	ff 93       	push	r31
    1c14:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <__data_end>
    1c18:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <__data_end+0x1>
    1c1c:	01 96       	adiw	r24, 0x01	; 1
    1c1e:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <__data_end+0x1>
    1c22:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <__data_end>
    1c26:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <timerQ>
    1c2a:	f0 91 57 01 	lds	r31, 0x0157	; 0x800157 <timerQ+0x1>
    1c2e:	30 97       	sbiw	r30, 0x00	; 0
    1c30:	01 f1       	breq	.+64     	; 0x1c72 <__vector_9+0x7c>
    1c32:	42 81       	ldd	r20, Z+2	; 0x02
    1c34:	53 81       	ldd	r21, Z+3	; 0x03
    1c36:	64 81       	ldd	r22, Z+4	; 0x04
    1c38:	75 81       	ldd	r23, Z+5	; 0x05
    1c3a:	86 17       	cp	r24, r22
    1c3c:	97 07       	cpc	r25, r23
    1c3e:	c9 f4       	brne	.+50     	; 0x1c72 <__vector_9+0x7c>
    1c40:	ca 01       	movw	r24, r20
    1c42:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c46:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c4a:	42 1b       	sub	r20, r18
    1c4c:	53 0b       	sbc	r21, r19
    1c4e:	41 30       	cpi	r20, 0x01	; 1
    1c50:	51 05       	cpc	r21, r1
    1c52:	29 f4       	brne	.+10     	; 0x1c5e <__vector_9+0x68>
    1c54:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c58:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c5c:	01 96       	adiw	r24, 0x01	; 1
    1c5e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1c62:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1c66:	ef e6       	ldi	r30, 0x6F	; 111
    1c68:	f0 e0       	ldi	r31, 0x00	; 0
    1c6a:	80 81       	ld	r24, Z
    1c6c:	82 60       	ori	r24, 0x02	; 2
    1c6e:	80 83       	st	Z, r24
    1c70:	05 c0       	rjmp	.+10     	; 0x1c7c <__vector_9+0x86>
    1c72:	ef e6       	ldi	r30, 0x6F	; 111
    1c74:	f0 e0       	ldi	r31, 0x00	; 0
    1c76:	80 81       	ld	r24, Z
    1c78:	8d 7f       	andi	r24, 0xFD	; 253
    1c7a:	80 83       	st	Z, r24
    1c7c:	ff 91       	pop	r31
    1c7e:	ef 91       	pop	r30
    1c80:	9f 91       	pop	r25
    1c82:	8f 91       	pop	r24
    1c84:	7f 91       	pop	r23
    1c86:	6f 91       	pop	r22
    1c88:	5f 91       	pop	r21
    1c8a:	4f 91       	pop	r20
    1c8c:	3f 91       	pop	r19
    1c8e:	2f 91       	pop	r18
    1c90:	0f 90       	pop	r0
    1c92:	0f be       	out	0x3f, r0	; 63
    1c94:	0f 90       	pop	r0
    1c96:	1f 90       	pop	r1
    1c98:	18 95       	reti

00001c9a <__vector_7>:
    1c9a:	1f 92       	push	r1
    1c9c:	0f 92       	push	r0
    1c9e:	0f b6       	in	r0, 0x3f	; 63
    1ca0:	0f 92       	push	r0
    1ca2:	11 24       	eor	r1, r1
    1ca4:	cf 92       	push	r12
    1ca6:	df 92       	push	r13
    1ca8:	ef 92       	push	r14
    1caa:	ff 92       	push	r15
    1cac:	2f 93       	push	r18
    1cae:	3f 93       	push	r19
    1cb0:	4f 93       	push	r20
    1cb2:	5f 93       	push	r21
    1cb4:	6f 93       	push	r22
    1cb6:	7f 93       	push	r23
    1cb8:	8f 93       	push	r24
    1cba:	9f 93       	push	r25
    1cbc:	af 93       	push	r26
    1cbe:	bf 93       	push	r27
    1cc0:	ef 93       	push	r30
    1cc2:	ff 93       	push	r31
    1cc4:	c0 90 50 01 	lds	r12, 0x0150	; 0x800150 <__data_end>
    1cc8:	d0 90 51 01 	lds	r13, 0x0151	; 0x800151 <__data_end+0x1>
    1ccc:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1cd0:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1cd4:	b0 99       	sbic	0x16, 0	; 22
    1cd6:	0f c0       	rjmp	.+30     	; 0x1cf6 <__vector_7+0x5c>
    1cd8:	0d 2c       	mov	r0, r13
    1cda:	00 0c       	add	r0, r0
    1cdc:	ee 08       	sbc	r14, r14
    1cde:	ff 08       	sbc	r15, r15
    1ce0:	d6 01       	movw	r26, r12
    1ce2:	99 27       	eor	r25, r25
    1ce4:	88 27       	eor	r24, r24
    1ce6:	69 01       	movw	r12, r18
    1ce8:	e1 2c       	mov	r14, r1
    1cea:	f1 2c       	mov	r15, r1
    1cec:	c8 2a       	or	r12, r24
    1cee:	d9 2a       	or	r13, r25
    1cf0:	ea 2a       	or	r14, r26
    1cf2:	fb 2a       	or	r15, r27
    1cf4:	15 c0       	rjmp	.+42     	; 0x1d20 <__vector_7+0x86>
    1cf6:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1cfa:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1cfe:	8f ef       	ldi	r24, 0xFF	; 255
    1d00:	c8 1a       	sub	r12, r24
    1d02:	d8 0a       	sbc	r13, r24
    1d04:	0d 2c       	mov	r0, r13
    1d06:	00 0c       	add	r0, r0
    1d08:	ee 08       	sbc	r14, r14
    1d0a:	ff 08       	sbc	r15, r15
    1d0c:	d6 01       	movw	r26, r12
    1d0e:	99 27       	eor	r25, r25
    1d10:	88 27       	eor	r24, r24
    1d12:	69 01       	movw	r12, r18
    1d14:	e1 2c       	mov	r14, r1
    1d16:	f1 2c       	mov	r15, r1
    1d18:	c8 2a       	or	r12, r24
    1d1a:	d9 2a       	or	r13, r25
    1d1c:	ea 2a       	or	r14, r26
    1d1e:	fb 2a       	or	r15, r27
    1d20:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <timerQ>
    1d24:	f0 91 57 01 	lds	r31, 0x0157	; 0x800157 <timerQ+0x1>
    1d28:	30 97       	sbiw	r30, 0x00	; 0
    1d2a:	09 f4       	brne	.+2      	; 0x1d2e <__vector_7+0x94>
    1d2c:	42 c0       	rjmp	.+132    	; 0x1db2 <__vector_7+0x118>
    1d2e:	82 81       	ldd	r24, Z+2	; 0x02
    1d30:	93 81       	ldd	r25, Z+3	; 0x03
    1d32:	a4 81       	ldd	r26, Z+4	; 0x04
    1d34:	b5 81       	ldd	r27, Z+5	; 0x05
    1d36:	8c 19       	sub	r24, r12
    1d38:	9d 09       	sbc	r25, r13
    1d3a:	ae 09       	sbc	r26, r14
    1d3c:	bf 09       	sbc	r27, r15
    1d3e:	18 16       	cp	r1, r24
    1d40:	19 06       	cpc	r1, r25
    1d42:	1a 06       	cpc	r1, r26
    1d44:	1b 06       	cpc	r1, r27
    1d46:	ec f1       	brlt	.+122    	; 0x1dc2 <__vector_7+0x128>
    1d48:	86 e5       	ldi	r24, 0x56	; 86
    1d4a:	91 e0       	ldi	r25, 0x01	; 1
    1d4c:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <dequeue>
    1d50:	68 e5       	ldi	r22, 0x58	; 88
    1d52:	71 e0       	ldi	r23, 0x01	; 1
    1d54:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <enqueueByDeadline>
    1d58:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <timerQ>
    1d5c:	f0 91 57 01 	lds	r31, 0x0157	; 0x800157 <timerQ+0x1>
    1d60:	30 97       	sbiw	r30, 0x00	; 0
    1d62:	39 f1       	breq	.+78     	; 0x1db2 <__vector_7+0x118>
    1d64:	82 81       	ldd	r24, Z+2	; 0x02
    1d66:	93 81       	ldd	r25, Z+3	; 0x03
    1d68:	a4 81       	ldd	r26, Z+4	; 0x04
    1d6a:	b5 81       	ldd	r27, Z+5	; 0x05
    1d6c:	8c 19       	sub	r24, r12
    1d6e:	9d 09       	sbc	r25, r13
    1d70:	ae 09       	sbc	r26, r14
    1d72:	bf 09       	sbc	r27, r15
    1d74:	18 16       	cp	r1, r24
    1d76:	19 06       	cpc	r1, r25
    1d78:	1a 06       	cpc	r1, r26
    1d7a:	1b 06       	cpc	r1, r27
    1d7c:	2c f7       	brge	.-54     	; 0x1d48 <__vector_7+0xae>
    1d7e:	21 c0       	rjmp	.+66     	; 0x1dc2 <__vector_7+0x128>
    1d80:	9c 01       	movw	r18, r24
    1d82:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d86:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d8a:	84 1b       	sub	r24, r20
    1d8c:	95 0b       	sbc	r25, r21
    1d8e:	01 97       	sbiw	r24, 0x01	; 1
    1d90:	31 f4       	brne	.+12     	; 0x1d9e <__vector_7+0x104>
    1d92:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d96:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d9a:	2f 5f       	subi	r18, 0xFF	; 255
    1d9c:	3f 4f       	sbci	r19, 0xFF	; 255
    1d9e:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1da2:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1da6:	ef e6       	ldi	r30, 0x6F	; 111
    1da8:	f0 e0       	ldi	r31, 0x00	; 0
    1daa:	80 81       	ld	r24, Z
    1dac:	82 60       	ori	r24, 0x02	; 2
    1dae:	80 83       	st	Z, r24
    1db0:	05 c0       	rjmp	.+10     	; 0x1dbc <__vector_7+0x122>
    1db2:	ef e6       	ldi	r30, 0x6F	; 111
    1db4:	f0 e0       	ldi	r31, 0x00	; 0
    1db6:	80 81       	ld	r24, Z
    1db8:	8d 7f       	andi	r24, 0xFD	; 253
    1dba:	80 83       	st	Z, r24
    1dbc:	0e 94 8b 05 	call	0xb16	; 0xb16 <schedule>
    1dc0:	0c c0       	rjmp	.+24     	; 0x1dda <__vector_7+0x140>
    1dc2:	82 81       	ldd	r24, Z+2	; 0x02
    1dc4:	93 81       	ldd	r25, Z+3	; 0x03
    1dc6:	a4 81       	ldd	r26, Z+4	; 0x04
    1dc8:	b5 81       	ldd	r27, Z+5	; 0x05
    1dca:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    1dce:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1dd2:	2a 17       	cp	r18, r26
    1dd4:	3b 07       	cpc	r19, r27
    1dd6:	69 f7       	brne	.-38     	; 0x1db2 <__vector_7+0x118>
    1dd8:	d3 cf       	rjmp	.-90     	; 0x1d80 <__vector_7+0xe6>
    1dda:	ff 91       	pop	r31
    1ddc:	ef 91       	pop	r30
    1dde:	bf 91       	pop	r27
    1de0:	af 91       	pop	r26
    1de2:	9f 91       	pop	r25
    1de4:	8f 91       	pop	r24
    1de6:	7f 91       	pop	r23
    1de8:	6f 91       	pop	r22
    1dea:	5f 91       	pop	r21
    1dec:	4f 91       	pop	r20
    1dee:	3f 91       	pop	r19
    1df0:	2f 91       	pop	r18
    1df2:	ff 90       	pop	r15
    1df4:	ef 90       	pop	r14
    1df6:	df 90       	pop	r13
    1df8:	cf 90       	pop	r12
    1dfa:	0f 90       	pop	r0
    1dfc:	0f be       	out	0x3f, r0	; 63
    1dfe:	0f 90       	pop	r0
    1e00:	1f 90       	pop	r1
    1e02:	18 95       	reti

00001e04 <async>:
    1e04:	3f 92       	push	r3
    1e06:	4f 92       	push	r4
    1e08:	5f 92       	push	r5
    1e0a:	6f 92       	push	r6
    1e0c:	7f 92       	push	r7
    1e0e:	8f 92       	push	r8
    1e10:	9f 92       	push	r9
    1e12:	af 92       	push	r10
    1e14:	bf 92       	push	r11
    1e16:	cf 92       	push	r12
    1e18:	df 92       	push	r13
    1e1a:	ef 92       	push	r14
    1e1c:	ff 92       	push	r15
    1e1e:	0f 93       	push	r16
    1e20:	1f 93       	push	r17
    1e22:	cf 93       	push	r28
    1e24:	df 93       	push	r29
    1e26:	2b 01       	movw	r4, r22
    1e28:	3c 01       	movw	r6, r24
    1e2a:	49 01       	movw	r8, r18
    1e2c:	5a 01       	movw	r10, r20
    1e2e:	8f b7       	in	r24, 0x3f	; 63
    1e30:	80 78       	andi	r24, 0x80	; 128
    1e32:	38 2e       	mov	r3, r24
    1e34:	f8 94       	cli
    1e36:	86 e0       	ldi	r24, 0x06	; 6
    1e38:	91 e0       	ldi	r25, 0x01	; 1
    1e3a:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <dequeue>
    1e3e:	ec 01       	movw	r28, r24
    1e40:	1b 87       	std	Y+11, r17	; 0x0b
    1e42:	0a 87       	std	Y+10, r16	; 0x0a
    1e44:	fd 86       	std	Y+13, r15	; 0x0d
    1e46:	ec 86       	std	Y+12, r14	; 0x0c
    1e48:	df 86       	std	Y+15, r13	; 0x0f
    1e4a:	ce 86       	std	Y+14, r12	; 0x0e
    1e4c:	33 20       	and	r3, r3
    1e4e:	61 f0       	breq	.+24     	; 0x1e68 <async+0x64>
    1e50:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e54:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e58:	02 80       	ldd	r0, Z+2	; 0x02
    1e5a:	f3 81       	ldd	r31, Z+3	; 0x03
    1e5c:	e0 2d       	mov	r30, r0
    1e5e:	82 81       	ldd	r24, Z+2	; 0x02
    1e60:	93 81       	ldd	r25, Z+3	; 0x03
    1e62:	a4 81       	ldd	r26, Z+4	; 0x04
    1e64:	b5 81       	ldd	r27, Z+5	; 0x05
    1e66:	08 c0       	rjmp	.+16     	; 0x1e78 <async+0x74>
    1e68:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <timestamp>
    1e6c:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <timestamp+0x1>
    1e70:	a0 91 54 01 	lds	r26, 0x0154	; 0x800154 <timestamp+0x2>
    1e74:	b0 91 55 01 	lds	r27, 0x0155	; 0x800155 <timestamp+0x3>
    1e78:	48 0e       	add	r4, r24
    1e7a:	59 1e       	adc	r5, r25
    1e7c:	6a 1e       	adc	r6, r26
    1e7e:	7b 1e       	adc	r7, r27
    1e80:	4a 82       	std	Y+2, r4	; 0x02
    1e82:	5b 82       	std	Y+3, r5	; 0x03
    1e84:	6c 82       	std	Y+4, r6	; 0x04
    1e86:	7d 82       	std	Y+5, r7	; 0x05
    1e88:	18 14       	cp	r1, r8
    1e8a:	19 04       	cpc	r1, r9
    1e8c:	1a 04       	cpc	r1, r10
    1e8e:	1b 04       	cpc	r1, r11
    1e90:	44 f0       	brlt	.+16     	; 0x1ea2 <async+0x9e>
    1e92:	0f 2e       	mov	r0, r31
    1e94:	88 24       	eor	r8, r8
    1e96:	8a 94       	dec	r8
    1e98:	98 2c       	mov	r9, r8
    1e9a:	a8 2c       	mov	r10, r8
    1e9c:	ff e7       	ldi	r31, 0x7F	; 127
    1e9e:	bf 2e       	mov	r11, r31
    1ea0:	f0 2d       	mov	r31, r0
    1ea2:	84 0c       	add	r8, r4
    1ea4:	95 1c       	adc	r9, r5
    1ea6:	a6 1c       	adc	r10, r6
    1ea8:	b7 1c       	adc	r11, r7
    1eaa:	8e 82       	std	Y+6, r8	; 0x06
    1eac:	9f 82       	std	Y+7, r9	; 0x07
    1eae:	a8 86       	std	Y+8, r10	; 0x08
    1eb0:	b9 86       	std	Y+9, r11	; 0x09
    1eb2:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <__data_end>
    1eb6:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <__data_end+0x1>
    1eba:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ebe:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ec2:	b0 99       	sbic	0x16, 0	; 22
    1ec4:	0e c0       	rjmp	.+28     	; 0x1ee2 <async+0xde>
    1ec6:	09 2e       	mov	r0, r25
    1ec8:	00 0c       	add	r0, r0
    1eca:	aa 0b       	sbc	r26, r26
    1ecc:	bb 0b       	sbc	r27, r27
    1ece:	dc 01       	movw	r26, r24
    1ed0:	99 27       	eor	r25, r25
    1ed2:	88 27       	eor	r24, r24
    1ed4:	60 e0       	ldi	r22, 0x00	; 0
    1ed6:	70 e0       	ldi	r23, 0x00	; 0
    1ed8:	84 2b       	or	r24, r20
    1eda:	95 2b       	or	r25, r21
    1edc:	a6 2b       	or	r26, r22
    1ede:	b7 2b       	or	r27, r23
    1ee0:	13 c0       	rjmp	.+38     	; 0x1f08 <async+0x104>
    1ee2:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ee6:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1eea:	01 96       	adiw	r24, 0x01	; 1
    1eec:	09 2e       	mov	r0, r25
    1eee:	00 0c       	add	r0, r0
    1ef0:	aa 0b       	sbc	r26, r26
    1ef2:	bb 0b       	sbc	r27, r27
    1ef4:	dc 01       	movw	r26, r24
    1ef6:	99 27       	eor	r25, r25
    1ef8:	88 27       	eor	r24, r24
    1efa:	a9 01       	movw	r20, r18
    1efc:	60 e0       	ldi	r22, 0x00	; 0
    1efe:	70 e0       	ldi	r23, 0x00	; 0
    1f00:	84 2b       	or	r24, r20
    1f02:	95 2b       	or	r25, r21
    1f04:	a6 2b       	or	r26, r22
    1f06:	b7 2b       	or	r27, r23
    1f08:	48 1a       	sub	r4, r24
    1f0a:	59 0a       	sbc	r5, r25
    1f0c:	6a 0a       	sbc	r6, r26
    1f0e:	7b 0a       	sbc	r7, r27
    1f10:	14 14       	cp	r1, r4
    1f12:	15 04       	cpc	r1, r5
    1f14:	16 04       	cpc	r1, r6
    1f16:	17 04       	cpc	r1, r7
    1f18:	ac f5       	brge	.+106    	; 0x1f84 <async+0x180>
    1f1a:	66 e5       	ldi	r22, 0x56	; 86
    1f1c:	71 e0       	ldi	r23, 0x01	; 1
    1f1e:	ce 01       	movw	r24, r28
    1f20:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <enqueueByBaseline>
    1f24:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <timerQ>
    1f28:	f0 91 57 01 	lds	r31, 0x0157	; 0x800157 <timerQ+0x1>
    1f2c:	30 97       	sbiw	r30, 0x00	; 0
    1f2e:	21 f1       	breq	.+72     	; 0x1f78 <async+0x174>
    1f30:	82 81       	ldd	r24, Z+2	; 0x02
    1f32:	93 81       	ldd	r25, Z+3	; 0x03
    1f34:	a4 81       	ldd	r26, Z+4	; 0x04
    1f36:	b5 81       	ldd	r27, Z+5	; 0x05
    1f38:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    1f3c:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1f40:	2a 17       	cp	r18, r26
    1f42:	3b 07       	cpc	r19, r27
    1f44:	c9 f4       	brne	.+50     	; 0x1f78 <async+0x174>
    1f46:	9c 01       	movw	r18, r24
    1f48:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1f4c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1f50:	84 1b       	sub	r24, r20
    1f52:	95 0b       	sbc	r25, r21
    1f54:	01 97       	sbiw	r24, 0x01	; 1
    1f56:	31 f4       	brne	.+12     	; 0x1f64 <async+0x160>
    1f58:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1f5c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1f60:	2f 5f       	subi	r18, 0xFF	; 255
    1f62:	3f 4f       	sbci	r19, 0xFF	; 255
    1f64:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1f68:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1f6c:	ef e6       	ldi	r30, 0x6F	; 111
    1f6e:	f0 e0       	ldi	r31, 0x00	; 0
    1f70:	80 81       	ld	r24, Z
    1f72:	82 60       	ori	r24, 0x02	; 2
    1f74:	80 83       	st	Z, r24
    1f76:	41 c0       	rjmp	.+130    	; 0x1ffa <async+0x1f6>
    1f78:	ef e6       	ldi	r30, 0x6F	; 111
    1f7a:	f0 e0       	ldi	r31, 0x00	; 0
    1f7c:	80 81       	ld	r24, Z
    1f7e:	8d 7f       	andi	r24, 0xFD	; 253
    1f80:	80 83       	st	Z, r24
    1f82:	3b c0       	rjmp	.+118    	; 0x1ffa <async+0x1f6>
    1f84:	68 e5       	ldi	r22, 0x58	; 88
    1f86:	71 e0       	ldi	r23, 0x01	; 1
    1f88:	ce 01       	movw	r24, r28
    1f8a:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <enqueueByDeadline>
    1f8e:	33 20       	and	r3, r3
    1f90:	b9 f1       	breq	.+110    	; 0x2000 <async+0x1fc>
    1f92:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1f96:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1f9a:	00 97       	sbiw	r24, 0x00	; 0
    1f9c:	81 f1       	breq	.+96     	; 0x1ffe <async+0x1fa>
    1f9e:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1fa2:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1fa6:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <msgQ>
    1faa:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <msgQ+0x1>
    1fae:	02 81       	ldd	r16, Z+2	; 0x02
    1fb0:	13 81       	ldd	r17, Z+3	; 0x03
    1fb2:	d9 01       	movw	r26, r18
    1fb4:	16 96       	adiw	r26, 0x06	; 6
    1fb6:	4d 91       	ld	r20, X+
    1fb8:	5d 91       	ld	r21, X+
    1fba:	6d 91       	ld	r22, X+
    1fbc:	7c 91       	ld	r23, X
    1fbe:	19 97       	sbiw	r26, 0x09	; 9
    1fc0:	d8 01       	movw	r26, r16
    1fc2:	16 96       	adiw	r26, 0x06	; 6
    1fc4:	0d 91       	ld	r16, X+
    1fc6:	1d 91       	ld	r17, X+
    1fc8:	2d 91       	ld	r18, X+
    1fca:	3c 91       	ld	r19, X
    1fcc:	19 97       	sbiw	r26, 0x09	; 9
    1fce:	40 1b       	sub	r20, r16
    1fd0:	51 0b       	sbc	r21, r17
    1fd2:	62 0b       	sbc	r22, r18
    1fd4:	73 0b       	sbc	r23, r19
    1fd6:	9a f4       	brpl	.+38     	; 0x1ffe <async+0x1fa>
    1fd8:	dc 01       	movw	r26, r24
    1fda:	2d 91       	ld	r18, X+
    1fdc:	3c 91       	ld	r19, X
    1fde:	11 97       	sbiw	r26, 0x01	; 1
    1fe0:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
    1fe4:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
    1fe8:	ed 93       	st	X+, r30
    1fea:	fc 93       	st	X, r31
    1fec:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
    1ff0:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
    1ff4:	0e 94 6b 05 	call	0xad6	; 0xad6 <dispatch>
    1ff8:	02 c0       	rjmp	.+4      	; 0x1ffe <async+0x1fa>
    1ffa:	33 20       	and	r3, r3
    1ffc:	09 f0       	breq	.+2      	; 0x2000 <async+0x1fc>
    1ffe:	78 94       	sei
    2000:	ce 01       	movw	r24, r28
    2002:	df 91       	pop	r29
    2004:	cf 91       	pop	r28
    2006:	1f 91       	pop	r17
    2008:	0f 91       	pop	r16
    200a:	ff 90       	pop	r15
    200c:	ef 90       	pop	r14
    200e:	df 90       	pop	r13
    2010:	cf 90       	pop	r12
    2012:	bf 90       	pop	r11
    2014:	af 90       	pop	r10
    2016:	9f 90       	pop	r9
    2018:	8f 90       	pop	r8
    201a:	7f 90       	pop	r7
    201c:	6f 90       	pop	r6
    201e:	5f 90       	pop	r5
    2020:	4f 90       	pop	r4
    2022:	3f 90       	pop	r3
    2024:	08 95       	ret

00002026 <sync>:
    2026:	cf 92       	push	r12
    2028:	df 92       	push	r13
    202a:	ef 92       	push	r14
    202c:	ff 92       	push	r15
    202e:	0f 93       	push	r16
    2030:	1f 93       	push	r17
    2032:	cf 93       	push	r28
    2034:	df 93       	push	r29
    2036:	ec 01       	movw	r28, r24
    2038:	7b 01       	movw	r14, r22
    203a:	6a 01       	movw	r12, r20
    203c:	1f b7       	in	r17, 0x3f	; 63
    203e:	10 78       	andi	r17, 0x80	; 128
    2040:	f8 94       	cli
    2042:	a8 81       	ld	r26, Y
    2044:	b9 81       	ldd	r27, Y+1	; 0x01
    2046:	10 97       	sbiw	r26, 0x00	; 0
    2048:	61 f1       	breq	.+88     	; 0x20a2 <sync+0x7c>
    204a:	14 96       	adiw	r26, 0x04	; 4
    204c:	ed 91       	ld	r30, X+
    204e:	fc 91       	ld	r31, X
    2050:	15 97       	sbiw	r26, 0x05	; 5
    2052:	30 97       	sbiw	r30, 0x00	; 0
    2054:	41 f0       	breq	.+16     	; 0x2066 <sync+0x40>
    2056:	a0 81       	ld	r26, Z
    2058:	b1 81       	ldd	r27, Z+1	; 0x01
    205a:	14 96       	adiw	r26, 0x04	; 4
    205c:	ed 91       	ld	r30, X+
    205e:	fc 91       	ld	r31, X
    2060:	15 97       	sbiw	r26, 0x05	; 5
    2062:	30 97       	sbiw	r30, 0x00	; 0
    2064:	c1 f7       	brne	.-16     	; 0x2056 <sync+0x30>
    2066:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    206a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    206e:	2a 17       	cp	r18, r26
    2070:	3b 07       	cpc	r19, r27
    2072:	21 f0       	breq	.+8      	; 0x207c <sync+0x56>
    2074:	11 23       	and	r17, r17
    2076:	09 f4       	brne	.+2      	; 0x207a <sync+0x54>
    2078:	3d c0       	rjmp	.+122    	; 0x20f4 <sync+0xce>
    207a:	07 c0       	rjmp	.+14     	; 0x208a <sync+0x64>
    207c:	11 23       	and	r17, r17
    207e:	09 f4       	brne	.+2      	; 0x2082 <sync+0x5c>
    2080:	3c c0       	rjmp	.+120    	; 0x20fa <sync+0xd4>
    2082:	78 94       	sei
    2084:	8f ef       	ldi	r24, 0xFF	; 255
    2086:	9f ef       	ldi	r25, 0xFF	; 255
    2088:	52 c0       	rjmp	.+164    	; 0x212e <sync+0x108>
    208a:	8a 81       	ldd	r24, Y+2	; 0x02
    208c:	9b 81       	ldd	r25, Y+3	; 0x03
    208e:	00 97       	sbiw	r24, 0x00	; 0
    2090:	d1 f1       	breq	.+116    	; 0x2106 <sync+0xe0>
    2092:	fc 01       	movw	r30, r24
    2094:	15 82       	std	Z+5, r1	; 0x05
    2096:	14 82       	std	Z+4, r1	; 0x04
    2098:	36 c0       	rjmp	.+108    	; 0x2106 <sync+0xe0>
    209a:	78 94       	sei
    209c:	80 e0       	ldi	r24, 0x00	; 0
    209e:	90 e0       	ldi	r25, 0x00	; 0
    20a0:	46 c0       	rjmp	.+140    	; 0x212e <sync+0x108>
    20a2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    20a6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    20aa:	99 83       	std	Y+1, r25	; 0x01
    20ac:	88 83       	st	Y, r24
    20ae:	11 23       	and	r17, r17
    20b0:	29 f0       	breq	.+10     	; 0x20bc <sync+0x96>
    20b2:	8a 81       	ldd	r24, Y+2	; 0x02
    20b4:	9b 81       	ldd	r25, Y+3	; 0x03
    20b6:	01 97       	sbiw	r24, 0x01	; 1
    20b8:	09 f0       	breq	.+2      	; 0x20bc <sync+0x96>
    20ba:	78 94       	sei
    20bc:	b6 01       	movw	r22, r12
    20be:	ce 01       	movw	r24, r28
    20c0:	f7 01       	movw	r30, r14
    20c2:	09 95       	icall
    20c4:	f8 2e       	mov	r15, r24
    20c6:	09 2f       	mov	r16, r25
    20c8:	8f b7       	in	r24, 0x3f	; 63
    20ca:	f8 94       	cli
    20cc:	19 82       	std	Y+1, r1	; 0x01
    20ce:	18 82       	st	Y, r1
    20d0:	8a 81       	ldd	r24, Y+2	; 0x02
    20d2:	9b 81       	ldd	r25, Y+3	; 0x03
    20d4:	82 30       	cpi	r24, 0x02	; 2
    20d6:	91 05       	cpc	r25, r1
    20d8:	38 f0       	brcs	.+14     	; 0x20e8 <sync+0xc2>
    20da:	1b 82       	std	Y+3, r1	; 0x03
    20dc:	1a 82       	std	Y+2, r1	; 0x02
    20de:	fc 01       	movw	r30, r24
    20e0:	15 82       	std	Z+5, r1	; 0x05
    20e2:	14 82       	std	Z+4, r1	; 0x04
    20e4:	0e 94 6b 05 	call	0xad6	; 0xad6 <dispatch>
    20e8:	11 23       	and	r17, r17
    20ea:	51 f0       	breq	.+20     	; 0x2100 <sync+0xda>
    20ec:	78 94       	sei
    20ee:	8f 2d       	mov	r24, r15
    20f0:	90 2f       	mov	r25, r16
    20f2:	1d c0       	rjmp	.+58     	; 0x212e <sync+0x108>
    20f4:	8f ef       	ldi	r24, 0xFF	; 255
    20f6:	9f ef       	ldi	r25, 0xFF	; 255
    20f8:	1a c0       	rjmp	.+52     	; 0x212e <sync+0x108>
    20fa:	8f ef       	ldi	r24, 0xFF	; 255
    20fc:	9f ef       	ldi	r25, 0xFF	; 255
    20fe:	17 c0       	rjmp	.+46     	; 0x212e <sync+0x108>
    2100:	8f 2d       	mov	r24, r15
    2102:	90 2f       	mov	r25, r16
    2104:	14 c0       	rjmp	.+40     	; 0x212e <sync+0x108>
    2106:	3b 83       	std	Y+3, r19	; 0x03
    2108:	2a 83       	std	Y+2, r18	; 0x02
    210a:	f9 01       	movw	r30, r18
    210c:	d5 83       	std	Z+5, r29	; 0x05
    210e:	c4 83       	std	Z+4, r28	; 0x04
    2110:	cd 01       	movw	r24, r26
    2112:	0e 94 6b 05 	call	0xad6	; 0xad6 <dispatch>
    2116:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    211a:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    211e:	82 81       	ldd	r24, Z+2	; 0x02
    2120:	93 81       	ldd	r25, Z+3	; 0x03
    2122:	89 2b       	or	r24, r25
    2124:	09 f4       	brne	.+2      	; 0x2128 <sync+0x102>
    2126:	b9 cf       	rjmp	.-142    	; 0x209a <sync+0x74>
    2128:	f9 83       	std	Y+1, r31	; 0x01
    212a:	e8 83       	st	Y, r30
    212c:	c2 cf       	rjmp	.-124    	; 0x20b2 <sync+0x8c>
    212e:	df 91       	pop	r29
    2130:	cf 91       	pop	r28
    2132:	1f 91       	pop	r17
    2134:	0f 91       	pop	r16
    2136:	ff 90       	pop	r15
    2138:	ef 90       	pop	r14
    213a:	df 90       	pop	r13
    213c:	cf 90       	pop	r12
    213e:	08 95       	ret

00002140 <run>:
    2140:	00 91 00 01 	lds	r16, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2144:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2148:	88 e5       	ldi	r24, 0x58	; 88
    214a:	91 e0       	ldi	r25, 0x01	; 1
    214c:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <dequeue>
    2150:	ec 01       	movw	r28, r24
    2152:	d8 01       	movw	r26, r16
    2154:	13 96       	adiw	r26, 0x03	; 3
    2156:	9c 93       	st	X, r25
    2158:	8e 93       	st	-X, r24
    215a:	12 97       	sbiw	r26, 0x02	; 2
    215c:	78 94       	sei
    215e:	4e 85       	ldd	r20, Y+14	; 0x0e
    2160:	5f 85       	ldd	r21, Y+15	; 0x0f
    2162:	6c 85       	ldd	r22, Y+12	; 0x0c
    2164:	7d 85       	ldd	r23, Y+13	; 0x0d
    2166:	8a 85       	ldd	r24, Y+10	; 0x0a
    2168:	9b 85       	ldd	r25, Y+11	; 0x0b
    216a:	0e 94 13 10 	call	0x2026	; 0x2026 <sync>
    216e:	8f b7       	in	r24, 0x3f	; 63
    2170:	f8 94       	cli
    2172:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <msgPool>
    2176:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <msgPool+0x1>
    217a:	99 83       	std	Y+1, r25	; 0x01
    217c:	88 83       	st	Y, r24
    217e:	d0 93 07 01 	sts	0x0107, r29	; 0x800107 <msgPool+0x1>
    2182:	c0 93 06 01 	sts	0x0106, r28	; 0x800106 <msgPool>
    2186:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    218a:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    218e:	00 81       	ld	r16, Z
    2190:	11 81       	ldd	r17, Z+1	; 0x01
    2192:	e8 01       	movw	r28, r16
    2194:	2a 81       	ldd	r18, Y+2	; 0x02
    2196:	3b 81       	ldd	r19, Y+3	; 0x03
    2198:	a0 91 58 01 	lds	r26, 0x0158	; 0x800158 <msgQ>
    219c:	b0 91 59 01 	lds	r27, 0x0159	; 0x800159 <msgQ+0x1>
    21a0:	10 97       	sbiw	r26, 0x00	; 0
    21a2:	c1 f0       	breq	.+48     	; 0x21d4 <run+0x94>
    21a4:	21 15       	cp	r18, r1
    21a6:	31 05       	cpc	r19, r1
    21a8:	59 f2       	breq	.-106    	; 0x2140 <run>
    21aa:	16 96       	adiw	r26, 0x06	; 6
    21ac:	8d 91       	ld	r24, X+
    21ae:	9d 91       	ld	r25, X+
    21b0:	0d 90       	ld	r0, X+
    21b2:	bc 91       	ld	r27, X
    21b4:	a0 2d       	mov	r26, r0
    21b6:	e9 01       	movw	r28, r18
    21b8:	4e 81       	ldd	r20, Y+6	; 0x06
    21ba:	5f 81       	ldd	r21, Y+7	; 0x07
    21bc:	68 85       	ldd	r22, Y+8	; 0x08
    21be:	79 85       	ldd	r23, Y+9	; 0x09
    21c0:	84 1b       	sub	r24, r20
    21c2:	95 0b       	sbc	r25, r21
    21c4:	a6 0b       	sbc	r26, r22
    21c6:	b7 0b       	sbc	r27, r23
    21c8:	18 16       	cp	r1, r24
    21ca:	19 06       	cpc	r1, r25
    21cc:	1a 06       	cpc	r1, r26
    21ce:	1b 06       	cpc	r1, r27
    21d0:	0c f0       	brlt	.+2      	; 0x21d4 <run+0x94>
    21d2:	b6 cf       	rjmp	.-148    	; 0x2140 <run>
    21d4:	10 93 03 01 	sts	0x0103, r17	; 0x800103 <activeStack+0x1>
    21d8:	00 93 02 01 	sts	0x0102, r16	; 0x800102 <activeStack>
    21dc:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    21e0:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    21e4:	91 83       	std	Z+1, r25	; 0x01
    21e6:	80 83       	st	Z, r24
    21e8:	f0 93 05 01 	sts	0x0105, r31	; 0x800105 <threadPool+0x1>
    21ec:	e0 93 04 01 	sts	0x0104, r30	; 0x800104 <threadPool>
    21f0:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <activeStack>
    21f4:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <activeStack+0x1>
    21f8:	14 96       	adiw	r26, 0x04	; 4
    21fa:	ed 91       	ld	r30, X+
    21fc:	fc 91       	ld	r31, X
    21fe:	15 97       	sbiw	r26, 0x05	; 5
    2200:	30 97       	sbiw	r30, 0x00	; 0
    2202:	41 f0       	breq	.+16     	; 0x2214 <run+0xd4>
    2204:	a0 81       	ld	r26, Z
    2206:	b1 81       	ldd	r27, Z+1	; 0x01
    2208:	14 96       	adiw	r26, 0x04	; 4
    220a:	ed 91       	ld	r30, X+
    220c:	fc 91       	ld	r31, X
    220e:	15 97       	sbiw	r26, 0x05	; 5
    2210:	30 97       	sbiw	r30, 0x00	; 0
    2212:	c1 f7       	brne	.-16     	; 0x2204 <run+0xc4>
    2214:	cd 01       	movw	r24, r26
    2216:	0e 94 6b 05 	call	0xad6	; 0xad6 <dispatch>
    221a:	92 cf       	rjmp	.-220    	; 0x2140 <run>

0000221c <install>:
    221c:	42 31       	cpi	r20, 0x12	; 18
    221e:	b8 f4       	brcc	.+46     	; 0x224e <install+0x32>
    2220:	2f b7       	in	r18, 0x3f	; 63
    2222:	f8 94       	cli
    2224:	50 e0       	ldi	r21, 0x00	; 0
    2226:	44 0f       	add	r20, r20
    2228:	55 1f       	adc	r21, r21
    222a:	fa 01       	movw	r30, r20
    222c:	e6 5a       	subi	r30, 0xA6	; 166
    222e:	fe 4f       	sbci	r31, 0xFE	; 254
    2230:	91 83       	std	Z+1, r25	; 0x01
    2232:	80 83       	st	Z, r24
    2234:	fa 01       	movw	r30, r20
    2236:	ee 50       	subi	r30, 0x0E	; 14
    2238:	fe 4f       	sbci	r31, 0xFE	; 254
    223a:	71 83       	std	Z+1, r23	; 0x01
    223c:	60 83       	st	Z, r22
    223e:	41 e0       	ldi	r20, 0x01	; 1
    2240:	50 e0       	ldi	r21, 0x00	; 0
    2242:	fc 01       	movw	r30, r24
    2244:	53 83       	std	Z+3, r21	; 0x03
    2246:	42 83       	std	Z+2, r20	; 0x02
    2248:	22 23       	and	r18, r18
    224a:	0c f4       	brge	.+2      	; 0x224e <install+0x32>
    224c:	78 94       	sei
    224e:	08 95       	ret

00002250 <tinytimber>:
    2250:	8c 01       	movw	r16, r24
    2252:	7b 01       	movw	r14, r22
    2254:	6a 01       	movw	r12, r20
    2256:	8f b7       	in	r24, 0x3f	; 63
    2258:	f8 94       	cli
    225a:	0e 94 00 05 	call	0xa00	; 0xa00 <initialize>
    225e:	78 94       	sei
    2260:	e1 14       	cp	r14, r1
    2262:	f1 04       	cpc	r15, r1
    2264:	41 f0       	breq	.+16     	; 0x2276 <tinytimber+0x26>
    2266:	20 e0       	ldi	r18, 0x00	; 0
    2268:	30 e0       	ldi	r19, 0x00	; 0
    226a:	a9 01       	movw	r20, r18
    226c:	60 e0       	ldi	r22, 0x00	; 0
    226e:	70 e0       	ldi	r23, 0x00	; 0
    2270:	cb 01       	movw	r24, r22
    2272:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <async>
    2276:	8f b7       	in	r24, 0x3f	; 63
    2278:	f8 94       	cli
    227a:	0e 94 8b 05 	call	0xb16	; 0xb16 <schedule>
    227e:	78 94       	sei
    2280:	81 e0       	ldi	r24, 0x01	; 1
    2282:	83 bf       	out	0x33, r24	; 51
    2284:	88 95       	sleep
    2286:	fd cf       	rjmp	.-6      	; 0x2282 <tinytimber+0x32>

00002288 <__divmodsi4>:
    2288:	05 2e       	mov	r0, r21
    228a:	97 fb       	bst	r25, 7
    228c:	1e f4       	brtc	.+6      	; 0x2294 <__divmodsi4+0xc>
    228e:	00 94       	com	r0
    2290:	0e 94 5b 11 	call	0x22b6	; 0x22b6 <__negsi2>
    2294:	57 fd       	sbrc	r21, 7
    2296:	07 d0       	rcall	.+14     	; 0x22a6 <__divmodsi4_neg2>
    2298:	0e 94 6a 11 	call	0x22d4	; 0x22d4 <__udivmodsi4>
    229c:	07 fc       	sbrc	r0, 7
    229e:	03 d0       	rcall	.+6      	; 0x22a6 <__divmodsi4_neg2>
    22a0:	4e f4       	brtc	.+18     	; 0x22b4 <__divmodsi4_exit>
    22a2:	0c 94 5b 11 	jmp	0x22b6	; 0x22b6 <__negsi2>

000022a6 <__divmodsi4_neg2>:
    22a6:	50 95       	com	r21
    22a8:	40 95       	com	r20
    22aa:	30 95       	com	r19
    22ac:	21 95       	neg	r18
    22ae:	3f 4f       	sbci	r19, 0xFF	; 255
    22b0:	4f 4f       	sbci	r20, 0xFF	; 255
    22b2:	5f 4f       	sbci	r21, 0xFF	; 255

000022b4 <__divmodsi4_exit>:
    22b4:	08 95       	ret

000022b6 <__negsi2>:
    22b6:	90 95       	com	r25
    22b8:	80 95       	com	r24
    22ba:	70 95       	com	r23
    22bc:	61 95       	neg	r22
    22be:	7f 4f       	sbci	r23, 0xFF	; 255
    22c0:	8f 4f       	sbci	r24, 0xFF	; 255
    22c2:	9f 4f       	sbci	r25, 0xFF	; 255
    22c4:	08 95       	ret

000022c6 <__usmulhisi3>:
    22c6:	0e 94 8c 11 	call	0x2318	; 0x2318 <__umulhisi3>

000022ca <__usmulhisi3_tail>:
    22ca:	b7 ff       	sbrs	r27, 7
    22cc:	08 95       	ret
    22ce:	82 1b       	sub	r24, r18
    22d0:	93 0b       	sbc	r25, r19
    22d2:	08 95       	ret

000022d4 <__udivmodsi4>:
    22d4:	a1 e2       	ldi	r26, 0x21	; 33
    22d6:	1a 2e       	mov	r1, r26
    22d8:	aa 1b       	sub	r26, r26
    22da:	bb 1b       	sub	r27, r27
    22dc:	fd 01       	movw	r30, r26
    22de:	0d c0       	rjmp	.+26     	; 0x22fa <__udivmodsi4_ep>

000022e0 <__udivmodsi4_loop>:
    22e0:	aa 1f       	adc	r26, r26
    22e2:	bb 1f       	adc	r27, r27
    22e4:	ee 1f       	adc	r30, r30
    22e6:	ff 1f       	adc	r31, r31
    22e8:	a2 17       	cp	r26, r18
    22ea:	b3 07       	cpc	r27, r19
    22ec:	e4 07       	cpc	r30, r20
    22ee:	f5 07       	cpc	r31, r21
    22f0:	20 f0       	brcs	.+8      	; 0x22fa <__udivmodsi4_ep>
    22f2:	a2 1b       	sub	r26, r18
    22f4:	b3 0b       	sbc	r27, r19
    22f6:	e4 0b       	sbc	r30, r20
    22f8:	f5 0b       	sbc	r31, r21

000022fa <__udivmodsi4_ep>:
    22fa:	66 1f       	adc	r22, r22
    22fc:	77 1f       	adc	r23, r23
    22fe:	88 1f       	adc	r24, r24
    2300:	99 1f       	adc	r25, r25
    2302:	1a 94       	dec	r1
    2304:	69 f7       	brne	.-38     	; 0x22e0 <__udivmodsi4_loop>
    2306:	60 95       	com	r22
    2308:	70 95       	com	r23
    230a:	80 95       	com	r24
    230c:	90 95       	com	r25
    230e:	9b 01       	movw	r18, r22
    2310:	ac 01       	movw	r20, r24
    2312:	bd 01       	movw	r22, r26
    2314:	cf 01       	movw	r24, r30
    2316:	08 95       	ret

00002318 <__umulhisi3>:
    2318:	a2 9f       	mul	r26, r18
    231a:	b0 01       	movw	r22, r0
    231c:	b3 9f       	mul	r27, r19
    231e:	c0 01       	movw	r24, r0
    2320:	a3 9f       	mul	r26, r19
    2322:	70 0d       	add	r23, r0
    2324:	81 1d       	adc	r24, r1
    2326:	11 24       	eor	r1, r1
    2328:	91 1d       	adc	r25, r1
    232a:	b2 9f       	mul	r27, r18
    232c:	70 0d       	add	r23, r0
    232e:	81 1d       	adc	r24, r1
    2330:	11 24       	eor	r1, r1
    2332:	91 1d       	adc	r25, r1
    2334:	08 95       	ret

00002336 <setjmp>:
    2336:	dc 01       	movw	r26, r24
    2338:	2d 92       	st	X+, r2
    233a:	3d 92       	st	X+, r3
    233c:	4d 92       	st	X+, r4
    233e:	5d 92       	st	X+, r5
    2340:	6d 92       	st	X+, r6
    2342:	7d 92       	st	X+, r7
    2344:	8d 92       	st	X+, r8
    2346:	9d 92       	st	X+, r9
    2348:	ad 92       	st	X+, r10
    234a:	bd 92       	st	X+, r11
    234c:	cd 92       	st	X+, r12
    234e:	dd 92       	st	X+, r13
    2350:	ed 92       	st	X+, r14
    2352:	fd 92       	st	X+, r15
    2354:	0d 93       	st	X+, r16
    2356:	1d 93       	st	X+, r17
    2358:	cd 93       	st	X+, r28
    235a:	dd 93       	st	X+, r29
    235c:	ff 91       	pop	r31
    235e:	ef 91       	pop	r30
    2360:	8d b7       	in	r24, 0x3d	; 61
    2362:	8d 93       	st	X+, r24
    2364:	8e b7       	in	r24, 0x3e	; 62
    2366:	8d 93       	st	X+, r24
    2368:	8f b7       	in	r24, 0x3f	; 63
    236a:	8d 93       	st	X+, r24
    236c:	ed 93       	st	X+, r30
    236e:	fd 93       	st	X+, r31
    2370:	88 27       	eor	r24, r24
    2372:	99 27       	eor	r25, r25
    2374:	09 94       	ijmp

00002376 <longjmp>:
    2376:	dc 01       	movw	r26, r24
    2378:	cb 01       	movw	r24, r22
    237a:	81 30       	cpi	r24, 0x01	; 1
    237c:	91 05       	cpc	r25, r1
    237e:	81 1d       	adc	r24, r1
    2380:	2d 90       	ld	r2, X+
    2382:	3d 90       	ld	r3, X+
    2384:	4d 90       	ld	r4, X+
    2386:	5d 90       	ld	r5, X+
    2388:	6d 90       	ld	r6, X+
    238a:	7d 90       	ld	r7, X+
    238c:	8d 90       	ld	r8, X+
    238e:	9d 90       	ld	r9, X+
    2390:	ad 90       	ld	r10, X+
    2392:	bd 90       	ld	r11, X+
    2394:	cd 90       	ld	r12, X+
    2396:	dd 90       	ld	r13, X+
    2398:	ed 90       	ld	r14, X+
    239a:	fd 90       	ld	r15, X+
    239c:	0d 91       	ld	r16, X+
    239e:	1d 91       	ld	r17, X+
    23a0:	cd 91       	ld	r28, X+
    23a2:	dd 91       	ld	r29, X+
    23a4:	ed 91       	ld	r30, X+
    23a6:	fd 91       	ld	r31, X+
    23a8:	0d 90       	ld	r0, X+
    23aa:	f8 94       	cli
    23ac:	fe bf       	out	0x3e, r31	; 62
    23ae:	0f be       	out	0x3f, r0	; 63
    23b0:	ed bf       	out	0x3d, r30	; 61
    23b2:	ed 91       	ld	r30, X+
    23b4:	fd 91       	ld	r31, X+
    23b6:	09 94       	ijmp

000023b8 <_exit>:
    23b8:	f8 94       	cli

000023ba <__stop_program>:
    23ba:	ff cf       	rjmp	.-2      	; 0x23ba <__stop_program>
