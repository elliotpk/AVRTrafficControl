
Lab5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000050  00800100  0000235c  000023f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000235c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  00800150  00800150  00002440  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002440  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002470  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002a8  00000000  00000000  000024b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000340b  00000000  00000000  00002758  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001298  00000000  00000000  00005b63  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000017eb  00000000  00000000  00006dfb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000d84  00000000  00000000  000085e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009d3  00000000  00000000  0000936c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003047  00000000  00000000  00009d3f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000228  00000000  00000000  0000cd86  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 96 05 	jmp	0xb2c	; 0xb2c <__vector_1>
       8:	0c 94 02 06 	jmp	0xc04	; 0xc04 <__vector_2>
       c:	0c 94 6e 06 	jmp	0xcdc	; 0xcdc <__vector_3>
      10:	0c 94 da 06 	jmp	0xdb4	; 0xdb4 <__vector_4>
      14:	0c 94 46 07 	jmp	0xe8c	; 0xe8c <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 1d 0e 	jmp	0x1c3a	; 0x1c3a <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 cb 0d 	jmp	0x1b96	; 0x1b96 <__vector_9>
      28:	0c 94 b2 07 	jmp	0xf64	; 0xf64 <__vector_10>
      2c:	0c 94 1e 08 	jmp	0x103c	; 0x103c <__vector_11>
      30:	0c 94 8a 08 	jmp	0x1114	; 0x1114 <__vector_12>
      34:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__vector_13>
      38:	0c 94 62 09 	jmp	0x12c4	; 0x12c4 <__vector_14>
      3c:	0c 94 ce 09 	jmp	0x139c	; 0x139c <__vector_15>
      40:	0c 94 3a 0a 	jmp	0x1474	; 0x1474 <__vector_16>
      44:	0c 94 a6 0a 	jmp	0x154c	; 0x154c <__vector_17>
      48:	0c 94 12 0b 	jmp	0x1624	; 0x1624 <__vector_18>
      4c:	0c 94 7e 0b 	jmp	0x16fc	; 0x16fc <__vector_19>
      50:	0c 94 ea 0b 	jmp	0x17d4	; 0x17d4 <__vector_20>
      54:	0c 94 56 0c 	jmp	0x18ac	; 0x18ac <__vector_21>
      58:	0c 94 c2 0c 	jmp	0x1984	; 0x1984 <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	ec e5       	ldi	r30, 0x5C	; 92
      70:	f3 e2       	ldi	r31, 0x23	; 35
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	a0 35       	cpi	r26, 0x50	; 80
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	a0 e5       	ldi	r26, 0x50	; 80
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	a3 3a       	cpi	r26, 0xA3	; 163
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 a8 03 	call	0x750	; 0x750 <main>
      92:	0c 94 ac 11 	jmp	0x2358	; 0x2358 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <removeEntry>:
	ASYNC(&(self->display[1]), updateDisplay, self->onBridge);
	AFTER(SEC(5), self, removeEntry, 0);
	removeCar(self, val);
}

void removeEntry(TC *self) {
      9a:	cf 92       	push	r12
      9c:	df 92       	push	r13
      9e:	ef 92       	push	r14
      a0:	ff 92       	push	r15
      a2:	0f 93       	push	r16
      a4:	1f 93       	push	r17
	self->onBridge--;
      a6:	fc 01       	movw	r30, r24
      a8:	c6 8c       	ldd	r12, Z+30	; 0x1e
      aa:	d7 8c       	ldd	r13, Z+31	; 0x1f
      ac:	f1 e0       	ldi	r31, 0x01	; 1
      ae:	cf 1a       	sub	r12, r31
      b0:	d1 08       	sbc	r13, r1
      b2:	fc 01       	movw	r30, r24
      b4:	d7 8e       	std	Z+31, r13	; 0x1f
      b6:	c6 8e       	std	Z+30, r12	; 0x1e
	ASYNC(&(self->display[1]), updateDisplay, self->onBridge);
      b8:	8c 01       	movw	r16, r24
      ba:	06 5f       	subi	r16, 0xF6	; 246
      bc:	1f 4f       	sbci	r17, 0xFF	; 255
      be:	0f 2e       	mov	r0, r31
      c0:	f1 e8       	ldi	r31, 0x81	; 129
      c2:	ef 2e       	mov	r14, r31
      c4:	f2 e0       	ldi	r31, 0x02	; 2
      c6:	ff 2e       	mov	r15, r31
      c8:	f0 2d       	mov	r31, r0
      ca:	20 e0       	ldi	r18, 0x00	; 0
      cc:	30 e0       	ldi	r19, 0x00	; 0
      ce:	a9 01       	movw	r20, r18
      d0:	60 e0       	ldi	r22, 0x00	; 0
      d2:	70 e0       	ldi	r23, 0x00	; 0
      d4:	cb 01       	movw	r24, r22
      d6:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <async>
}
      da:	1f 91       	pop	r17
      dc:	0f 91       	pop	r16
      de:	ff 90       	pop	r15
      e0:	ef 90       	pop	r14
      e2:	df 90       	pop	r13
      e4:	cf 90       	pop	r12
      e6:	08 95       	ret

000000e8 <closeRoad>:
	} else {
		closeRoad(self, 0);
	}
} */

void closeRoad(TC *self, int val) {
      e8:	cf 92       	push	r12
      ea:	df 92       	push	r13
      ec:	ef 92       	push	r14
      ee:	ff 92       	push	r15
      f0:	0f 93       	push	r16
      f2:	1f 93       	push	r17
      f4:	cf 93       	push	r28
      f6:	df 93       	push	r29
      f8:	ec 01       	movw	r28, r24
	ASYNC(self->lights[val], red, 0);
      fa:	fb 01       	movw	r30, r22
      fc:	3b 96       	adiw	r30, 0x0b	; 11
      fe:	ee 0f       	add	r30, r30
     100:	ff 1f       	adc	r31, r31
     102:	e8 0f       	add	r30, r24
     104:	f9 1f       	adc	r31, r25
     106:	00 81       	ld	r16, Z
     108:	11 81       	ldd	r17, Z+1	; 0x01
     10a:	c1 2c       	mov	r12, r1
     10c:	d1 2c       	mov	r13, r1
     10e:	0f 2e       	mov	r0, r31
     110:	fa ec       	ldi	r31, 0xCA	; 202
     112:	ef 2e       	mov	r14, r31
     114:	f4 e0       	ldi	r31, 0x04	; 4
     116:	ff 2e       	mov	r15, r31
     118:	f0 2d       	mov	r31, r0
     11a:	20 e0       	ldi	r18, 0x00	; 0
     11c:	30 e0       	ldi	r19, 0x00	; 0
     11e:	a9 01       	movw	r20, r18
     120:	60 e0       	ldi	r22, 0x00	; 0
     122:	70 e0       	ldi	r23, 0x00	; 0
     124:	cb 01       	movw	r24, r22
     126:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <async>
	self->bridgeClear = 0;
     12a:	19 a2       	std	Y+33, r1	; 0x21
     12c:	18 a2       	std	Y+32, r1	; 0x20
}
     12e:	df 91       	pop	r29
     130:	cf 91       	pop	r28
     132:	1f 91       	pop	r17
     134:	0f 91       	pop	r16
     136:	ff 90       	pop	r15
     138:	ef 90       	pop	r14
     13a:	df 90       	pop	r13
     13c:	cf 90       	pop	r12
     13e:	08 95       	ret

00000140 <addCar>:
 * Created: 2021-03-14 21:46:41
 *  Author: ailio
 */ 
#include "controller.h"

void addCar(TC *self, int val) {
     140:	cf 92       	push	r12
     142:	df 92       	push	r13
     144:	ef 92       	push	r14
     146:	ff 92       	push	r15
     148:	0f 93       	push	r16
     14a:	1f 93       	push	r17
	if(val == 0) {
     14c:	67 2b       	or	r22, r23
     14e:	d9 f4       	brne	.+54     	; 0x186 <addCar+0x46>
		self->queues[0]++;
     150:	fc 01       	movw	r30, r24
     152:	c2 8c       	ldd	r12, Z+26	; 0x1a
     154:	d3 8c       	ldd	r13, Z+27	; 0x1b
     156:	ff ef       	ldi	r31, 0xFF	; 255
     158:	cf 1a       	sub	r12, r31
     15a:	df 0a       	sbc	r13, r31
     15c:	fc 01       	movw	r30, r24
     15e:	d3 8e       	std	Z+27, r13	; 0x1b
     160:	c2 8e       	std	Z+26, r12	; 0x1a
		ASYNC(&(self->display[0]), updateDisplay, self->queues[0]);
     162:	8c 01       	movw	r16, r24
     164:	0c 5f       	subi	r16, 0xFC	; 252
     166:	1f 4f       	sbci	r17, 0xFF	; 255
     168:	0f 2e       	mov	r0, r31
     16a:	f1 e8       	ldi	r31, 0x81	; 129
     16c:	ef 2e       	mov	r14, r31
     16e:	f2 e0       	ldi	r31, 0x02	; 2
     170:	ff 2e       	mov	r15, r31
     172:	f0 2d       	mov	r31, r0
     174:	20 e0       	ldi	r18, 0x00	; 0
     176:	30 e0       	ldi	r19, 0x00	; 0
     178:	a9 01       	movw	r20, r18
     17a:	60 e0       	ldi	r22, 0x00	; 0
     17c:	70 e0       	ldi	r23, 0x00	; 0
     17e:	cb 01       	movw	r24, r22
     180:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <async>
     184:	1a c0       	rjmp	.+52     	; 0x1ba <addCar+0x7a>
	} else {
		self->queues[1]++;
     186:	fc 01       	movw	r30, r24
     188:	c4 8c       	ldd	r12, Z+28	; 0x1c
     18a:	d5 8c       	ldd	r13, Z+29	; 0x1d
     18c:	ff ef       	ldi	r31, 0xFF	; 255
     18e:	cf 1a       	sub	r12, r31
     190:	df 0a       	sbc	r13, r31
     192:	fc 01       	movw	r30, r24
     194:	d5 8e       	std	Z+29, r13	; 0x1d
     196:	c4 8e       	std	Z+28, r12	; 0x1c
		ASYNC(&(self->display[2]), updateDisplay, self->queues[1]);
     198:	8c 01       	movw	r16, r24
     19a:	00 5f       	subi	r16, 0xF0	; 240
     19c:	1f 4f       	sbci	r17, 0xFF	; 255
     19e:	0f 2e       	mov	r0, r31
     1a0:	f1 e8       	ldi	r31, 0x81	; 129
     1a2:	ef 2e       	mov	r14, r31
     1a4:	f2 e0       	ldi	r31, 0x02	; 2
     1a6:	ff 2e       	mov	r15, r31
     1a8:	f0 2d       	mov	r31, r0
     1aa:	20 e0       	ldi	r18, 0x00	; 0
     1ac:	30 e0       	ldi	r19, 0x00	; 0
     1ae:	a9 01       	movw	r20, r18
     1b0:	60 e0       	ldi	r22, 0x00	; 0
     1b2:	70 e0       	ldi	r23, 0x00	; 0
     1b4:	cb 01       	movw	r24, r22
     1b6:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <async>
	}
}
     1ba:	1f 91       	pop	r17
     1bc:	0f 91       	pop	r16
     1be:	ff 90       	pop	r15
     1c0:	ef 90       	pop	r14
     1c2:	df 90       	pop	r13
     1c4:	cf 90       	pop	r12
     1c6:	08 95       	ret

000001c8 <removeCar>:

void removeCar(TC *self, int val) {
     1c8:	cf 92       	push	r12
     1ca:	df 92       	push	r13
     1cc:	ef 92       	push	r14
     1ce:	ff 92       	push	r15
     1d0:	0f 93       	push	r16
     1d2:	1f 93       	push	r17
	if(val == 0) {
     1d4:	67 2b       	or	r22, r23
     1d6:	d9 f4       	brne	.+54     	; 0x20e <__EEPROM_REGION_LENGTH__+0xe>
		self->queues[0]--;
     1d8:	fc 01       	movw	r30, r24
     1da:	c2 8c       	ldd	r12, Z+26	; 0x1a
     1dc:	d3 8c       	ldd	r13, Z+27	; 0x1b
     1de:	f1 e0       	ldi	r31, 0x01	; 1
     1e0:	cf 1a       	sub	r12, r31
     1e2:	d1 08       	sbc	r13, r1
     1e4:	fc 01       	movw	r30, r24
     1e6:	d3 8e       	std	Z+27, r13	; 0x1b
     1e8:	c2 8e       	std	Z+26, r12	; 0x1a
		ASYNC(&(self->display[0]), updateDisplay, self->queues[0]);
     1ea:	8c 01       	movw	r16, r24
     1ec:	0c 5f       	subi	r16, 0xFC	; 252
     1ee:	1f 4f       	sbci	r17, 0xFF	; 255
     1f0:	0f 2e       	mov	r0, r31
     1f2:	f1 e8       	ldi	r31, 0x81	; 129
     1f4:	ef 2e       	mov	r14, r31
     1f6:	f2 e0       	ldi	r31, 0x02	; 2
     1f8:	ff 2e       	mov	r15, r31
     1fa:	f0 2d       	mov	r31, r0
     1fc:	20 e0       	ldi	r18, 0x00	; 0
     1fe:	30 e0       	ldi	r19, 0x00	; 0
     200:	a9 01       	movw	r20, r18
     202:	60 e0       	ldi	r22, 0x00	; 0
     204:	70 e0       	ldi	r23, 0x00	; 0
     206:	cb 01       	movw	r24, r22
     208:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <async>
     20c:	1a c0       	rjmp	.+52     	; 0x242 <__EEPROM_REGION_LENGTH__+0x42>
	} else {
		self->queues[1]--;
     20e:	fc 01       	movw	r30, r24
     210:	c4 8c       	ldd	r12, Z+28	; 0x1c
     212:	d5 8c       	ldd	r13, Z+29	; 0x1d
     214:	f1 e0       	ldi	r31, 0x01	; 1
     216:	cf 1a       	sub	r12, r31
     218:	d1 08       	sbc	r13, r1
     21a:	fc 01       	movw	r30, r24
     21c:	d5 8e       	std	Z+29, r13	; 0x1d
     21e:	c4 8e       	std	Z+28, r12	; 0x1c
		ASYNC(&(self->display[2]), updateDisplay, self->queues[1]);
     220:	8c 01       	movw	r16, r24
     222:	00 5f       	subi	r16, 0xF0	; 240
     224:	1f 4f       	sbci	r17, 0xFF	; 255
     226:	0f 2e       	mov	r0, r31
     228:	f1 e8       	ldi	r31, 0x81	; 129
     22a:	ef 2e       	mov	r14, r31
     22c:	f2 e0       	ldi	r31, 0x02	; 2
     22e:	ff 2e       	mov	r15, r31
     230:	f0 2d       	mov	r31, r0
     232:	20 e0       	ldi	r18, 0x00	; 0
     234:	30 e0       	ldi	r19, 0x00	; 0
     236:	a9 01       	movw	r20, r18
     238:	60 e0       	ldi	r22, 0x00	; 0
     23a:	70 e0       	ldi	r23, 0x00	; 0
     23c:	cb 01       	movw	r24, r22
     23e:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <async>
	}
}
     242:	1f 91       	pop	r17
     244:	0f 91       	pop	r16
     246:	ff 90       	pop	r15
     248:	ef 90       	pop	r14
     24a:	df 90       	pop	r13
     24c:	cf 90       	pop	r12
     24e:	08 95       	ret

00000250 <entry>:

void entry(TC *self, int val) {	//0 = north entry, 1 = south entry
     250:	af 92       	push	r10
     252:	bf 92       	push	r11
     254:	cf 92       	push	r12
     256:	df 92       	push	r13
     258:	ef 92       	push	r14
     25a:	ff 92       	push	r15
     25c:	0f 93       	push	r16
     25e:	1f 93       	push	r17
     260:	cf 93       	push	r28
     262:	df 93       	push	r29
     264:	ec 01       	movw	r28, r24
     266:	5b 01       	movw	r10, r22
	self->onBridge++;
     268:	ce 8c       	ldd	r12, Y+30	; 0x1e
     26a:	df 8c       	ldd	r13, Y+31	; 0x1f
     26c:	8f ef       	ldi	r24, 0xFF	; 255
     26e:	c8 1a       	sub	r12, r24
     270:	d8 0a       	sbc	r13, r24
     272:	df 8e       	std	Y+31, r13	; 0x1f
     274:	ce 8e       	std	Y+30, r12	; 0x1e
	ASYNC(&(self->display[1]), updateDisplay, self->onBridge);
     276:	8e 01       	movw	r16, r28
     278:	06 5f       	subi	r16, 0xF6	; 246
     27a:	1f 4f       	sbci	r17, 0xFF	; 255
     27c:	0f 2e       	mov	r0, r31
     27e:	f1 e8       	ldi	r31, 0x81	; 129
     280:	ef 2e       	mov	r14, r31
     282:	f2 e0       	ldi	r31, 0x02	; 2
     284:	ff 2e       	mov	r15, r31
     286:	f0 2d       	mov	r31, r0
     288:	20 e0       	ldi	r18, 0x00	; 0
     28a:	30 e0       	ldi	r19, 0x00	; 0
     28c:	a9 01       	movw	r20, r18
     28e:	60 e0       	ldi	r22, 0x00	; 0
     290:	70 e0       	ldi	r23, 0x00	; 0
     292:	cb 01       	movw	r24, r22
     294:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <async>
	AFTER(SEC(5), self, removeEntry, 0);
     298:	c1 2c       	mov	r12, r1
     29a:	d1 2c       	mov	r13, r1
     29c:	0f 2e       	mov	r0, r31
     29e:	fd e4       	ldi	r31, 0x4D	; 77
     2a0:	ef 2e       	mov	r14, r31
     2a2:	f0 e0       	ldi	r31, 0x00	; 0
     2a4:	ff 2e       	mov	r15, r31
     2a6:	f0 2d       	mov	r31, r0
     2a8:	8e 01       	movw	r16, r28
     2aa:	20 e0       	ldi	r18, 0x00	; 0
     2ac:	30 e0       	ldi	r19, 0x00	; 0
     2ae:	a9 01       	movw	r20, r18
     2b0:	6a e5       	ldi	r22, 0x5A	; 90
     2b2:	72 e6       	ldi	r23, 0x62	; 98
     2b4:	82 e0       	ldi	r24, 0x02	; 2
     2b6:	90 e0       	ldi	r25, 0x00	; 0
     2b8:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <async>
	removeCar(self, val);
     2bc:	b5 01       	movw	r22, r10
     2be:	ce 01       	movw	r24, r28
     2c0:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <removeCar>
}
     2c4:	df 91       	pop	r29
     2c6:	cf 91       	pop	r28
     2c8:	1f 91       	pop	r17
     2ca:	0f 91       	pop	r16
     2cc:	ff 90       	pop	r15
     2ce:	ef 90       	pop	r14
     2d0:	df 90       	pop	r13
     2d2:	cf 90       	pop	r12
     2d4:	bf 90       	pop	r11
     2d6:	af 90       	pop	r10
     2d8:	08 95       	ret

000002da <openNorth>:
void closeRoad(TC *self, int val) {
	ASYNC(self->lights[val], red, 0);
	self->bridgeClear = 0;
}
 
 void openNorth(TC *self, int val) {
     2da:	af 92       	push	r10
     2dc:	bf 92       	push	r11
     2de:	cf 92       	push	r12
     2e0:	df 92       	push	r13
     2e2:	ef 92       	push	r14
     2e4:	ff 92       	push	r15
     2e6:	0f 93       	push	r16
     2e8:	1f 93       	push	r17
     2ea:	cf 93       	push	r28
     2ec:	df 93       	push	r29
     2ee:	ec 01       	movw	r28, r24
     2f0:	5b 01       	movw	r10, r22
	 self->bridgeClear = 1;
     2f2:	81 e0       	ldi	r24, 0x01	; 1
     2f4:	90 e0       	ldi	r25, 0x00	; 0
     2f6:	99 a3       	std	Y+33, r25	; 0x21
     2f8:	88 a3       	std	Y+32, r24	; 0x20
	 ASYNC(self->lights[0], green, 0);
     2fa:	0e 89       	ldd	r16, Y+22	; 0x16
     2fc:	1f 89       	ldd	r17, Y+23	; 0x17
     2fe:	c1 2c       	mov	r12, r1
     300:	d1 2c       	mov	r13, r1
     302:	0f 2e       	mov	r0, r31
     304:	f2 ec       	ldi	r31, 0xC2	; 194
     306:	ef 2e       	mov	r14, r31
     308:	f4 e0       	ldi	r31, 0x04	; 4
     30a:	ff 2e       	mov	r15, r31
     30c:	f0 2d       	mov	r31, r0
     30e:	20 e0       	ldi	r18, 0x00	; 0
     310:	30 e0       	ldi	r19, 0x00	; 0
     312:	a9 01       	movw	r20, r18
     314:	60 e0       	ldi	r22, 0x00	; 0
     316:	70 e0       	ldi	r23, 0x00	; 0
     318:	cb 01       	movw	r24, r22
     31a:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <async>
	 AFTER(SEC(val), self, closeRoad, 0);
     31e:	22 e1       	ldi	r18, 0x12	; 18
     320:	3a e7       	ldi	r19, 0x7A	; 122
     322:	d5 01       	movw	r26, r10
     324:	0e 94 33 11 	call	0x2266	; 0x2266 <__usmulhisi3>
     328:	0f 2e       	mov	r0, r31
     32a:	f4 e7       	ldi	r31, 0x74	; 116
     32c:	ef 2e       	mov	r14, r31
     32e:	f0 e0       	ldi	r31, 0x00	; 0
     330:	ff 2e       	mov	r15, r31
     332:	f0 2d       	mov	r31, r0
     334:	8e 01       	movw	r16, r28
     336:	20 e0       	ldi	r18, 0x00	; 0
     338:	30 e0       	ldi	r19, 0x00	; 0
     33a:	a9 01       	movw	r20, r18
     33c:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <async>
}
     340:	df 91       	pop	r29
     342:	cf 91       	pop	r28
     344:	1f 91       	pop	r17
     346:	0f 91       	pop	r16
     348:	ff 90       	pop	r15
     34a:	ef 90       	pop	r14
     34c:	df 90       	pop	r13
     34e:	cf 90       	pop	r12
     350:	bf 90       	pop	r11
     352:	af 90       	pop	r10
     354:	08 95       	ret

00000356 <openSouth>:

void openSouth(TC *self, int val) {
     356:	af 92       	push	r10
     358:	bf 92       	push	r11
     35a:	cf 92       	push	r12
     35c:	df 92       	push	r13
     35e:	ef 92       	push	r14
     360:	ff 92       	push	r15
     362:	0f 93       	push	r16
     364:	1f 93       	push	r17
     366:	cf 93       	push	r28
     368:	df 93       	push	r29
     36a:	ec 01       	movw	r28, r24
     36c:	5b 01       	movw	r10, r22
	 self->bridgeClear = 1;
     36e:	81 e0       	ldi	r24, 0x01	; 1
     370:	90 e0       	ldi	r25, 0x00	; 0
     372:	99 a3       	std	Y+33, r25	; 0x21
     374:	88 a3       	std	Y+32, r24	; 0x20
	 ASYNC(self->lights[1], green, 0);
     376:	08 8d       	ldd	r16, Y+24	; 0x18
     378:	19 8d       	ldd	r17, Y+25	; 0x19
     37a:	c1 2c       	mov	r12, r1
     37c:	d1 2c       	mov	r13, r1
     37e:	0f 2e       	mov	r0, r31
     380:	f2 ec       	ldi	r31, 0xC2	; 194
     382:	ef 2e       	mov	r14, r31
     384:	f4 e0       	ldi	r31, 0x04	; 4
     386:	ff 2e       	mov	r15, r31
     388:	f0 2d       	mov	r31, r0
     38a:	20 e0       	ldi	r18, 0x00	; 0
     38c:	30 e0       	ldi	r19, 0x00	; 0
     38e:	a9 01       	movw	r20, r18
     390:	60 e0       	ldi	r22, 0x00	; 0
     392:	70 e0       	ldi	r23, 0x00	; 0
     394:	cb 01       	movw	r24, r22
     396:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <async>
	 AFTER(SEC(val), self, closeRoad, 1);
     39a:	22 e1       	ldi	r18, 0x12	; 18
     39c:	3a e7       	ldi	r19, 0x7A	; 122
     39e:	d5 01       	movw	r26, r10
     3a0:	0e 94 33 11 	call	0x2266	; 0x2266 <__usmulhisi3>
     3a4:	cc 24       	eor	r12, r12
     3a6:	c3 94       	inc	r12
     3a8:	d1 2c       	mov	r13, r1
     3aa:	0f 2e       	mov	r0, r31
     3ac:	f4 e7       	ldi	r31, 0x74	; 116
     3ae:	ef 2e       	mov	r14, r31
     3b0:	f0 e0       	ldi	r31, 0x00	; 0
     3b2:	ff 2e       	mov	r15, r31
     3b4:	f0 2d       	mov	r31, r0
     3b6:	8e 01       	movw	r16, r28
     3b8:	20 e0       	ldi	r18, 0x00	; 0
     3ba:	30 e0       	ldi	r19, 0x00	; 0
     3bc:	a9 01       	movw	r20, r18
     3be:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <async>
}
     3c2:	df 91       	pop	r29
     3c4:	cf 91       	pop	r28
     3c6:	1f 91       	pop	r17
     3c8:	0f 91       	pop	r16
     3ca:	ff 90       	pop	r15
     3cc:	ef 90       	pop	r14
     3ce:	df 90       	pop	r13
     3d0:	cf 90       	pop	r12
     3d2:	bf 90       	pop	r11
     3d4:	af 90       	pop	r10
     3d6:	08 95       	ret

000003d8 <controlling>:
 
void controlling(TC *self) {
     3d8:	cf 92       	push	r12
     3da:	df 92       	push	r13
     3dc:	ef 92       	push	r14
     3de:	ff 92       	push	r15
     3e0:	0f 93       	push	r16
     3e2:	1f 93       	push	r17
     3e4:	cf 93       	push	r28
     3e6:	df 93       	push	r29
     3e8:	ec 01       	movw	r28, r24
	int time = 0;
	if(self->onBridge == 0) {
     3ea:	8e 8d       	ldd	r24, Y+30	; 0x1e
     3ec:	9f 8d       	ldd	r25, Y+31	; 0x1f
     3ee:	89 2b       	or	r24, r25
     3f0:	69 f5       	brne	.+90     	; 0x44c <__DATA_REGION_LENGTH__+0x4c>
		if(self->bridgeClear == 0) {
     3f2:	88 a1       	ldd	r24, Y+32	; 0x20
     3f4:	99 a1       	ldd	r25, Y+33	; 0x21
     3f6:	89 2b       	or	r24, r25
     3f8:	49 f5       	brne	.+82     	; 0x44c <__DATA_REGION_LENGTH__+0x4c>
			if(self->queues[0] >= self->queues[1]) {
     3fa:	6a 8d       	ldd	r22, Y+26	; 0x1a
     3fc:	7b 8d       	ldd	r23, Y+27	; 0x1b
     3fe:	8c 8d       	ldd	r24, Y+28	; 0x1c
     400:	9d 8d       	ldd	r25, Y+29	; 0x1d
     402:	68 17       	cp	r22, r24
     404:	79 07       	cpc	r23, r25
     406:	8c f0       	brlt	.+34     	; 0x42a <__DATA_REGION_LENGTH__+0x2a>
				if(self->queues[0] > 0 && self->northLast == 0){
     408:	16 16       	cp	r1, r22
     40a:	17 06       	cpc	r1, r23
     40c:	fc f4       	brge	.+62     	; 0x44c <__DATA_REGION_LENGTH__+0x4c>
     40e:	8a a1       	ldd	r24, Y+34	; 0x22
     410:	9b a1       	ldd	r25, Y+35	; 0x23
     412:	89 2b       	or	r24, r25
     414:	d9 f4       	brne	.+54     	; 0x44c <__DATA_REGION_LENGTH__+0x4c>
					time = self->queues[0];
					self->northLast = 1;
     416:	81 e0       	ldi	r24, 0x01	; 1
     418:	90 e0       	ldi	r25, 0x00	; 0
     41a:	9b a3       	std	Y+35, r25	; 0x23
     41c:	8a a3       	std	Y+34, r24	; 0x22
					self->southLast = 0;
     41e:	1d a2       	std	Y+37, r1	; 0x25
     420:	1c a2       	std	Y+36, r1	; 0x24
					openNorth(self, time);
     422:	ce 01       	movw	r24, r28
     424:	0e 94 6d 01 	call	0x2da	; 0x2da <openNorth>
     428:	11 c0       	rjmp	.+34     	; 0x44c <__DATA_REGION_LENGTH__+0x4c>
				}
			} else if(self->queues[1] >= self->queues[0]) {
				if(self->queues[1] > 0 && self->southLast == 0){
     42a:	18 16       	cp	r1, r24
     42c:	19 06       	cpc	r1, r25
     42e:	74 f4       	brge	.+28     	; 0x44c <__DATA_REGION_LENGTH__+0x4c>
     430:	2c a1       	ldd	r18, Y+36	; 0x24
     432:	3d a1       	ldd	r19, Y+37	; 0x25
     434:	23 2b       	or	r18, r19
     436:	51 f4       	brne	.+20     	; 0x44c <__DATA_REGION_LENGTH__+0x4c>
					time = self->queues[1];
					self->southLast = 1;
     438:	21 e0       	ldi	r18, 0x01	; 1
     43a:	30 e0       	ldi	r19, 0x00	; 0
     43c:	3d a3       	std	Y+37, r19	; 0x25
     43e:	2c a3       	std	Y+36, r18	; 0x24
					self->northLast = 0;
     440:	1b a2       	std	Y+35, r1	; 0x23
     442:	1a a2       	std	Y+34, r1	; 0x22
					openSouth(self, time);
     444:	bc 01       	movw	r22, r24
     446:	ce 01       	movw	r24, r28
     448:	0e 94 ab 01 	call	0x356	; 0x356 <openSouth>
					self->northLast = 0;
					openSouth(self, time);
			}				
		}		
	}
	AFTER(MSEC(500), self, controlling, 0);//Keep running function with 0.5s intervals
     44c:	c1 2c       	mov	r12, r1
     44e:	d1 2c       	mov	r13, r1
     450:	0f 2e       	mov	r0, r31
     452:	fc ee       	ldi	r31, 0xEC	; 236
     454:	ef 2e       	mov	r14, r31
     456:	f1 e0       	ldi	r31, 0x01	; 1
     458:	ff 2e       	mov	r15, r31
     45a:	f0 2d       	mov	r31, r0
     45c:	8e 01       	movw	r16, r28
     45e:	20 e0       	ldi	r18, 0x00	; 0
     460:	30 e0       	ldi	r19, 0x00	; 0
     462:	a9 01       	movw	r20, r18
     464:	69 e0       	ldi	r22, 0x09	; 9
     466:	7d e3       	ldi	r23, 0x3D	; 61
     468:	80 e0       	ldi	r24, 0x00	; 0
     46a:	90 e0       	ldi	r25, 0x00	; 0
     46c:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <async>
}
     470:	df 91       	pop	r29
     472:	cf 91       	pop	r28
     474:	1f 91       	pop	r17
     476:	0f 91       	pop	r16
     478:	ff 90       	pop	r15
     47a:	ef 90       	pop	r14
     47c:	df 90       	pop	r13
     47e:	cf 90       	pop	r12
     480:	08 95       	ret

00000482 <startup>:

void startup(TC *self) {
     482:	cf 92       	push	r12
     484:	df 92       	push	r13
     486:	ef 92       	push	r14
     488:	ff 92       	push	r15
     48a:	0f 93       	push	r16
     48c:	1f 93       	push	r17
     48e:	cf 93       	push	r28
     490:	df 93       	push	r29
     492:	ec 01       	movw	r28, r24
		ASYNC(&(self->display[0]), updateDisplay, self->queues[0]);
     494:	ca 8c       	ldd	r12, Y+26	; 0x1a
     496:	db 8c       	ldd	r13, Y+27	; 0x1b
     498:	8c 01       	movw	r16, r24
     49a:	0c 5f       	subi	r16, 0xFC	; 252
     49c:	1f 4f       	sbci	r17, 0xFF	; 255
     49e:	0f 2e       	mov	r0, r31
     4a0:	f1 e8       	ldi	r31, 0x81	; 129
     4a2:	ef 2e       	mov	r14, r31
     4a4:	f2 e0       	ldi	r31, 0x02	; 2
     4a6:	ff 2e       	mov	r15, r31
     4a8:	f0 2d       	mov	r31, r0
     4aa:	20 e0       	ldi	r18, 0x00	; 0
     4ac:	30 e0       	ldi	r19, 0x00	; 0
     4ae:	a9 01       	movw	r20, r18
     4b0:	60 e0       	ldi	r22, 0x00	; 0
     4b2:	70 e0       	ldi	r23, 0x00	; 0
     4b4:	cb 01       	movw	r24, r22
     4b6:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <async>
		ASYNC(&(self->display[1]), updateDisplay, self->onBridge);
     4ba:	ce 8c       	ldd	r12, Y+30	; 0x1e
     4bc:	df 8c       	ldd	r13, Y+31	; 0x1f
     4be:	0a 5f       	subi	r16, 0xFA	; 250
     4c0:	1f 4f       	sbci	r17, 0xFF	; 255
     4c2:	20 e0       	ldi	r18, 0x00	; 0
     4c4:	30 e0       	ldi	r19, 0x00	; 0
     4c6:	a9 01       	movw	r20, r18
     4c8:	60 e0       	ldi	r22, 0x00	; 0
     4ca:	70 e0       	ldi	r23, 0x00	; 0
     4cc:	cb 01       	movw	r24, r22
     4ce:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <async>
		ASYNC(&(self->display[2]), updateDisplay, self->queues[1]);
     4d2:	cc 8c       	ldd	r12, Y+28	; 0x1c
     4d4:	dd 8c       	ldd	r13, Y+29	; 0x1d
     4d6:	0a 5f       	subi	r16, 0xFA	; 250
     4d8:	1f 4f       	sbci	r17, 0xFF	; 255
     4da:	20 e0       	ldi	r18, 0x00	; 0
     4dc:	30 e0       	ldi	r19, 0x00	; 0
     4de:	a9 01       	movw	r20, r18
     4e0:	60 e0       	ldi	r22, 0x00	; 0
     4e2:	70 e0       	ldi	r23, 0x00	; 0
     4e4:	cb 01       	movw	r24, r22
     4e6:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <async>
		controlling(self);
     4ea:	ce 01       	movw	r24, r28
     4ec:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <controlling>
}
     4f0:	df 91       	pop	r29
     4f2:	cf 91       	pop	r28
     4f4:	1f 91       	pop	r17
     4f6:	0f 91       	pop	r16
     4f8:	ff 90       	pop	r15
     4fa:	ef 90       	pop	r14
     4fc:	df 90       	pop	r13
     4fe:	cf 90       	pop	r12
     500:	08 95       	ret

00000502 <updateDisplay>:
     502:	fc 01       	movw	r30, r24
     504:	44 81       	ldd	r20, Z+4	; 0x04
     506:	55 81       	ldd	r21, Z+5	; 0x05
     508:	07 2e       	mov	r0, r23
     50a:	00 0c       	add	r0, r0
     50c:	88 0b       	sbc	r24, r24
     50e:	99 0b       	sbc	r25, r25
     510:	0e 94 6e 03 	call	0x6dc	; 0x6dc <printAt>
     514:	08 95       	ret

00000516 <comInterrupt>:
 * Created: 2021-03-16 12:25:09
 *  Author: ailio
 */ 
#include "intHandler.h"

void comInterrupt(intH *self) {
     516:	cf 92       	push	r12
     518:	df 92       	push	r13
     51a:	ef 92       	push	r14
     51c:	ff 92       	push	r15
     51e:	0f 93       	push	r16
     520:	1f 93       	push	r17
     522:	dc 01       	movw	r26, r24
	while (!(UCSR0A & (1<<RXC0)));
     524:	e0 ec       	ldi	r30, 0xC0	; 192
     526:	f0 e0       	ldi	r31, 0x00	; 0
     528:	90 81       	ld	r25, Z
     52a:	99 23       	and	r25, r25
     52c:	ec f7       	brge	.-6      	; 0x528 <comInterrupt+0x12>
	int read = UDR0;
     52e:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     532:	30 e0       	ldi	r19, 0x00	; 0
	
	if(read == 1) {
     534:	21 30       	cpi	r18, 0x01	; 1
     536:	31 05       	cpc	r19, r1
     538:	a9 f4       	brne	.+42     	; 0x564 <comInterrupt+0x4e>
		ASYNC(self->controlller, addCar, 0);
     53a:	14 96       	adiw	r26, 0x04	; 4
     53c:	0d 91       	ld	r16, X+
     53e:	1c 91       	ld	r17, X
     540:	15 97       	sbiw	r26, 0x05	; 5
     542:	c1 2c       	mov	r12, r1
     544:	d1 2c       	mov	r13, r1
     546:	0f 2e       	mov	r0, r31
     548:	f0 ea       	ldi	r31, 0xA0	; 160
     54a:	ef 2e       	mov	r14, r31
     54c:	f0 e0       	ldi	r31, 0x00	; 0
     54e:	ff 2e       	mov	r15, r31
     550:	f0 2d       	mov	r31, r0
     552:	20 e0       	ldi	r18, 0x00	; 0
     554:	30 e0       	ldi	r19, 0x00	; 0
     556:	a9 01       	movw	r20, r18
     558:	60 e0       	ldi	r22, 0x00	; 0
     55a:	70 e0       	ldi	r23, 0x00	; 0
     55c:	cb 01       	movw	r24, r22
     55e:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <async>
     562:	49 c0       	rjmp	.+146    	; 0x5f6 <comInterrupt+0xe0>
	} else if (read == 2) {
     564:	22 30       	cpi	r18, 0x02	; 2
     566:	31 05       	cpc	r19, r1
     568:	a9 f4       	brne	.+42     	; 0x594 <comInterrupt+0x7e>
		ASYNC(self->controlller, entry, 0);
     56a:	14 96       	adiw	r26, 0x04	; 4
     56c:	0d 91       	ld	r16, X+
     56e:	1c 91       	ld	r17, X
     570:	15 97       	sbiw	r26, 0x05	; 5
     572:	c1 2c       	mov	r12, r1
     574:	d1 2c       	mov	r13, r1
     576:	0f 2e       	mov	r0, r31
     578:	f8 e2       	ldi	r31, 0x28	; 40
     57a:	ef 2e       	mov	r14, r31
     57c:	f1 e0       	ldi	r31, 0x01	; 1
     57e:	ff 2e       	mov	r15, r31
     580:	f0 2d       	mov	r31, r0
     582:	20 e0       	ldi	r18, 0x00	; 0
     584:	30 e0       	ldi	r19, 0x00	; 0
     586:	a9 01       	movw	r20, r18
     588:	60 e0       	ldi	r22, 0x00	; 0
     58a:	70 e0       	ldi	r23, 0x00	; 0
     58c:	cb 01       	movw	r24, r22
     58e:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <async>
     592:	31 c0       	rjmp	.+98     	; 0x5f6 <comInterrupt+0xe0>
	} else if (read == 4) {
     594:	24 30       	cpi	r18, 0x04	; 4
     596:	31 05       	cpc	r19, r1
     598:	b1 f4       	brne	.+44     	; 0x5c6 <comInterrupt+0xb0>
		ASYNC(self->controlller, addCar, 1);		
     59a:	14 96       	adiw	r26, 0x04	; 4
     59c:	0d 91       	ld	r16, X+
     59e:	1c 91       	ld	r17, X
     5a0:	15 97       	sbiw	r26, 0x05	; 5
     5a2:	cc 24       	eor	r12, r12
     5a4:	c3 94       	inc	r12
     5a6:	d1 2c       	mov	r13, r1
     5a8:	0f 2e       	mov	r0, r31
     5aa:	f0 ea       	ldi	r31, 0xA0	; 160
     5ac:	ef 2e       	mov	r14, r31
     5ae:	f0 e0       	ldi	r31, 0x00	; 0
     5b0:	ff 2e       	mov	r15, r31
     5b2:	f0 2d       	mov	r31, r0
     5b4:	20 e0       	ldi	r18, 0x00	; 0
     5b6:	30 e0       	ldi	r19, 0x00	; 0
     5b8:	a9 01       	movw	r20, r18
     5ba:	60 e0       	ldi	r22, 0x00	; 0
     5bc:	70 e0       	ldi	r23, 0x00	; 0
     5be:	cb 01       	movw	r24, r22
     5c0:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <async>
     5c4:	18 c0       	rjmp	.+48     	; 0x5f6 <comInterrupt+0xe0>
	} else if (read == 8) {
     5c6:	28 30       	cpi	r18, 0x08	; 8
     5c8:	31 05       	cpc	r19, r1
     5ca:	a9 f4       	brne	.+42     	; 0x5f6 <comInterrupt+0xe0>
		ASYNC(self->controlller, entry, 1);		
     5cc:	14 96       	adiw	r26, 0x04	; 4
     5ce:	0d 91       	ld	r16, X+
     5d0:	1c 91       	ld	r17, X
     5d2:	15 97       	sbiw	r26, 0x05	; 5
     5d4:	cc 24       	eor	r12, r12
     5d6:	c3 94       	inc	r12
     5d8:	d1 2c       	mov	r13, r1
     5da:	0f 2e       	mov	r0, r31
     5dc:	f8 e2       	ldi	r31, 0x28	; 40
     5de:	ef 2e       	mov	r14, r31
     5e0:	f1 e0       	ldi	r31, 0x01	; 1
     5e2:	ff 2e       	mov	r15, r31
     5e4:	f0 2d       	mov	r31, r0
     5e6:	20 e0       	ldi	r18, 0x00	; 0
     5e8:	30 e0       	ldi	r19, 0x00	; 0
     5ea:	a9 01       	movw	r20, r18
     5ec:	60 e0       	ldi	r22, 0x00	; 0
     5ee:	70 e0       	ldi	r23, 0x00	; 0
     5f0:	cb 01       	movw	r24, r22
     5f2:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <async>
	}
     5f6:	1f 91       	pop	r17
     5f8:	0f 91       	pop	r16
     5fa:	ff 90       	pop	r15
     5fc:	ef 90       	pop	r14
     5fe:	df 90       	pop	r13
     600:	cf 90       	pop	r12
     602:	08 95       	ret

00000604 <writeChar>:
     604:	66 30       	cpi	r22, 0x06	; 6
     606:	71 05       	cpc	r23, r1
     608:	08 f0       	brcs	.+2      	; 0x60c <writeChar+0x8>
     60a:	5a c0       	rjmp	.+180    	; 0x6c0 <writeChar+0xbc>
     60c:	9f e9       	ldi	r25, 0x9F	; 159
     60e:	98 0f       	add	r25, r24
     610:	9a 31       	cpi	r25, 0x1A	; 26
     612:	48 f4       	brcc	.+18     	; 0x626 <writeChar+0x22>
     614:	a8 2f       	mov	r26, r24
     616:	b0 e0       	ldi	r27, 0x00	; 0
     618:	aa 0f       	add	r26, r26
     61a:	bb 1f       	adc	r27, r27
     61c:	aa 5b       	subi	r26, 0xBA	; 186
     61e:	bf 4f       	sbci	r27, 0xFF	; 255
     620:	2d 91       	ld	r18, X+
     622:	3c 91       	ld	r19, X
     624:	19 c0       	rjmp	.+50     	; 0x658 <writeChar+0x54>
     626:	90 ed       	ldi	r25, 0xD0	; 208
     628:	98 0f       	add	r25, r24
     62a:	9a 30       	cpi	r25, 0x0A	; 10
     62c:	48 f4       	brcc	.+18     	; 0x640 <writeChar+0x3c>
     62e:	a8 2f       	mov	r26, r24
     630:	b0 e0       	ldi	r27, 0x00	; 0
     632:	aa 0f       	add	r26, r26
     634:	bb 1f       	adc	r27, r27
     636:	a4 52       	subi	r26, 0x24	; 36
     638:	bf 4f       	sbci	r27, 0xFF	; 255
     63a:	2d 91       	ld	r18, X+
     63c:	3c 91       	ld	r19, X
     63e:	0c c0       	rjmp	.+24     	; 0x658 <writeChar+0x54>
     640:	9f eb       	ldi	r25, 0xBF	; 191
     642:	98 0f       	add	r25, r24
     644:	9a 31       	cpi	r25, 0x1A	; 26
     646:	e0 f5       	brcc	.+120    	; 0x6c0 <writeChar+0xbc>
     648:	a8 2f       	mov	r26, r24
     64a:	b0 e0       	ldi	r27, 0x00	; 0
     64c:	aa 0f       	add	r26, r26
     64e:	bb 1f       	adc	r27, r27
     650:	aa 57       	subi	r26, 0x7A	; 122
     652:	bf 4f       	sbci	r27, 0xFF	; 255
     654:	2d 91       	ld	r18, X+
     656:	3c 91       	ld	r19, X
     658:	64 30       	cpi	r22, 0x04	; 4
     65a:	71 05       	cpc	r23, r1
     65c:	34 f4       	brge	.+12     	; 0x66a <writeChar+0x66>
     65e:	62 30       	cpi	r22, 0x02	; 2
     660:	71 05       	cpc	r23, r1
     662:	54 f4       	brge	.+20     	; 0x678 <writeChar+0x74>
     664:	77 23       	and	r23, r23
     666:	2c f4       	brge	.+10     	; 0x672 <writeChar+0x6e>
     668:	0c c0       	rjmp	.+24     	; 0x682 <writeChar+0x7e>
     66a:	66 30       	cpi	r22, 0x06	; 6
     66c:	71 05       	cpc	r23, r1
     66e:	3c f0       	brlt	.+14     	; 0x67e <writeChar+0x7a>
     670:	08 c0       	rjmp	.+16     	; 0x682 <writeChar+0x7e>
     672:	ec ee       	ldi	r30, 0xEC	; 236
     674:	f0 e0       	ldi	r31, 0x00	; 0
     676:	05 c0       	rjmp	.+10     	; 0x682 <writeChar+0x7e>
     678:	ed ee       	ldi	r30, 0xED	; 237
     67a:	f0 e0       	ldi	r31, 0x00	; 0
     67c:	02 c0       	rjmp	.+4      	; 0x682 <writeChar+0x7e>
     67e:	ee ee       	ldi	r30, 0xEE	; 238
     680:	f0 e0       	ldi	r31, 0x00	; 0
     682:	db 01       	movw	r26, r22
     684:	a1 70       	andi	r26, 0x01	; 1
     686:	bb 27       	eor	r27, r27
     688:	60 ff       	sbrs	r22, 0
     68a:	02 c0       	rjmp	.+4      	; 0x690 <writeChar+0x8c>
     68c:	6f e0       	ldi	r22, 0x0F	; 15
     68e:	01 c0       	rjmp	.+2      	; 0x692 <writeChar+0x8e>
     690:	60 ef       	ldi	r22, 0xF0	; 240
     692:	af 01       	movw	r20, r30
     694:	4c 5e       	subi	r20, 0xEC	; 236
     696:	5f 4f       	sbci	r21, 0xFF	; 255
     698:	82 2f       	mov	r24, r18
     69a:	8f 70       	andi	r24, 0x0F	; 15
     69c:	32 95       	swap	r19
     69e:	22 95       	swap	r18
     6a0:	2f 70       	andi	r18, 0x0F	; 15
     6a2:	23 27       	eor	r18, r19
     6a4:	3f 70       	andi	r19, 0x0F	; 15
     6a6:	23 27       	eor	r18, r19
     6a8:	10 97       	sbiw	r26, 0x00	; 0
     6aa:	11 f0       	breq	.+4      	; 0x6b0 <writeChar+0xac>
     6ac:	82 95       	swap	r24
     6ae:	80 7f       	andi	r24, 0xF0	; 240
     6b0:	90 81       	ld	r25, Z
     6b2:	96 23       	and	r25, r22
     6b4:	89 2b       	or	r24, r25
     6b6:	80 83       	st	Z, r24
     6b8:	35 96       	adiw	r30, 0x05	; 5
     6ba:	4e 17       	cp	r20, r30
     6bc:	5f 07       	cpc	r21, r31
     6be:	61 f7       	brne	.-40     	; 0x698 <writeChar+0x94>
     6c0:	08 95       	ret

000006c2 <LCD_Init>:
     6c2:	87 eb       	ldi	r24, 0xB7	; 183
     6c4:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
     6c8:	87 e0       	ldi	r24, 0x07	; 7
     6ca:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
     6ce:	8f e0       	ldi	r24, 0x0F	; 15
     6d0:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
     6d4:	80 ec       	ldi	r24, 0xC0	; 192
     6d6:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
     6da:	08 95       	ret

000006dc <printAt>:
     6dc:	8f 92       	push	r8
     6de:	9f 92       	push	r9
     6e0:	af 92       	push	r10
     6e2:	bf 92       	push	r11
     6e4:	cf 92       	push	r12
     6e6:	df 92       	push	r13
     6e8:	ef 92       	push	r14
     6ea:	ff 92       	push	r15
     6ec:	cf 93       	push	r28
     6ee:	df 93       	push	r29
     6f0:	4b 01       	movw	r8, r22
     6f2:	5c 01       	movw	r10, r24
     6f4:	ea 01       	movw	r28, r20
     6f6:	24 e6       	ldi	r18, 0x64	; 100
     6f8:	30 e0       	ldi	r19, 0x00	; 0
     6fa:	40 e0       	ldi	r20, 0x00	; 0
     6fc:	50 e0       	ldi	r21, 0x00	; 0
     6fe:	0e 94 14 11 	call	0x2228	; 0x2228 <__divmodsi4>
     702:	0f 2e       	mov	r0, r31
     704:	fa e0       	ldi	r31, 0x0A	; 10
     706:	cf 2e       	mov	r12, r31
     708:	d1 2c       	mov	r13, r1
     70a:	e1 2c       	mov	r14, r1
     70c:	f1 2c       	mov	r15, r1
     70e:	f0 2d       	mov	r31, r0
     710:	a7 01       	movw	r20, r14
     712:	96 01       	movw	r18, r12
     714:	0e 94 14 11 	call	0x2228	; 0x2228 <__divmodsi4>
     718:	be 01       	movw	r22, r28
     71a:	80 e3       	ldi	r24, 0x30	; 48
     71c:	82 0f       	add	r24, r18
     71e:	0e 94 02 03 	call	0x604	; 0x604 <writeChar>
     722:	21 96       	adiw	r28, 0x01	; 1
     724:	c5 01       	movw	r24, r10
     726:	b4 01       	movw	r22, r8
     728:	a7 01       	movw	r20, r14
     72a:	96 01       	movw	r18, r12
     72c:	0e 94 14 11 	call	0x2228	; 0x2228 <__divmodsi4>
     730:	86 2f       	mov	r24, r22
     732:	be 01       	movw	r22, r28
     734:	80 5d       	subi	r24, 0xD0	; 208
     736:	0e 94 02 03 	call	0x604	; 0x604 <writeChar>
     73a:	df 91       	pop	r29
     73c:	cf 91       	pop	r28
     73e:	ff 90       	pop	r15
     740:	ef 90       	pop	r14
     742:	df 90       	pop	r13
     744:	cf 90       	pop	r12
     746:	bf 90       	pop	r11
     748:	af 90       	pop	r10
     74a:	9f 90       	pop	r9
     74c:	8f 90       	pop	r8
     74e:	08 95       	ret

00000750 <main>:
#include "intHandler.h"
#include "LCD_driver.h"
#include <stdint.h>

int main(void)
{
     750:	ef 92       	push	r14
     752:	ff 92       	push	r15
     754:	0f 93       	push	r16
     756:	1f 93       	push	r17
     758:	cf 93       	push	r28
     75a:	df 93       	push	r29
     75c:	cd b7       	in	r28, 0x3d	; 61
     75e:	de b7       	in	r29, 0x3e	; 62
     760:	c4 54       	subi	r28, 0x44	; 68
     762:	d1 09       	sbc	r29, r1
     764:	0f b6       	in	r0, 0x3f	; 63
     766:	f8 94       	cli
     768:	de bf       	out	0x3e, r29	; 62
     76a:	0f be       	out	0x3f, r0	; 63
     76c:	cd bf       	out	0x3d, r28	; 61
	outH out = initoutH();
     76e:	1a 82       	std	Y+2, r1	; 0x02
     770:	19 82       	std	Y+1, r1	; 0x01
     772:	1c 82       	std	Y+4, r1	; 0x04
     774:	1b 82       	std	Y+3, r1	; 0x03
	light nLight = initlight(&out, 0);
     776:	1e 82       	std	Y+6, r1	; 0x06
     778:	1d 82       	std	Y+5, r1	; 0x05
     77a:	18 86       	std	Y+8, r1	; 0x08
     77c:	1f 82       	std	Y+7, r1	; 0x07
     77e:	8e 01       	movw	r16, r28
     780:	0f 5f       	subi	r16, 0xFF	; 255
     782:	1f 4f       	sbci	r17, 0xFF	; 255
     784:	1a 87       	std	Y+10, r17	; 0x0a
     786:	09 87       	std	Y+9, r16	; 0x09
     788:	1c 86       	std	Y+12, r1	; 0x0c
     78a:	1b 86       	std	Y+11, r1	; 0x0b
     78c:	1e 86       	std	Y+14, r1	; 0x0e
     78e:	1d 86       	std	Y+13, r1	; 0x0d
	light sLight = initlight(&out, 1);
     790:	18 8a       	std	Y+16, r1	; 0x10
     792:	1f 86       	std	Y+15, r1	; 0x0f
     794:	1a 8a       	std	Y+18, r1	; 0x12
     796:	19 8a       	std	Y+17, r1	; 0x11
     798:	1c 8b       	std	Y+20, r17	; 0x14
     79a:	0b 8b       	std	Y+19, r16	; 0x13
     79c:	1e 8a       	std	Y+22, r1	; 0x16
     79e:	1d 8a       	std	Y+21, r1	; 0x15
     7a0:	81 e0       	ldi	r24, 0x01	; 1
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	98 8f       	std	Y+24, r25	; 0x18
     7a6:	8f 8b       	std	Y+23, r24	; 0x17
	TC cont = initTC(&nLight, &sLight);
     7a8:	1a 8e       	std	Y+26, r1	; 0x1a
     7aa:	19 8e       	std	Y+25, r1	; 0x19
     7ac:	1c 8e       	std	Y+28, r1	; 0x1c
     7ae:	1b 8e       	std	Y+27, r1	; 0x1b
     7b0:	1e 8e       	std	Y+30, r1	; 0x1e
     7b2:	1d 8e       	std	Y+29, r1	; 0x1d
     7b4:	18 a2       	std	Y+32, r1	; 0x20
     7b6:	1f 8e       	std	Y+31, r1	; 0x1f
     7b8:	84 e0       	ldi	r24, 0x04	; 4
     7ba:	90 e0       	ldi	r25, 0x00	; 0
     7bc:	9a a3       	std	Y+34, r25	; 0x22
     7be:	89 a3       	std	Y+33, r24	; 0x21
     7c0:	1c a2       	std	Y+36, r1	; 0x24
     7c2:	1b a2       	std	Y+35, r1	; 0x23
     7c4:	1e a2       	std	Y+38, r1	; 0x26
     7c6:	1d a2       	std	Y+37, r1	; 0x25
     7c8:	82 e0       	ldi	r24, 0x02	; 2
     7ca:	90 e0       	ldi	r25, 0x00	; 0
     7cc:	98 a7       	std	Y+40, r25	; 0x28
     7ce:	8f a3       	std	Y+39, r24	; 0x27
     7d0:	1a a6       	std	Y+42, r1	; 0x2a
     7d2:	19 a6       	std	Y+41, r1	; 0x29
     7d4:	1c a6       	std	Y+44, r1	; 0x2c
     7d6:	1b a6       	std	Y+43, r1	; 0x2b
     7d8:	1e a6       	std	Y+46, r1	; 0x2e
     7da:	1d a6       	std	Y+45, r1	; 0x2d
     7dc:	ce 01       	movw	r24, r28
     7de:	05 96       	adiw	r24, 0x05	; 5
     7e0:	98 ab       	std	Y+48, r25	; 0x30
     7e2:	8f a7       	std	Y+47, r24	; 0x2f
     7e4:	0a 96       	adiw	r24, 0x0a	; 10
     7e6:	9a ab       	std	Y+50, r25	; 0x32
     7e8:	89 ab       	std	Y+49, r24	; 0x31
     7ea:	1c aa       	std	Y+52, r1	; 0x34
     7ec:	1b aa       	std	Y+51, r1	; 0x33
     7ee:	1e aa       	std	Y+54, r1	; 0x36
     7f0:	1d aa       	std	Y+53, r1	; 0x35
     7f2:	18 ae       	std	Y+56, r1	; 0x38
     7f4:	1f aa       	std	Y+55, r1	; 0x37
     7f6:	1a ae       	std	Y+58, r1	; 0x3a
     7f8:	19 ae       	std	Y+57, r1	; 0x39
     7fa:	1c ae       	std	Y+60, r1	; 0x3c
     7fc:	1b ae       	std	Y+59, r1	; 0x3b
     7fe:	1e ae       	std	Y+62, r1	; 0x3e
     800:	1d ae       	std	Y+61, r1	; 0x3d
	intH interr = initintH(&cont);
     802:	21 96       	adiw	r28, 0x01	; 1
     804:	1f ae       	std	Y+63, r1	; 0x3f
     806:	1e ae       	std	Y+62, r1	; 0x3e
     808:	21 97       	sbiw	r28, 0x01	; 1
     80a:	23 96       	adiw	r28, 0x03	; 3
     80c:	1f ae       	std	Y+63, r1	; 0x3f
     80e:	1e ae       	std	Y+62, r1	; 0x3e
     810:	23 97       	sbiw	r28, 0x03	; 3
     812:	7e 01       	movw	r14, r28
     814:	89 e1       	ldi	r24, 0x19	; 25
     816:	e8 0e       	add	r14, r24
     818:	f1 1c       	adc	r15, r1
     81a:	25 96       	adiw	r28, 0x05	; 5
     81c:	ff ae       	std	Y+63, r15	; 0x3f
     81e:	ee ae       	std	Y+62, r14	; 0x3e
     820:	25 97       	sbiw	r28, 0x05	; 5
	CLKPR = 0x80;
     822:	e1 e6       	ldi	r30, 0x61	; 97
     824:	f0 e0       	ldi	r31, 0x00	; 0
     826:	80 e8       	ldi	r24, 0x80	; 128
     828:	80 83       	st	Z, r24
	CLKPR = 0x00;
     82a:	10 82       	st	Z, r1
	LCD_Init();
     82c:	0e 94 61 03 	call	0x6c2	; 0x6c2 <LCD_Init>
	initUSART(&out);
     830:	c8 01       	movw	r24, r16
     832:	0e 94 46 04 	call	0x88c	; 0x88c <initUSART>
	INSTALL(&interr, comInterrupt, IRQ_USART0_RX);
     836:	48 e0       	ldi	r20, 0x08	; 8
     838:	6b e8       	ldi	r22, 0x8B	; 139
     83a:	72 e0       	ldi	r23, 0x02	; 2
     83c:	ce 01       	movw	r24, r28
     83e:	cf 96       	adiw	r24, 0x3f	; 63
     840:	0e 94 de 10 	call	0x21bc	; 0x21bc <install>
 	INSTALL(&interr, comInterrupt, IRQ_USART0_TX);
     844:	4a e0       	ldi	r20, 0x0A	; 10
     846:	6b e8       	ldi	r22, 0x8B	; 139
     848:	72 e0       	ldi	r23, 0x02	; 2
     84a:	ce 01       	movw	r24, r28
     84c:	cf 96       	adiw	r24, 0x3f	; 63
     84e:	0e 94 de 10 	call	0x21bc	; 0x21bc <install>
 	return TINYTIMBER(&cont, startup, 0);
     852:	40 e0       	ldi	r20, 0x00	; 0
     854:	50 e0       	ldi	r21, 0x00	; 0
     856:	61 e4       	ldi	r22, 0x41	; 65
     858:	72 e0       	ldi	r23, 0x02	; 2
     85a:	c7 01       	movw	r24, r14
     85c:	0e 94 f8 10 	call	0x21f0	; 0x21f0 <tinytimber>
}
     860:	cc 5b       	subi	r28, 0xBC	; 188
     862:	df 4f       	sbci	r29, 0xFF	; 255
     864:	0f b6       	in	r0, 0x3f	; 63
     866:	f8 94       	cli
     868:	de bf       	out	0x3e, r29	; 62
     86a:	0f be       	out	0x3f, r0	; 63
     86c:	cd bf       	out	0x3d, r28	; 61
     86e:	df 91       	pop	r29
     870:	cf 91       	pop	r28
     872:	1f 91       	pop	r17
     874:	0f 91       	pop	r16
     876:	ff 90       	pop	r15
     878:	ef 90       	pop	r14
     87a:	08 95       	ret

0000087c <transmit>:
2 -> South green light
3 -> South red light
*/
void transmit(outH *self, int val) {
	
	while( !(UCSR0A & (1<<UDRE0)) );	//Wait for empty buffer
     87c:	e0 ec       	ldi	r30, 0xC0	; 192
     87e:	f0 e0       	ldi	r31, 0x00	; 0
     880:	80 81       	ld	r24, Z
     882:	85 ff       	sbrs	r24, 5
     884:	fd cf       	rjmp	.-6      	; 0x880 <transmit+0x4>
	
	UDR0 = val;	//"send" data
     886:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     88a:	08 95       	ret

0000088c <initUSART>:
}

void initUSART(outH *self) {
	//Set baud rate
	UBRR0H = (unsigned char)(51>>8); 
     88c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7fc0c5>
	UBRR0L = (unsigned char) 51;
     890:	83 e3       	ldi	r24, 0x33	; 51
     892:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7fc0c4>
	//Enable transmit and receive
	UCSR0B |= (1<<RXEN0) | (1<<TXEN0) | (1<<RXCIE0);
     896:	e1 ec       	ldi	r30, 0xC1	; 193
     898:	f0 e0       	ldi	r31, 0x00	; 0
     89a:	80 81       	ld	r24, Z
     89c:	88 69       	ori	r24, 0x98	; 152
     89e:	80 83       	st	Z, r24
     8a0:	08 95       	ret

000008a2 <write>:
void red(light *self) {
	self->status = 0;
	write(self);
}

void write(light *self) {
     8a2:	cf 92       	push	r12
     8a4:	df 92       	push	r13
     8a6:	ef 92       	push	r14
     8a8:	ff 92       	push	r15
     8aa:	0f 93       	push	r16
     8ac:	1f 93       	push	r17
     8ae:	fc 01       	movw	r30, r24
	if(self->pos == 0) {	//North light
     8b0:	80 85       	ldd	r24, Z+8	; 0x08
     8b2:	91 85       	ldd	r25, Z+9	; 0x09
     8b4:	89 2b       	or	r24, r25
     8b6:	81 f5       	brne	.+96     	; 0x918 <write+0x76>
		switch(self->status){
     8b8:	86 81       	ldd	r24, Z+6	; 0x06
     8ba:	97 81       	ldd	r25, Z+7	; 0x07
     8bc:	00 97       	sbiw	r24, 0x00	; 0
     8be:	b9 f0       	breq	.+46     	; 0x8ee <write+0x4c>
     8c0:	01 97       	sbiw	r24, 0x01	; 1
     8c2:	09 f0       	breq	.+2      	; 0x8c6 <write+0x24>
     8c4:	58 c0       	rjmp	.+176    	; 0x976 <write+0xd4>
			case 1:
				ASYNC(self->output, transmit, 1);	//North green light
     8c6:	04 81       	ldd	r16, Z+4	; 0x04
     8c8:	15 81       	ldd	r17, Z+5	; 0x05
     8ca:	cc 24       	eor	r12, r12
     8cc:	c3 94       	inc	r12
     8ce:	d1 2c       	mov	r13, r1
     8d0:	0f 2e       	mov	r0, r31
     8d2:	fe e3       	ldi	r31, 0x3E	; 62
     8d4:	ef 2e       	mov	r14, r31
     8d6:	f4 e0       	ldi	r31, 0x04	; 4
     8d8:	ff 2e       	mov	r15, r31
     8da:	f0 2d       	mov	r31, r0
     8dc:	20 e0       	ldi	r18, 0x00	; 0
     8de:	30 e0       	ldi	r19, 0x00	; 0
     8e0:	a9 01       	movw	r20, r18
     8e2:	60 e0       	ldi	r22, 0x00	; 0
     8e4:	70 e0       	ldi	r23, 0x00	; 0
     8e6:	cb 01       	movw	r24, r22
     8e8:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <async>
				break;
     8ec:	44 c0       	rjmp	.+136    	; 0x976 <write+0xd4>
			case 0:
				ASYNC(self->output, transmit, 2);	//North red light
     8ee:	04 81       	ldd	r16, Z+4	; 0x04
     8f0:	15 81       	ldd	r17, Z+5	; 0x05
     8f2:	68 94       	set
     8f4:	cc 24       	eor	r12, r12
     8f6:	c1 f8       	bld	r12, 1
     8f8:	d1 2c       	mov	r13, r1
     8fa:	0f 2e       	mov	r0, r31
     8fc:	fe e3       	ldi	r31, 0x3E	; 62
     8fe:	ef 2e       	mov	r14, r31
     900:	f4 e0       	ldi	r31, 0x04	; 4
     902:	ff 2e       	mov	r15, r31
     904:	f0 2d       	mov	r31, r0
     906:	20 e0       	ldi	r18, 0x00	; 0
     908:	30 e0       	ldi	r19, 0x00	; 0
     90a:	a9 01       	movw	r20, r18
     90c:	60 e0       	ldi	r22, 0x00	; 0
     90e:	70 e0       	ldi	r23, 0x00	; 0
     910:	cb 01       	movw	r24, r22
     912:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <async>
     916:	2f c0       	rjmp	.+94     	; 0x976 <write+0xd4>
		}
	} else {				//South light
		switch(self->status){
     918:	86 81       	ldd	r24, Z+6	; 0x06
     91a:	97 81       	ldd	r25, Z+7	; 0x07
     91c:	00 97       	sbiw	r24, 0x00	; 0
     91e:	b9 f0       	breq	.+46     	; 0x94e <write+0xac>
     920:	01 97       	sbiw	r24, 0x01	; 1
     922:	49 f5       	brne	.+82     	; 0x976 <write+0xd4>
			case 1:
				ASYNC(self->output, transmit, 4);	//South green light
     924:	04 81       	ldd	r16, Z+4	; 0x04
     926:	15 81       	ldd	r17, Z+5	; 0x05
     928:	68 94       	set
     92a:	cc 24       	eor	r12, r12
     92c:	c2 f8       	bld	r12, 2
     92e:	d1 2c       	mov	r13, r1
     930:	0f 2e       	mov	r0, r31
     932:	fe e3       	ldi	r31, 0x3E	; 62
     934:	ef 2e       	mov	r14, r31
     936:	f4 e0       	ldi	r31, 0x04	; 4
     938:	ff 2e       	mov	r15, r31
     93a:	f0 2d       	mov	r31, r0
     93c:	20 e0       	ldi	r18, 0x00	; 0
     93e:	30 e0       	ldi	r19, 0x00	; 0
     940:	a9 01       	movw	r20, r18
     942:	60 e0       	ldi	r22, 0x00	; 0
     944:	70 e0       	ldi	r23, 0x00	; 0
     946:	cb 01       	movw	r24, r22
     948:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <async>
				break;
     94c:	14 c0       	rjmp	.+40     	; 0x976 <write+0xd4>
			case 0:
				ASYNC(self->output, transmit, 8);	//South red light
     94e:	04 81       	ldd	r16, Z+4	; 0x04
     950:	15 81       	ldd	r17, Z+5	; 0x05
     952:	68 94       	set
     954:	cc 24       	eor	r12, r12
     956:	c3 f8       	bld	r12, 3
     958:	d1 2c       	mov	r13, r1
     95a:	0f 2e       	mov	r0, r31
     95c:	fe e3       	ldi	r31, 0x3E	; 62
     95e:	ef 2e       	mov	r14, r31
     960:	f4 e0       	ldi	r31, 0x04	; 4
     962:	ff 2e       	mov	r15, r31
     964:	f0 2d       	mov	r31, r0
     966:	20 e0       	ldi	r18, 0x00	; 0
     968:	30 e0       	ldi	r19, 0x00	; 0
     96a:	a9 01       	movw	r20, r18
     96c:	60 e0       	ldi	r22, 0x00	; 0
     96e:	70 e0       	ldi	r23, 0x00	; 0
     970:	cb 01       	movw	r24, r22
     972:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <async>
				break;
		}
	}
     976:	1f 91       	pop	r17
     978:	0f 91       	pop	r16
     97a:	ff 90       	pop	r15
     97c:	ef 90       	pop	r14
     97e:	df 90       	pop	r13
     980:	cf 90       	pop	r12
     982:	08 95       	ret

00000984 <green>:
 *  Author: ailio
 */ 
#include "stopLight.h"

void green(light *self) {
	self->status = 1;
     984:	21 e0       	ldi	r18, 0x01	; 1
     986:	30 e0       	ldi	r19, 0x00	; 0
     988:	fc 01       	movw	r30, r24
     98a:	37 83       	std	Z+7, r19	; 0x07
     98c:	26 83       	std	Z+6, r18	; 0x06
	write(self);
     98e:	0e 94 51 04 	call	0x8a2	; 0x8a2 <write>
     992:	08 95       	ret

00000994 <red>:
}

void red(light *self) {
	self->status = 0;
     994:	fc 01       	movw	r30, r24
     996:	17 82       	std	Z+7, r1	; 0x07
     998:	16 82       	std	Z+6, r1	; 0x06
	write(self);
     99a:	0e 94 51 04 	call	0x8a2	; 0x8a2 <write>
     99e:	08 95       	ret

000009a0 <initialize>:
     9a0:	cf 93       	push	r28
     9a2:	df 93       	push	r29
     9a4:	00 d0       	rcall	.+0      	; 0x9a6 <initialize+0x6>
     9a6:	00 d0       	rcall	.+0      	; 0x9a8 <initialize+0x8>
     9a8:	cd b7       	in	r28, 0x3d	; 61
     9aa:	de b7       	in	r29, 0x3e	; 62
     9ac:	83 e4       	ldi	r24, 0x43	; 67
     9ae:	92 e0       	ldi	r25, 0x02	; 2
     9b0:	23 e2       	ldi	r18, 0x23	; 35
     9b2:	33 e0       	ldi	r19, 0x03	; 3
     9b4:	fc 01       	movw	r30, r24
     9b6:	70 97       	sbiw	r30, 0x10	; 16
     9b8:	91 83       	std	Z+1, r25	; 0x01
     9ba:	80 83       	st	Z, r24
     9bc:	40 96       	adiw	r24, 0x10	; 16
     9be:	82 17       	cp	r24, r18
     9c0:	93 07       	cpc	r25, r19
     9c2:	c1 f7       	brne	.-16     	; 0x9b4 <initialize+0x14>
     9c4:	10 92 14 03 	sts	0x0314, r1	; 0x800314 <messages+0xe1>
     9c8:	10 92 13 03 	sts	0x0313, r1	; 0x800313 <messages+0xe0>
     9cc:	ee e7       	ldi	r30, 0x7E	; 126
     9ce:	f1 e0       	ldi	r31, 0x01	; 1
     9d0:	8b e9       	ldi	r24, 0x9B	; 155
     9d2:	91 e0       	ldi	r25, 0x01	; 1
     9d4:	91 83       	std	Z+1, r25	; 0x01
     9d6:	80 83       	st	Z, r24
     9d8:	88 eb       	ldi	r24, 0xB8	; 184
     9da:	91 e0       	ldi	r25, 0x01	; 1
     9dc:	96 8f       	std	Z+30, r25	; 0x1e
     9de:	85 8f       	std	Z+29, r24	; 0x1d
     9e0:	a5 ed       	ldi	r26, 0xD5	; 213
     9e2:	b1 e0       	ldi	r27, 0x01	; 1
     9e4:	b3 af       	std	Z+59, r27	; 0x3b
     9e6:	a2 af       	std	Z+58, r26	; 0x3a
     9e8:	1d 92       	st	X+, r1
     9ea:	1c 92       	st	X, r1
     9ec:	fa 83       	std	Y+2, r31	; 0x02
     9ee:	e9 83       	std	Y+1, r30	; 0x01
     9f0:	ef e7       	ldi	r30, 0x7F	; 127
     9f2:	f3 e0       	ldi	r31, 0x03	; 3
     9f4:	fc 83       	std	Y+4, r31	; 0x04
     9f6:	eb 83       	std	Y+3, r30	; 0x03
     9f8:	89 81       	ldd	r24, Y+1	; 0x01
     9fa:	9a 81       	ldd	r25, Y+2	; 0x02
     9fc:	06 96       	adiw	r24, 0x06	; 6
     9fe:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <setjmp>
     a02:	8b 81       	ldd	r24, Y+3	; 0x03
     a04:	9c 81       	ldd	r25, Y+4	; 0x04
     a06:	e9 81       	ldd	r30, Y+1	; 0x01
     a08:	fa 81       	ldd	r31, Y+2	; 0x02
     a0a:	97 8b       	std	Z+23, r25	; 0x17
     a0c:	86 8b       	std	Z+22, r24	; 0x16
     a0e:	91 8f       	std	Z+25, r25	; 0x19
     a10:	80 8f       	std	Z+24, r24	; 0x18
     a12:	80 e7       	ldi	r24, 0x70	; 112
     a14:	90 e1       	ldi	r25, 0x10	; 16
     a16:	94 8f       	std	Z+28, r25	; 0x1c
     a18:	83 8f       	std	Z+27, r24	; 0x1b
     a1a:	15 82       	std	Z+5, r1	; 0x05
     a1c:	14 82       	std	Z+4, r1	; 0x04
     a1e:	7d 96       	adiw	r30, 0x1d	; 29
     a20:	fa 83       	std	Y+2, r31	; 0x02
     a22:	e9 83       	std	Y+1, r30	; 0x01
     a24:	eb 81       	ldd	r30, Y+3	; 0x03
     a26:	fc 81       	ldd	r31, Y+4	; 0x04
     a28:	e0 5a       	subi	r30, 0xA0	; 160
     a2a:	ff 4f       	sbci	r31, 0xFF	; 255
     a2c:	fc 83       	std	Y+4, r31	; 0x04
     a2e:	eb 83       	std	Y+3, r30	; 0x03
     a30:	89 81       	ldd	r24, Y+1	; 0x01
     a32:	9a 81       	ldd	r25, Y+2	; 0x02
     a34:	82 5f       	subi	r24, 0xF2	; 242
     a36:	91 40       	sbci	r25, 0x01	; 1
     a38:	f9 f6       	brne	.-66     	; 0x9f8 <initialize+0x58>
     a3a:	e6 e1       	ldi	r30, 0x16	; 22
     a3c:	f2 e0       	ldi	r31, 0x02	; 2
     a3e:	11 82       	std	Z+1, r1	; 0x01
     a40:	10 82       	st	Z, r1
     a42:	15 82       	std	Z+5, r1	; 0x05
     a44:	14 82       	std	Z+4, r1	; 0x04
     a46:	13 82       	std	Z+3, r1	; 0x03
     a48:	12 82       	std	Z+2, r1	; 0x02
     a4a:	e1 e6       	ldi	r30, 0x61	; 97
     a4c:	f0 e0       	ldi	r31, 0x00	; 0
     a4e:	80 e8       	ldi	r24, 0x80	; 128
     a50:	80 83       	st	Z, r24
     a52:	10 82       	st	Z, r1
     a54:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a58:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a5c:	84 e0       	ldi	r24, 0x04	; 4
     a5e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     a62:	81 e0       	ldi	r24, 0x01	; 1
     a64:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     a68:	0f 90       	pop	r0
     a6a:	0f 90       	pop	r0
     a6c:	0f 90       	pop	r0
     a6e:	0f 90       	pop	r0
     a70:	df 91       	pop	r29
     a72:	cf 91       	pop	r28
     a74:	08 95       	ret

00000a76 <dispatch>:
     a76:	cf 93       	push	r28
     a78:	df 93       	push	r29
     a7a:	00 d0       	rcall	.+0      	; 0xa7c <dispatch+0x6>
     a7c:	cd b7       	in	r28, 0x3d	; 61
     a7e:	de b7       	in	r29, 0x3e	; 62
     a80:	9a 83       	std	Y+2, r25	; 0x02
     a82:	89 83       	std	Y+1, r24	; 0x01
     a84:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     a88:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a8c:	06 96       	adiw	r24, 0x06	; 6
     a8e:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <setjmp>
     a92:	89 2b       	or	r24, r25
     a94:	59 f4       	brne	.+22     	; 0xaac <dispatch+0x36>
     a96:	89 81       	ldd	r24, Y+1	; 0x01
     a98:	9a 81       	ldd	r25, Y+2	; 0x02
     a9a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a9e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     aa2:	61 e0       	ldi	r22, 0x01	; 1
     aa4:	70 e0       	ldi	r23, 0x00	; 0
     aa6:	06 96       	adiw	r24, 0x06	; 6
     aa8:	0e 94 8b 11 	call	0x2316	; 0x2316 <longjmp>
     aac:	0f 90       	pop	r0
     aae:	0f 90       	pop	r0
     ab0:	df 91       	pop	r29
     ab2:	cf 91       	pop	r28
     ab4:	08 95       	ret

00000ab6 <schedule>:
     ab6:	0f 93       	push	r16
     ab8:	1f 93       	push	r17
     aba:	cf 93       	push	r28
     abc:	df 93       	push	r29
     abe:	e0 91 58 01 	lds	r30, 0x0158	; 0x800158 <msgQ>
     ac2:	f0 91 59 01 	lds	r31, 0x0159	; 0x800159 <msgQ+0x1>
     ac6:	30 97       	sbiw	r30, 0x00	; 0
     ac8:	61 f1       	breq	.+88     	; 0xb22 <schedule+0x6c>
     aca:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     ace:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     ad2:	00 97       	sbiw	r24, 0x00	; 0
     ad4:	31 f1       	breq	.+76     	; 0xb22 <schedule+0x6c>
     ad6:	c0 91 02 01 	lds	r28, 0x0102	; 0x800102 <activeStack>
     ada:	d0 91 03 01 	lds	r29, 0x0103	; 0x800103 <activeStack+0x1>
     ade:	aa 81       	ldd	r26, Y+2	; 0x02
     ae0:	bb 81       	ldd	r27, Y+3	; 0x03
     ae2:	10 97       	sbiw	r26, 0x00	; 0
     ae4:	79 f0       	breq	.+30     	; 0xb04 <schedule+0x4e>
     ae6:	46 81       	ldd	r20, Z+6	; 0x06
     ae8:	57 81       	ldd	r21, Z+7	; 0x07
     aea:	60 85       	ldd	r22, Z+8	; 0x08
     aec:	71 85       	ldd	r23, Z+9	; 0x09
     aee:	16 96       	adiw	r26, 0x06	; 6
     af0:	0d 91       	ld	r16, X+
     af2:	1d 91       	ld	r17, X+
     af4:	2d 91       	ld	r18, X+
     af6:	3c 91       	ld	r19, X
     af8:	19 97       	sbiw	r26, 0x09	; 9
     afa:	40 1b       	sub	r20, r16
     afc:	51 0b       	sbc	r21, r17
     afe:	62 0b       	sbc	r22, r18
     b00:	73 0b       	sbc	r23, r19
     b02:	7a f4       	brpl	.+30     	; 0xb22 <schedule+0x6c>
     b04:	fc 01       	movw	r30, r24
     b06:	20 81       	ld	r18, Z
     b08:	31 81       	ldd	r19, Z+1	; 0x01
     b0a:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
     b0e:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
     b12:	d1 83       	std	Z+1, r29	; 0x01
     b14:	c0 83       	st	Z, r28
     b16:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
     b1a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
     b1e:	0e 94 3b 05 	call	0xa76	; 0xa76 <dispatch>
     b22:	df 91       	pop	r29
     b24:	cf 91       	pop	r28
     b26:	1f 91       	pop	r17
     b28:	0f 91       	pop	r16
     b2a:	08 95       	ret

00000b2c <__vector_1>:
     b2c:	1f 92       	push	r1
     b2e:	0f 92       	push	r0
     b30:	0f b6       	in	r0, 0x3f	; 63
     b32:	0f 92       	push	r0
     b34:	11 24       	eor	r1, r1
     b36:	2f 93       	push	r18
     b38:	3f 93       	push	r19
     b3a:	4f 93       	push	r20
     b3c:	5f 93       	push	r21
     b3e:	6f 93       	push	r22
     b40:	7f 93       	push	r23
     b42:	8f 93       	push	r24
     b44:	9f 93       	push	r25
     b46:	af 93       	push	r26
     b48:	bf 93       	push	r27
     b4a:	ef 93       	push	r30
     b4c:	ff 93       	push	r31
     b4e:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     b52:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     b56:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b5a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b5e:	c9 01       	movw	r24, r18
     b60:	03 2e       	mov	r0, r19
     b62:	00 0c       	add	r0, r0
     b64:	aa 0b       	sbc	r26, r26
     b66:	bb 0b       	sbc	r27, r27
     b68:	dc 01       	movw	r26, r24
     b6a:	99 27       	eor	r25, r25
     b6c:	88 27       	eor	r24, r24
     b6e:	60 e0       	ldi	r22, 0x00	; 0
     b70:	70 e0       	ldi	r23, 0x00	; 0
     b72:	84 2b       	or	r24, r20
     b74:	95 2b       	or	r25, r21
     b76:	a6 2b       	or	r26, r22
     b78:	b7 2b       	or	r27, r23
     b7a:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     b7e:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     b82:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     b86:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     b8a:	b0 9b       	sbis	0x16, 0	; 22
     b8c:	1b c0       	rjmp	.+54     	; 0xbc4 <__vector_1+0x98>
     b8e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b92:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b96:	c9 01       	movw	r24, r18
     b98:	01 96       	adiw	r24, 0x01	; 1
     b9a:	09 2e       	mov	r0, r25
     b9c:	00 0c       	add	r0, r0
     b9e:	aa 0b       	sbc	r26, r26
     ba0:	bb 0b       	sbc	r27, r27
     ba2:	dc 01       	movw	r26, r24
     ba4:	99 27       	eor	r25, r25
     ba6:	88 27       	eor	r24, r24
     ba8:	60 e0       	ldi	r22, 0x00	; 0
     baa:	70 e0       	ldi	r23, 0x00	; 0
     bac:	84 2b       	or	r24, r20
     bae:	95 2b       	or	r25, r21
     bb0:	a6 2b       	or	r26, r22
     bb2:	b7 2b       	or	r27, r23
     bb4:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     bb8:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     bbc:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     bc0:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     bc4:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <mtable>
     bc8:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <mtable+0x1>
     bcc:	30 97       	sbiw	r30, 0x00	; 0
     bce:	39 f0       	breq	.+14     	; 0xbde <__vector_1+0xb2>
     bd0:	60 e0       	ldi	r22, 0x00	; 0
     bd2:	70 e0       	ldi	r23, 0x00	; 0
     bd4:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <otable>
     bd8:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <otable+0x1>
     bdc:	09 95       	icall
     bde:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
     be2:	ff 91       	pop	r31
     be4:	ef 91       	pop	r30
     be6:	bf 91       	pop	r27
     be8:	af 91       	pop	r26
     bea:	9f 91       	pop	r25
     bec:	8f 91       	pop	r24
     bee:	7f 91       	pop	r23
     bf0:	6f 91       	pop	r22
     bf2:	5f 91       	pop	r21
     bf4:	4f 91       	pop	r20
     bf6:	3f 91       	pop	r19
     bf8:	2f 91       	pop	r18
     bfa:	0f 90       	pop	r0
     bfc:	0f be       	out	0x3f, r0	; 63
     bfe:	0f 90       	pop	r0
     c00:	1f 90       	pop	r1
     c02:	18 95       	reti

00000c04 <__vector_2>:
     c04:	1f 92       	push	r1
     c06:	0f 92       	push	r0
     c08:	0f b6       	in	r0, 0x3f	; 63
     c0a:	0f 92       	push	r0
     c0c:	11 24       	eor	r1, r1
     c0e:	2f 93       	push	r18
     c10:	3f 93       	push	r19
     c12:	4f 93       	push	r20
     c14:	5f 93       	push	r21
     c16:	6f 93       	push	r22
     c18:	7f 93       	push	r23
     c1a:	8f 93       	push	r24
     c1c:	9f 93       	push	r25
     c1e:	af 93       	push	r26
     c20:	bf 93       	push	r27
     c22:	ef 93       	push	r30
     c24:	ff 93       	push	r31
     c26:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     c2a:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     c2e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c32:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c36:	c9 01       	movw	r24, r18
     c38:	03 2e       	mov	r0, r19
     c3a:	00 0c       	add	r0, r0
     c3c:	aa 0b       	sbc	r26, r26
     c3e:	bb 0b       	sbc	r27, r27
     c40:	dc 01       	movw	r26, r24
     c42:	99 27       	eor	r25, r25
     c44:	88 27       	eor	r24, r24
     c46:	60 e0       	ldi	r22, 0x00	; 0
     c48:	70 e0       	ldi	r23, 0x00	; 0
     c4a:	84 2b       	or	r24, r20
     c4c:	95 2b       	or	r25, r21
     c4e:	a6 2b       	or	r26, r22
     c50:	b7 2b       	or	r27, r23
     c52:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     c56:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     c5a:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     c5e:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     c62:	b0 9b       	sbis	0x16, 0	; 22
     c64:	1b c0       	rjmp	.+54     	; 0xc9c <__vector_2+0x98>
     c66:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c6a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c6e:	c9 01       	movw	r24, r18
     c70:	01 96       	adiw	r24, 0x01	; 1
     c72:	09 2e       	mov	r0, r25
     c74:	00 0c       	add	r0, r0
     c76:	aa 0b       	sbc	r26, r26
     c78:	bb 0b       	sbc	r27, r27
     c7a:	dc 01       	movw	r26, r24
     c7c:	99 27       	eor	r25, r25
     c7e:	88 27       	eor	r24, r24
     c80:	60 e0       	ldi	r22, 0x00	; 0
     c82:	70 e0       	ldi	r23, 0x00	; 0
     c84:	84 2b       	or	r24, r20
     c86:	95 2b       	or	r25, r21
     c88:	a6 2b       	or	r26, r22
     c8a:	b7 2b       	or	r27, r23
     c8c:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     c90:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     c94:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     c98:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     c9c:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <mtable+0x2>
     ca0:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <mtable+0x3>
     ca4:	30 97       	sbiw	r30, 0x00	; 0
     ca6:	39 f0       	breq	.+14     	; 0xcb6 <__vector_2+0xb2>
     ca8:	61 e0       	ldi	r22, 0x01	; 1
     caa:	70 e0       	ldi	r23, 0x00	; 0
     cac:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <otable+0x2>
     cb0:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <otable+0x3>
     cb4:	09 95       	icall
     cb6:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
     cba:	ff 91       	pop	r31
     cbc:	ef 91       	pop	r30
     cbe:	bf 91       	pop	r27
     cc0:	af 91       	pop	r26
     cc2:	9f 91       	pop	r25
     cc4:	8f 91       	pop	r24
     cc6:	7f 91       	pop	r23
     cc8:	6f 91       	pop	r22
     cca:	5f 91       	pop	r21
     ccc:	4f 91       	pop	r20
     cce:	3f 91       	pop	r19
     cd0:	2f 91       	pop	r18
     cd2:	0f 90       	pop	r0
     cd4:	0f be       	out	0x3f, r0	; 63
     cd6:	0f 90       	pop	r0
     cd8:	1f 90       	pop	r1
     cda:	18 95       	reti

00000cdc <__vector_3>:
     cdc:	1f 92       	push	r1
     cde:	0f 92       	push	r0
     ce0:	0f b6       	in	r0, 0x3f	; 63
     ce2:	0f 92       	push	r0
     ce4:	11 24       	eor	r1, r1
     ce6:	2f 93       	push	r18
     ce8:	3f 93       	push	r19
     cea:	4f 93       	push	r20
     cec:	5f 93       	push	r21
     cee:	6f 93       	push	r22
     cf0:	7f 93       	push	r23
     cf2:	8f 93       	push	r24
     cf4:	9f 93       	push	r25
     cf6:	af 93       	push	r26
     cf8:	bf 93       	push	r27
     cfa:	ef 93       	push	r30
     cfc:	ff 93       	push	r31
     cfe:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     d02:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     d06:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d0a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d0e:	c9 01       	movw	r24, r18
     d10:	03 2e       	mov	r0, r19
     d12:	00 0c       	add	r0, r0
     d14:	aa 0b       	sbc	r26, r26
     d16:	bb 0b       	sbc	r27, r27
     d18:	dc 01       	movw	r26, r24
     d1a:	99 27       	eor	r25, r25
     d1c:	88 27       	eor	r24, r24
     d1e:	60 e0       	ldi	r22, 0x00	; 0
     d20:	70 e0       	ldi	r23, 0x00	; 0
     d22:	84 2b       	or	r24, r20
     d24:	95 2b       	or	r25, r21
     d26:	a6 2b       	or	r26, r22
     d28:	b7 2b       	or	r27, r23
     d2a:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     d2e:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     d32:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     d36:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     d3a:	b0 9b       	sbis	0x16, 0	; 22
     d3c:	1b c0       	rjmp	.+54     	; 0xd74 <__vector_3+0x98>
     d3e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d42:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d46:	c9 01       	movw	r24, r18
     d48:	01 96       	adiw	r24, 0x01	; 1
     d4a:	09 2e       	mov	r0, r25
     d4c:	00 0c       	add	r0, r0
     d4e:	aa 0b       	sbc	r26, r26
     d50:	bb 0b       	sbc	r27, r27
     d52:	dc 01       	movw	r26, r24
     d54:	99 27       	eor	r25, r25
     d56:	88 27       	eor	r24, r24
     d58:	60 e0       	ldi	r22, 0x00	; 0
     d5a:	70 e0       	ldi	r23, 0x00	; 0
     d5c:	84 2b       	or	r24, r20
     d5e:	95 2b       	or	r25, r21
     d60:	a6 2b       	or	r26, r22
     d62:	b7 2b       	or	r27, r23
     d64:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     d68:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     d6c:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     d70:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     d74:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <mtable+0x4>
     d78:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <mtable+0x5>
     d7c:	30 97       	sbiw	r30, 0x00	; 0
     d7e:	39 f0       	breq	.+14     	; 0xd8e <__vector_3+0xb2>
     d80:	62 e0       	ldi	r22, 0x02	; 2
     d82:	70 e0       	ldi	r23, 0x00	; 0
     d84:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <otable+0x4>
     d88:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <otable+0x5>
     d8c:	09 95       	icall
     d8e:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
     d92:	ff 91       	pop	r31
     d94:	ef 91       	pop	r30
     d96:	bf 91       	pop	r27
     d98:	af 91       	pop	r26
     d9a:	9f 91       	pop	r25
     d9c:	8f 91       	pop	r24
     d9e:	7f 91       	pop	r23
     da0:	6f 91       	pop	r22
     da2:	5f 91       	pop	r21
     da4:	4f 91       	pop	r20
     da6:	3f 91       	pop	r19
     da8:	2f 91       	pop	r18
     daa:	0f 90       	pop	r0
     dac:	0f be       	out	0x3f, r0	; 63
     dae:	0f 90       	pop	r0
     db0:	1f 90       	pop	r1
     db2:	18 95       	reti

00000db4 <__vector_4>:
     db4:	1f 92       	push	r1
     db6:	0f 92       	push	r0
     db8:	0f b6       	in	r0, 0x3f	; 63
     dba:	0f 92       	push	r0
     dbc:	11 24       	eor	r1, r1
     dbe:	2f 93       	push	r18
     dc0:	3f 93       	push	r19
     dc2:	4f 93       	push	r20
     dc4:	5f 93       	push	r21
     dc6:	6f 93       	push	r22
     dc8:	7f 93       	push	r23
     dca:	8f 93       	push	r24
     dcc:	9f 93       	push	r25
     dce:	af 93       	push	r26
     dd0:	bf 93       	push	r27
     dd2:	ef 93       	push	r30
     dd4:	ff 93       	push	r31
     dd6:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     dda:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     dde:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     de2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     de6:	c9 01       	movw	r24, r18
     de8:	03 2e       	mov	r0, r19
     dea:	00 0c       	add	r0, r0
     dec:	aa 0b       	sbc	r26, r26
     dee:	bb 0b       	sbc	r27, r27
     df0:	dc 01       	movw	r26, r24
     df2:	99 27       	eor	r25, r25
     df4:	88 27       	eor	r24, r24
     df6:	60 e0       	ldi	r22, 0x00	; 0
     df8:	70 e0       	ldi	r23, 0x00	; 0
     dfa:	84 2b       	or	r24, r20
     dfc:	95 2b       	or	r25, r21
     dfe:	a6 2b       	or	r26, r22
     e00:	b7 2b       	or	r27, r23
     e02:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     e06:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     e0a:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     e0e:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     e12:	b0 9b       	sbis	0x16, 0	; 22
     e14:	1b c0       	rjmp	.+54     	; 0xe4c <__vector_4+0x98>
     e16:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e1a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e1e:	c9 01       	movw	r24, r18
     e20:	01 96       	adiw	r24, 0x01	; 1
     e22:	09 2e       	mov	r0, r25
     e24:	00 0c       	add	r0, r0
     e26:	aa 0b       	sbc	r26, r26
     e28:	bb 0b       	sbc	r27, r27
     e2a:	dc 01       	movw	r26, r24
     e2c:	99 27       	eor	r25, r25
     e2e:	88 27       	eor	r24, r24
     e30:	60 e0       	ldi	r22, 0x00	; 0
     e32:	70 e0       	ldi	r23, 0x00	; 0
     e34:	84 2b       	or	r24, r20
     e36:	95 2b       	or	r25, r21
     e38:	a6 2b       	or	r26, r22
     e3a:	b7 2b       	or	r27, r23
     e3c:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     e40:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     e44:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     e48:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     e4c:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <mtable+0x6>
     e50:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <mtable+0x7>
     e54:	30 97       	sbiw	r30, 0x00	; 0
     e56:	39 f0       	breq	.+14     	; 0xe66 <__vector_4+0xb2>
     e58:	63 e0       	ldi	r22, 0x03	; 3
     e5a:	70 e0       	ldi	r23, 0x00	; 0
     e5c:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <otable+0x6>
     e60:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <otable+0x7>
     e64:	09 95       	icall
     e66:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
     e6a:	ff 91       	pop	r31
     e6c:	ef 91       	pop	r30
     e6e:	bf 91       	pop	r27
     e70:	af 91       	pop	r26
     e72:	9f 91       	pop	r25
     e74:	8f 91       	pop	r24
     e76:	7f 91       	pop	r23
     e78:	6f 91       	pop	r22
     e7a:	5f 91       	pop	r21
     e7c:	4f 91       	pop	r20
     e7e:	3f 91       	pop	r19
     e80:	2f 91       	pop	r18
     e82:	0f 90       	pop	r0
     e84:	0f be       	out	0x3f, r0	; 63
     e86:	0f 90       	pop	r0
     e88:	1f 90       	pop	r1
     e8a:	18 95       	reti

00000e8c <__vector_5>:
     e8c:	1f 92       	push	r1
     e8e:	0f 92       	push	r0
     e90:	0f b6       	in	r0, 0x3f	; 63
     e92:	0f 92       	push	r0
     e94:	11 24       	eor	r1, r1
     e96:	2f 93       	push	r18
     e98:	3f 93       	push	r19
     e9a:	4f 93       	push	r20
     e9c:	5f 93       	push	r21
     e9e:	6f 93       	push	r22
     ea0:	7f 93       	push	r23
     ea2:	8f 93       	push	r24
     ea4:	9f 93       	push	r25
     ea6:	af 93       	push	r26
     ea8:	bf 93       	push	r27
     eaa:	ef 93       	push	r30
     eac:	ff 93       	push	r31
     eae:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     eb2:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     eb6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     eba:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ebe:	c9 01       	movw	r24, r18
     ec0:	03 2e       	mov	r0, r19
     ec2:	00 0c       	add	r0, r0
     ec4:	aa 0b       	sbc	r26, r26
     ec6:	bb 0b       	sbc	r27, r27
     ec8:	dc 01       	movw	r26, r24
     eca:	99 27       	eor	r25, r25
     ecc:	88 27       	eor	r24, r24
     ece:	60 e0       	ldi	r22, 0x00	; 0
     ed0:	70 e0       	ldi	r23, 0x00	; 0
     ed2:	84 2b       	or	r24, r20
     ed4:	95 2b       	or	r25, r21
     ed6:	a6 2b       	or	r26, r22
     ed8:	b7 2b       	or	r27, r23
     eda:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     ede:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     ee2:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     ee6:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     eea:	b0 9b       	sbis	0x16, 0	; 22
     eec:	1b c0       	rjmp	.+54     	; 0xf24 <__vector_5+0x98>
     eee:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ef2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ef6:	c9 01       	movw	r24, r18
     ef8:	01 96       	adiw	r24, 0x01	; 1
     efa:	09 2e       	mov	r0, r25
     efc:	00 0c       	add	r0, r0
     efe:	aa 0b       	sbc	r26, r26
     f00:	bb 0b       	sbc	r27, r27
     f02:	dc 01       	movw	r26, r24
     f04:	99 27       	eor	r25, r25
     f06:	88 27       	eor	r24, r24
     f08:	60 e0       	ldi	r22, 0x00	; 0
     f0a:	70 e0       	ldi	r23, 0x00	; 0
     f0c:	84 2b       	or	r24, r20
     f0e:	95 2b       	or	r25, r21
     f10:	a6 2b       	or	r26, r22
     f12:	b7 2b       	or	r27, r23
     f14:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     f18:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     f1c:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     f20:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     f24:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <mtable+0x8>
     f28:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <mtable+0x9>
     f2c:	30 97       	sbiw	r30, 0x00	; 0
     f2e:	39 f0       	breq	.+14     	; 0xf3e <__vector_5+0xb2>
     f30:	64 e0       	ldi	r22, 0x04	; 4
     f32:	70 e0       	ldi	r23, 0x00	; 0
     f34:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <otable+0x8>
     f38:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <otable+0x9>
     f3c:	09 95       	icall
     f3e:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
     f42:	ff 91       	pop	r31
     f44:	ef 91       	pop	r30
     f46:	bf 91       	pop	r27
     f48:	af 91       	pop	r26
     f4a:	9f 91       	pop	r25
     f4c:	8f 91       	pop	r24
     f4e:	7f 91       	pop	r23
     f50:	6f 91       	pop	r22
     f52:	5f 91       	pop	r21
     f54:	4f 91       	pop	r20
     f56:	3f 91       	pop	r19
     f58:	2f 91       	pop	r18
     f5a:	0f 90       	pop	r0
     f5c:	0f be       	out	0x3f, r0	; 63
     f5e:	0f 90       	pop	r0
     f60:	1f 90       	pop	r1
     f62:	18 95       	reti

00000f64 <__vector_10>:
     f64:	1f 92       	push	r1
     f66:	0f 92       	push	r0
     f68:	0f b6       	in	r0, 0x3f	; 63
     f6a:	0f 92       	push	r0
     f6c:	11 24       	eor	r1, r1
     f6e:	2f 93       	push	r18
     f70:	3f 93       	push	r19
     f72:	4f 93       	push	r20
     f74:	5f 93       	push	r21
     f76:	6f 93       	push	r22
     f78:	7f 93       	push	r23
     f7a:	8f 93       	push	r24
     f7c:	9f 93       	push	r25
     f7e:	af 93       	push	r26
     f80:	bf 93       	push	r27
     f82:	ef 93       	push	r30
     f84:	ff 93       	push	r31
     f86:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     f8a:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     f8e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f92:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f96:	c9 01       	movw	r24, r18
     f98:	03 2e       	mov	r0, r19
     f9a:	00 0c       	add	r0, r0
     f9c:	aa 0b       	sbc	r26, r26
     f9e:	bb 0b       	sbc	r27, r27
     fa0:	dc 01       	movw	r26, r24
     fa2:	99 27       	eor	r25, r25
     fa4:	88 27       	eor	r24, r24
     fa6:	60 e0       	ldi	r22, 0x00	; 0
     fa8:	70 e0       	ldi	r23, 0x00	; 0
     faa:	84 2b       	or	r24, r20
     fac:	95 2b       	or	r25, r21
     fae:	a6 2b       	or	r26, r22
     fb0:	b7 2b       	or	r27, r23
     fb2:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     fb6:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     fba:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     fbe:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     fc2:	b0 9b       	sbis	0x16, 0	; 22
     fc4:	1b c0       	rjmp	.+54     	; 0xffc <__vector_10+0x98>
     fc6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fca:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fce:	c9 01       	movw	r24, r18
     fd0:	01 96       	adiw	r24, 0x01	; 1
     fd2:	09 2e       	mov	r0, r25
     fd4:	00 0c       	add	r0, r0
     fd6:	aa 0b       	sbc	r26, r26
     fd8:	bb 0b       	sbc	r27, r27
     fda:	dc 01       	movw	r26, r24
     fdc:	99 27       	eor	r25, r25
     fde:	88 27       	eor	r24, r24
     fe0:	60 e0       	ldi	r22, 0x00	; 0
     fe2:	70 e0       	ldi	r23, 0x00	; 0
     fe4:	84 2b       	or	r24, r20
     fe6:	95 2b       	or	r25, r21
     fe8:	a6 2b       	or	r26, r22
     fea:	b7 2b       	or	r27, r23
     fec:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     ff0:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     ff4:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     ff8:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     ffc:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <mtable+0xa>
    1000:	f0 91 fd 01 	lds	r31, 0x01FD	; 0x8001fd <mtable+0xb>
    1004:	30 97       	sbiw	r30, 0x00	; 0
    1006:	39 f0       	breq	.+14     	; 0x1016 <__vector_10+0xb2>
    1008:	65 e0       	ldi	r22, 0x05	; 5
    100a:	70 e0       	ldi	r23, 0x00	; 0
    100c:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <otable+0xa>
    1010:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <otable+0xb>
    1014:	09 95       	icall
    1016:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    101a:	ff 91       	pop	r31
    101c:	ef 91       	pop	r30
    101e:	bf 91       	pop	r27
    1020:	af 91       	pop	r26
    1022:	9f 91       	pop	r25
    1024:	8f 91       	pop	r24
    1026:	7f 91       	pop	r23
    1028:	6f 91       	pop	r22
    102a:	5f 91       	pop	r21
    102c:	4f 91       	pop	r20
    102e:	3f 91       	pop	r19
    1030:	2f 91       	pop	r18
    1032:	0f 90       	pop	r0
    1034:	0f be       	out	0x3f, r0	; 63
    1036:	0f 90       	pop	r0
    1038:	1f 90       	pop	r1
    103a:	18 95       	reti

0000103c <__vector_11>:
    103c:	1f 92       	push	r1
    103e:	0f 92       	push	r0
    1040:	0f b6       	in	r0, 0x3f	; 63
    1042:	0f 92       	push	r0
    1044:	11 24       	eor	r1, r1
    1046:	2f 93       	push	r18
    1048:	3f 93       	push	r19
    104a:	4f 93       	push	r20
    104c:	5f 93       	push	r21
    104e:	6f 93       	push	r22
    1050:	7f 93       	push	r23
    1052:	8f 93       	push	r24
    1054:	9f 93       	push	r25
    1056:	af 93       	push	r26
    1058:	bf 93       	push	r27
    105a:	ef 93       	push	r30
    105c:	ff 93       	push	r31
    105e:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    1062:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1066:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    106a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    106e:	c9 01       	movw	r24, r18
    1070:	03 2e       	mov	r0, r19
    1072:	00 0c       	add	r0, r0
    1074:	aa 0b       	sbc	r26, r26
    1076:	bb 0b       	sbc	r27, r27
    1078:	dc 01       	movw	r26, r24
    107a:	99 27       	eor	r25, r25
    107c:	88 27       	eor	r24, r24
    107e:	60 e0       	ldi	r22, 0x00	; 0
    1080:	70 e0       	ldi	r23, 0x00	; 0
    1082:	84 2b       	or	r24, r20
    1084:	95 2b       	or	r25, r21
    1086:	a6 2b       	or	r26, r22
    1088:	b7 2b       	or	r27, r23
    108a:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    108e:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1092:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1096:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    109a:	b0 9b       	sbis	0x16, 0	; 22
    109c:	1b c0       	rjmp	.+54     	; 0x10d4 <__vector_11+0x98>
    109e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10a2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10a6:	c9 01       	movw	r24, r18
    10a8:	01 96       	adiw	r24, 0x01	; 1
    10aa:	09 2e       	mov	r0, r25
    10ac:	00 0c       	add	r0, r0
    10ae:	aa 0b       	sbc	r26, r26
    10b0:	bb 0b       	sbc	r27, r27
    10b2:	dc 01       	movw	r26, r24
    10b4:	99 27       	eor	r25, r25
    10b6:	88 27       	eor	r24, r24
    10b8:	60 e0       	ldi	r22, 0x00	; 0
    10ba:	70 e0       	ldi	r23, 0x00	; 0
    10bc:	84 2b       	or	r24, r20
    10be:	95 2b       	or	r25, r21
    10c0:	a6 2b       	or	r26, r22
    10c2:	b7 2b       	or	r27, r23
    10c4:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    10c8:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    10cc:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    10d0:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    10d4:	e0 91 fe 01 	lds	r30, 0x01FE	; 0x8001fe <mtable+0xc>
    10d8:	f0 91 ff 01 	lds	r31, 0x01FF	; 0x8001ff <mtable+0xd>
    10dc:	30 97       	sbiw	r30, 0x00	; 0
    10de:	39 f0       	breq	.+14     	; 0x10ee <__vector_11+0xb2>
    10e0:	66 e0       	ldi	r22, 0x06	; 6
    10e2:	70 e0       	ldi	r23, 0x00	; 0
    10e4:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <otable+0xc>
    10e8:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <otable+0xd>
    10ec:	09 95       	icall
    10ee:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    10f2:	ff 91       	pop	r31
    10f4:	ef 91       	pop	r30
    10f6:	bf 91       	pop	r27
    10f8:	af 91       	pop	r26
    10fa:	9f 91       	pop	r25
    10fc:	8f 91       	pop	r24
    10fe:	7f 91       	pop	r23
    1100:	6f 91       	pop	r22
    1102:	5f 91       	pop	r21
    1104:	4f 91       	pop	r20
    1106:	3f 91       	pop	r19
    1108:	2f 91       	pop	r18
    110a:	0f 90       	pop	r0
    110c:	0f be       	out	0x3f, r0	; 63
    110e:	0f 90       	pop	r0
    1110:	1f 90       	pop	r1
    1112:	18 95       	reti

00001114 <__vector_12>:
    1114:	1f 92       	push	r1
    1116:	0f 92       	push	r0
    1118:	0f b6       	in	r0, 0x3f	; 63
    111a:	0f 92       	push	r0
    111c:	11 24       	eor	r1, r1
    111e:	2f 93       	push	r18
    1120:	3f 93       	push	r19
    1122:	4f 93       	push	r20
    1124:	5f 93       	push	r21
    1126:	6f 93       	push	r22
    1128:	7f 93       	push	r23
    112a:	8f 93       	push	r24
    112c:	9f 93       	push	r25
    112e:	af 93       	push	r26
    1130:	bf 93       	push	r27
    1132:	ef 93       	push	r30
    1134:	ff 93       	push	r31
    1136:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    113a:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    113e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1142:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1146:	c9 01       	movw	r24, r18
    1148:	03 2e       	mov	r0, r19
    114a:	00 0c       	add	r0, r0
    114c:	aa 0b       	sbc	r26, r26
    114e:	bb 0b       	sbc	r27, r27
    1150:	dc 01       	movw	r26, r24
    1152:	99 27       	eor	r25, r25
    1154:	88 27       	eor	r24, r24
    1156:	60 e0       	ldi	r22, 0x00	; 0
    1158:	70 e0       	ldi	r23, 0x00	; 0
    115a:	84 2b       	or	r24, r20
    115c:	95 2b       	or	r25, r21
    115e:	a6 2b       	or	r26, r22
    1160:	b7 2b       	or	r27, r23
    1162:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1166:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    116a:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    116e:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1172:	b0 9b       	sbis	0x16, 0	; 22
    1174:	1b c0       	rjmp	.+54     	; 0x11ac <__vector_12+0x98>
    1176:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    117a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    117e:	c9 01       	movw	r24, r18
    1180:	01 96       	adiw	r24, 0x01	; 1
    1182:	09 2e       	mov	r0, r25
    1184:	00 0c       	add	r0, r0
    1186:	aa 0b       	sbc	r26, r26
    1188:	bb 0b       	sbc	r27, r27
    118a:	dc 01       	movw	r26, r24
    118c:	99 27       	eor	r25, r25
    118e:	88 27       	eor	r24, r24
    1190:	60 e0       	ldi	r22, 0x00	; 0
    1192:	70 e0       	ldi	r23, 0x00	; 0
    1194:	84 2b       	or	r24, r20
    1196:	95 2b       	or	r25, r21
    1198:	a6 2b       	or	r26, r22
    119a:	b7 2b       	or	r27, r23
    119c:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    11a0:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    11a4:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    11a8:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    11ac:	e0 91 00 02 	lds	r30, 0x0200	; 0x800200 <mtable+0xe>
    11b0:	f0 91 01 02 	lds	r31, 0x0201	; 0x800201 <mtable+0xf>
    11b4:	30 97       	sbiw	r30, 0x00	; 0
    11b6:	39 f0       	breq	.+14     	; 0x11c6 <__vector_12+0xb2>
    11b8:	67 e0       	ldi	r22, 0x07	; 7
    11ba:	70 e0       	ldi	r23, 0x00	; 0
    11bc:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <otable+0xe>
    11c0:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <otable+0xf>
    11c4:	09 95       	icall
    11c6:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    11ca:	ff 91       	pop	r31
    11cc:	ef 91       	pop	r30
    11ce:	bf 91       	pop	r27
    11d0:	af 91       	pop	r26
    11d2:	9f 91       	pop	r25
    11d4:	8f 91       	pop	r24
    11d6:	7f 91       	pop	r23
    11d8:	6f 91       	pop	r22
    11da:	5f 91       	pop	r21
    11dc:	4f 91       	pop	r20
    11de:	3f 91       	pop	r19
    11e0:	2f 91       	pop	r18
    11e2:	0f 90       	pop	r0
    11e4:	0f be       	out	0x3f, r0	; 63
    11e6:	0f 90       	pop	r0
    11e8:	1f 90       	pop	r1
    11ea:	18 95       	reti

000011ec <__vector_13>:
    11ec:	1f 92       	push	r1
    11ee:	0f 92       	push	r0
    11f0:	0f b6       	in	r0, 0x3f	; 63
    11f2:	0f 92       	push	r0
    11f4:	11 24       	eor	r1, r1
    11f6:	2f 93       	push	r18
    11f8:	3f 93       	push	r19
    11fa:	4f 93       	push	r20
    11fc:	5f 93       	push	r21
    11fe:	6f 93       	push	r22
    1200:	7f 93       	push	r23
    1202:	8f 93       	push	r24
    1204:	9f 93       	push	r25
    1206:	af 93       	push	r26
    1208:	bf 93       	push	r27
    120a:	ef 93       	push	r30
    120c:	ff 93       	push	r31
    120e:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    1212:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1216:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    121a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    121e:	c9 01       	movw	r24, r18
    1220:	03 2e       	mov	r0, r19
    1222:	00 0c       	add	r0, r0
    1224:	aa 0b       	sbc	r26, r26
    1226:	bb 0b       	sbc	r27, r27
    1228:	dc 01       	movw	r26, r24
    122a:	99 27       	eor	r25, r25
    122c:	88 27       	eor	r24, r24
    122e:	60 e0       	ldi	r22, 0x00	; 0
    1230:	70 e0       	ldi	r23, 0x00	; 0
    1232:	84 2b       	or	r24, r20
    1234:	95 2b       	or	r25, r21
    1236:	a6 2b       	or	r26, r22
    1238:	b7 2b       	or	r27, r23
    123a:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    123e:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1242:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1246:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    124a:	b0 9b       	sbis	0x16, 0	; 22
    124c:	1b c0       	rjmp	.+54     	; 0x1284 <__vector_13+0x98>
    124e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1252:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1256:	c9 01       	movw	r24, r18
    1258:	01 96       	adiw	r24, 0x01	; 1
    125a:	09 2e       	mov	r0, r25
    125c:	00 0c       	add	r0, r0
    125e:	aa 0b       	sbc	r26, r26
    1260:	bb 0b       	sbc	r27, r27
    1262:	dc 01       	movw	r26, r24
    1264:	99 27       	eor	r25, r25
    1266:	88 27       	eor	r24, r24
    1268:	60 e0       	ldi	r22, 0x00	; 0
    126a:	70 e0       	ldi	r23, 0x00	; 0
    126c:	84 2b       	or	r24, r20
    126e:	95 2b       	or	r25, r21
    1270:	a6 2b       	or	r26, r22
    1272:	b7 2b       	or	r27, r23
    1274:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1278:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    127c:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1280:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1284:	e0 91 02 02 	lds	r30, 0x0202	; 0x800202 <mtable+0x10>
    1288:	f0 91 03 02 	lds	r31, 0x0203	; 0x800203 <mtable+0x11>
    128c:	30 97       	sbiw	r30, 0x00	; 0
    128e:	39 f0       	breq	.+14     	; 0x129e <__vector_13+0xb2>
    1290:	68 e0       	ldi	r22, 0x08	; 8
    1292:	70 e0       	ldi	r23, 0x00	; 0
    1294:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <otable+0x10>
    1298:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <otable+0x11>
    129c:	09 95       	icall
    129e:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    12a2:	ff 91       	pop	r31
    12a4:	ef 91       	pop	r30
    12a6:	bf 91       	pop	r27
    12a8:	af 91       	pop	r26
    12aa:	9f 91       	pop	r25
    12ac:	8f 91       	pop	r24
    12ae:	7f 91       	pop	r23
    12b0:	6f 91       	pop	r22
    12b2:	5f 91       	pop	r21
    12b4:	4f 91       	pop	r20
    12b6:	3f 91       	pop	r19
    12b8:	2f 91       	pop	r18
    12ba:	0f 90       	pop	r0
    12bc:	0f be       	out	0x3f, r0	; 63
    12be:	0f 90       	pop	r0
    12c0:	1f 90       	pop	r1
    12c2:	18 95       	reti

000012c4 <__vector_14>:
    12c4:	1f 92       	push	r1
    12c6:	0f 92       	push	r0
    12c8:	0f b6       	in	r0, 0x3f	; 63
    12ca:	0f 92       	push	r0
    12cc:	11 24       	eor	r1, r1
    12ce:	2f 93       	push	r18
    12d0:	3f 93       	push	r19
    12d2:	4f 93       	push	r20
    12d4:	5f 93       	push	r21
    12d6:	6f 93       	push	r22
    12d8:	7f 93       	push	r23
    12da:	8f 93       	push	r24
    12dc:	9f 93       	push	r25
    12de:	af 93       	push	r26
    12e0:	bf 93       	push	r27
    12e2:	ef 93       	push	r30
    12e4:	ff 93       	push	r31
    12e6:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    12ea:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    12ee:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12f2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12f6:	c9 01       	movw	r24, r18
    12f8:	03 2e       	mov	r0, r19
    12fa:	00 0c       	add	r0, r0
    12fc:	aa 0b       	sbc	r26, r26
    12fe:	bb 0b       	sbc	r27, r27
    1300:	dc 01       	movw	r26, r24
    1302:	99 27       	eor	r25, r25
    1304:	88 27       	eor	r24, r24
    1306:	60 e0       	ldi	r22, 0x00	; 0
    1308:	70 e0       	ldi	r23, 0x00	; 0
    130a:	84 2b       	or	r24, r20
    130c:	95 2b       	or	r25, r21
    130e:	a6 2b       	or	r26, r22
    1310:	b7 2b       	or	r27, r23
    1312:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1316:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    131a:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    131e:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1322:	b0 9b       	sbis	0x16, 0	; 22
    1324:	1b c0       	rjmp	.+54     	; 0x135c <__vector_14+0x98>
    1326:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    132a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    132e:	c9 01       	movw	r24, r18
    1330:	01 96       	adiw	r24, 0x01	; 1
    1332:	09 2e       	mov	r0, r25
    1334:	00 0c       	add	r0, r0
    1336:	aa 0b       	sbc	r26, r26
    1338:	bb 0b       	sbc	r27, r27
    133a:	dc 01       	movw	r26, r24
    133c:	99 27       	eor	r25, r25
    133e:	88 27       	eor	r24, r24
    1340:	60 e0       	ldi	r22, 0x00	; 0
    1342:	70 e0       	ldi	r23, 0x00	; 0
    1344:	84 2b       	or	r24, r20
    1346:	95 2b       	or	r25, r21
    1348:	a6 2b       	or	r26, r22
    134a:	b7 2b       	or	r27, r23
    134c:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1350:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1354:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1358:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    135c:	e0 91 04 02 	lds	r30, 0x0204	; 0x800204 <mtable+0x12>
    1360:	f0 91 05 02 	lds	r31, 0x0205	; 0x800205 <mtable+0x13>
    1364:	30 97       	sbiw	r30, 0x00	; 0
    1366:	39 f0       	breq	.+14     	; 0x1376 <__vector_14+0xb2>
    1368:	69 e0       	ldi	r22, 0x09	; 9
    136a:	70 e0       	ldi	r23, 0x00	; 0
    136c:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <otable+0x12>
    1370:	90 91 6d 01 	lds	r25, 0x016D	; 0x80016d <otable+0x13>
    1374:	09 95       	icall
    1376:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    137a:	ff 91       	pop	r31
    137c:	ef 91       	pop	r30
    137e:	bf 91       	pop	r27
    1380:	af 91       	pop	r26
    1382:	9f 91       	pop	r25
    1384:	8f 91       	pop	r24
    1386:	7f 91       	pop	r23
    1388:	6f 91       	pop	r22
    138a:	5f 91       	pop	r21
    138c:	4f 91       	pop	r20
    138e:	3f 91       	pop	r19
    1390:	2f 91       	pop	r18
    1392:	0f 90       	pop	r0
    1394:	0f be       	out	0x3f, r0	; 63
    1396:	0f 90       	pop	r0
    1398:	1f 90       	pop	r1
    139a:	18 95       	reti

0000139c <__vector_15>:
    139c:	1f 92       	push	r1
    139e:	0f 92       	push	r0
    13a0:	0f b6       	in	r0, 0x3f	; 63
    13a2:	0f 92       	push	r0
    13a4:	11 24       	eor	r1, r1
    13a6:	2f 93       	push	r18
    13a8:	3f 93       	push	r19
    13aa:	4f 93       	push	r20
    13ac:	5f 93       	push	r21
    13ae:	6f 93       	push	r22
    13b0:	7f 93       	push	r23
    13b2:	8f 93       	push	r24
    13b4:	9f 93       	push	r25
    13b6:	af 93       	push	r26
    13b8:	bf 93       	push	r27
    13ba:	ef 93       	push	r30
    13bc:	ff 93       	push	r31
    13be:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    13c2:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    13c6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13ca:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13ce:	c9 01       	movw	r24, r18
    13d0:	03 2e       	mov	r0, r19
    13d2:	00 0c       	add	r0, r0
    13d4:	aa 0b       	sbc	r26, r26
    13d6:	bb 0b       	sbc	r27, r27
    13d8:	dc 01       	movw	r26, r24
    13da:	99 27       	eor	r25, r25
    13dc:	88 27       	eor	r24, r24
    13de:	60 e0       	ldi	r22, 0x00	; 0
    13e0:	70 e0       	ldi	r23, 0x00	; 0
    13e2:	84 2b       	or	r24, r20
    13e4:	95 2b       	or	r25, r21
    13e6:	a6 2b       	or	r26, r22
    13e8:	b7 2b       	or	r27, r23
    13ea:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    13ee:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    13f2:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    13f6:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    13fa:	b0 9b       	sbis	0x16, 0	; 22
    13fc:	1b c0       	rjmp	.+54     	; 0x1434 <__vector_15+0x98>
    13fe:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1402:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1406:	c9 01       	movw	r24, r18
    1408:	01 96       	adiw	r24, 0x01	; 1
    140a:	09 2e       	mov	r0, r25
    140c:	00 0c       	add	r0, r0
    140e:	aa 0b       	sbc	r26, r26
    1410:	bb 0b       	sbc	r27, r27
    1412:	dc 01       	movw	r26, r24
    1414:	99 27       	eor	r25, r25
    1416:	88 27       	eor	r24, r24
    1418:	60 e0       	ldi	r22, 0x00	; 0
    141a:	70 e0       	ldi	r23, 0x00	; 0
    141c:	84 2b       	or	r24, r20
    141e:	95 2b       	or	r25, r21
    1420:	a6 2b       	or	r26, r22
    1422:	b7 2b       	or	r27, r23
    1424:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1428:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    142c:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1430:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1434:	e0 91 06 02 	lds	r30, 0x0206	; 0x800206 <mtable+0x14>
    1438:	f0 91 07 02 	lds	r31, 0x0207	; 0x800207 <mtable+0x15>
    143c:	30 97       	sbiw	r30, 0x00	; 0
    143e:	39 f0       	breq	.+14     	; 0x144e <__vector_15+0xb2>
    1440:	6a e0       	ldi	r22, 0x0A	; 10
    1442:	70 e0       	ldi	r23, 0x00	; 0
    1444:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <otable+0x14>
    1448:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <otable+0x15>
    144c:	09 95       	icall
    144e:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    1452:	ff 91       	pop	r31
    1454:	ef 91       	pop	r30
    1456:	bf 91       	pop	r27
    1458:	af 91       	pop	r26
    145a:	9f 91       	pop	r25
    145c:	8f 91       	pop	r24
    145e:	7f 91       	pop	r23
    1460:	6f 91       	pop	r22
    1462:	5f 91       	pop	r21
    1464:	4f 91       	pop	r20
    1466:	3f 91       	pop	r19
    1468:	2f 91       	pop	r18
    146a:	0f 90       	pop	r0
    146c:	0f be       	out	0x3f, r0	; 63
    146e:	0f 90       	pop	r0
    1470:	1f 90       	pop	r1
    1472:	18 95       	reti

00001474 <__vector_16>:
    1474:	1f 92       	push	r1
    1476:	0f 92       	push	r0
    1478:	0f b6       	in	r0, 0x3f	; 63
    147a:	0f 92       	push	r0
    147c:	11 24       	eor	r1, r1
    147e:	2f 93       	push	r18
    1480:	3f 93       	push	r19
    1482:	4f 93       	push	r20
    1484:	5f 93       	push	r21
    1486:	6f 93       	push	r22
    1488:	7f 93       	push	r23
    148a:	8f 93       	push	r24
    148c:	9f 93       	push	r25
    148e:	af 93       	push	r26
    1490:	bf 93       	push	r27
    1492:	ef 93       	push	r30
    1494:	ff 93       	push	r31
    1496:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    149a:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    149e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14a2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14a6:	c9 01       	movw	r24, r18
    14a8:	03 2e       	mov	r0, r19
    14aa:	00 0c       	add	r0, r0
    14ac:	aa 0b       	sbc	r26, r26
    14ae:	bb 0b       	sbc	r27, r27
    14b0:	dc 01       	movw	r26, r24
    14b2:	99 27       	eor	r25, r25
    14b4:	88 27       	eor	r24, r24
    14b6:	60 e0       	ldi	r22, 0x00	; 0
    14b8:	70 e0       	ldi	r23, 0x00	; 0
    14ba:	84 2b       	or	r24, r20
    14bc:	95 2b       	or	r25, r21
    14be:	a6 2b       	or	r26, r22
    14c0:	b7 2b       	or	r27, r23
    14c2:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    14c6:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    14ca:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    14ce:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    14d2:	b0 9b       	sbis	0x16, 0	; 22
    14d4:	1b c0       	rjmp	.+54     	; 0x150c <__vector_16+0x98>
    14d6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14da:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14de:	c9 01       	movw	r24, r18
    14e0:	01 96       	adiw	r24, 0x01	; 1
    14e2:	09 2e       	mov	r0, r25
    14e4:	00 0c       	add	r0, r0
    14e6:	aa 0b       	sbc	r26, r26
    14e8:	bb 0b       	sbc	r27, r27
    14ea:	dc 01       	movw	r26, r24
    14ec:	99 27       	eor	r25, r25
    14ee:	88 27       	eor	r24, r24
    14f0:	60 e0       	ldi	r22, 0x00	; 0
    14f2:	70 e0       	ldi	r23, 0x00	; 0
    14f4:	84 2b       	or	r24, r20
    14f6:	95 2b       	or	r25, r21
    14f8:	a6 2b       	or	r26, r22
    14fa:	b7 2b       	or	r27, r23
    14fc:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1500:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1504:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1508:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    150c:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <mtable+0x16>
    1510:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <mtable+0x17>
    1514:	30 97       	sbiw	r30, 0x00	; 0
    1516:	39 f0       	breq	.+14     	; 0x1526 <__vector_16+0xb2>
    1518:	6b e0       	ldi	r22, 0x0B	; 11
    151a:	70 e0       	ldi	r23, 0x00	; 0
    151c:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <otable+0x16>
    1520:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <otable+0x17>
    1524:	09 95       	icall
    1526:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    152a:	ff 91       	pop	r31
    152c:	ef 91       	pop	r30
    152e:	bf 91       	pop	r27
    1530:	af 91       	pop	r26
    1532:	9f 91       	pop	r25
    1534:	8f 91       	pop	r24
    1536:	7f 91       	pop	r23
    1538:	6f 91       	pop	r22
    153a:	5f 91       	pop	r21
    153c:	4f 91       	pop	r20
    153e:	3f 91       	pop	r19
    1540:	2f 91       	pop	r18
    1542:	0f 90       	pop	r0
    1544:	0f be       	out	0x3f, r0	; 63
    1546:	0f 90       	pop	r0
    1548:	1f 90       	pop	r1
    154a:	18 95       	reti

0000154c <__vector_17>:
    154c:	1f 92       	push	r1
    154e:	0f 92       	push	r0
    1550:	0f b6       	in	r0, 0x3f	; 63
    1552:	0f 92       	push	r0
    1554:	11 24       	eor	r1, r1
    1556:	2f 93       	push	r18
    1558:	3f 93       	push	r19
    155a:	4f 93       	push	r20
    155c:	5f 93       	push	r21
    155e:	6f 93       	push	r22
    1560:	7f 93       	push	r23
    1562:	8f 93       	push	r24
    1564:	9f 93       	push	r25
    1566:	af 93       	push	r26
    1568:	bf 93       	push	r27
    156a:	ef 93       	push	r30
    156c:	ff 93       	push	r31
    156e:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    1572:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1576:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    157a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    157e:	c9 01       	movw	r24, r18
    1580:	03 2e       	mov	r0, r19
    1582:	00 0c       	add	r0, r0
    1584:	aa 0b       	sbc	r26, r26
    1586:	bb 0b       	sbc	r27, r27
    1588:	dc 01       	movw	r26, r24
    158a:	99 27       	eor	r25, r25
    158c:	88 27       	eor	r24, r24
    158e:	60 e0       	ldi	r22, 0x00	; 0
    1590:	70 e0       	ldi	r23, 0x00	; 0
    1592:	84 2b       	or	r24, r20
    1594:	95 2b       	or	r25, r21
    1596:	a6 2b       	or	r26, r22
    1598:	b7 2b       	or	r27, r23
    159a:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    159e:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    15a2:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    15a6:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    15aa:	b0 9b       	sbis	0x16, 0	; 22
    15ac:	1b c0       	rjmp	.+54     	; 0x15e4 <__vector_17+0x98>
    15ae:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15b2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15b6:	c9 01       	movw	r24, r18
    15b8:	01 96       	adiw	r24, 0x01	; 1
    15ba:	09 2e       	mov	r0, r25
    15bc:	00 0c       	add	r0, r0
    15be:	aa 0b       	sbc	r26, r26
    15c0:	bb 0b       	sbc	r27, r27
    15c2:	dc 01       	movw	r26, r24
    15c4:	99 27       	eor	r25, r25
    15c6:	88 27       	eor	r24, r24
    15c8:	60 e0       	ldi	r22, 0x00	; 0
    15ca:	70 e0       	ldi	r23, 0x00	; 0
    15cc:	84 2b       	or	r24, r20
    15ce:	95 2b       	or	r25, r21
    15d0:	a6 2b       	or	r26, r22
    15d2:	b7 2b       	or	r27, r23
    15d4:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    15d8:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    15dc:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    15e0:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    15e4:	e0 91 0a 02 	lds	r30, 0x020A	; 0x80020a <mtable+0x18>
    15e8:	f0 91 0b 02 	lds	r31, 0x020B	; 0x80020b <mtable+0x19>
    15ec:	30 97       	sbiw	r30, 0x00	; 0
    15ee:	39 f0       	breq	.+14     	; 0x15fe <__vector_17+0xb2>
    15f0:	6c e0       	ldi	r22, 0x0C	; 12
    15f2:	70 e0       	ldi	r23, 0x00	; 0
    15f4:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <otable+0x18>
    15f8:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <otable+0x19>
    15fc:	09 95       	icall
    15fe:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    1602:	ff 91       	pop	r31
    1604:	ef 91       	pop	r30
    1606:	bf 91       	pop	r27
    1608:	af 91       	pop	r26
    160a:	9f 91       	pop	r25
    160c:	8f 91       	pop	r24
    160e:	7f 91       	pop	r23
    1610:	6f 91       	pop	r22
    1612:	5f 91       	pop	r21
    1614:	4f 91       	pop	r20
    1616:	3f 91       	pop	r19
    1618:	2f 91       	pop	r18
    161a:	0f 90       	pop	r0
    161c:	0f be       	out	0x3f, r0	; 63
    161e:	0f 90       	pop	r0
    1620:	1f 90       	pop	r1
    1622:	18 95       	reti

00001624 <__vector_18>:
    1624:	1f 92       	push	r1
    1626:	0f 92       	push	r0
    1628:	0f b6       	in	r0, 0x3f	; 63
    162a:	0f 92       	push	r0
    162c:	11 24       	eor	r1, r1
    162e:	2f 93       	push	r18
    1630:	3f 93       	push	r19
    1632:	4f 93       	push	r20
    1634:	5f 93       	push	r21
    1636:	6f 93       	push	r22
    1638:	7f 93       	push	r23
    163a:	8f 93       	push	r24
    163c:	9f 93       	push	r25
    163e:	af 93       	push	r26
    1640:	bf 93       	push	r27
    1642:	ef 93       	push	r30
    1644:	ff 93       	push	r31
    1646:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    164a:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    164e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1652:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1656:	c9 01       	movw	r24, r18
    1658:	03 2e       	mov	r0, r19
    165a:	00 0c       	add	r0, r0
    165c:	aa 0b       	sbc	r26, r26
    165e:	bb 0b       	sbc	r27, r27
    1660:	dc 01       	movw	r26, r24
    1662:	99 27       	eor	r25, r25
    1664:	88 27       	eor	r24, r24
    1666:	60 e0       	ldi	r22, 0x00	; 0
    1668:	70 e0       	ldi	r23, 0x00	; 0
    166a:	84 2b       	or	r24, r20
    166c:	95 2b       	or	r25, r21
    166e:	a6 2b       	or	r26, r22
    1670:	b7 2b       	or	r27, r23
    1672:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1676:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    167a:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    167e:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1682:	b0 9b       	sbis	0x16, 0	; 22
    1684:	1b c0       	rjmp	.+54     	; 0x16bc <__vector_18+0x98>
    1686:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    168a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    168e:	c9 01       	movw	r24, r18
    1690:	01 96       	adiw	r24, 0x01	; 1
    1692:	09 2e       	mov	r0, r25
    1694:	00 0c       	add	r0, r0
    1696:	aa 0b       	sbc	r26, r26
    1698:	bb 0b       	sbc	r27, r27
    169a:	dc 01       	movw	r26, r24
    169c:	99 27       	eor	r25, r25
    169e:	88 27       	eor	r24, r24
    16a0:	60 e0       	ldi	r22, 0x00	; 0
    16a2:	70 e0       	ldi	r23, 0x00	; 0
    16a4:	84 2b       	or	r24, r20
    16a6:	95 2b       	or	r25, r21
    16a8:	a6 2b       	or	r26, r22
    16aa:	b7 2b       	or	r27, r23
    16ac:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    16b0:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    16b4:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    16b8:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    16bc:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <mtable+0x1a>
    16c0:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <mtable+0x1b>
    16c4:	30 97       	sbiw	r30, 0x00	; 0
    16c6:	39 f0       	breq	.+14     	; 0x16d6 <__vector_18+0xb2>
    16c8:	6d e0       	ldi	r22, 0x0D	; 13
    16ca:	70 e0       	ldi	r23, 0x00	; 0
    16cc:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <otable+0x1a>
    16d0:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <otable+0x1b>
    16d4:	09 95       	icall
    16d6:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    16da:	ff 91       	pop	r31
    16dc:	ef 91       	pop	r30
    16de:	bf 91       	pop	r27
    16e0:	af 91       	pop	r26
    16e2:	9f 91       	pop	r25
    16e4:	8f 91       	pop	r24
    16e6:	7f 91       	pop	r23
    16e8:	6f 91       	pop	r22
    16ea:	5f 91       	pop	r21
    16ec:	4f 91       	pop	r20
    16ee:	3f 91       	pop	r19
    16f0:	2f 91       	pop	r18
    16f2:	0f 90       	pop	r0
    16f4:	0f be       	out	0x3f, r0	; 63
    16f6:	0f 90       	pop	r0
    16f8:	1f 90       	pop	r1
    16fa:	18 95       	reti

000016fc <__vector_19>:
    16fc:	1f 92       	push	r1
    16fe:	0f 92       	push	r0
    1700:	0f b6       	in	r0, 0x3f	; 63
    1702:	0f 92       	push	r0
    1704:	11 24       	eor	r1, r1
    1706:	2f 93       	push	r18
    1708:	3f 93       	push	r19
    170a:	4f 93       	push	r20
    170c:	5f 93       	push	r21
    170e:	6f 93       	push	r22
    1710:	7f 93       	push	r23
    1712:	8f 93       	push	r24
    1714:	9f 93       	push	r25
    1716:	af 93       	push	r26
    1718:	bf 93       	push	r27
    171a:	ef 93       	push	r30
    171c:	ff 93       	push	r31
    171e:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    1722:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1726:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    172a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    172e:	c9 01       	movw	r24, r18
    1730:	03 2e       	mov	r0, r19
    1732:	00 0c       	add	r0, r0
    1734:	aa 0b       	sbc	r26, r26
    1736:	bb 0b       	sbc	r27, r27
    1738:	dc 01       	movw	r26, r24
    173a:	99 27       	eor	r25, r25
    173c:	88 27       	eor	r24, r24
    173e:	60 e0       	ldi	r22, 0x00	; 0
    1740:	70 e0       	ldi	r23, 0x00	; 0
    1742:	84 2b       	or	r24, r20
    1744:	95 2b       	or	r25, r21
    1746:	a6 2b       	or	r26, r22
    1748:	b7 2b       	or	r27, r23
    174a:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    174e:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1752:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1756:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    175a:	b0 9b       	sbis	0x16, 0	; 22
    175c:	1b c0       	rjmp	.+54     	; 0x1794 <__vector_19+0x98>
    175e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1762:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1766:	c9 01       	movw	r24, r18
    1768:	01 96       	adiw	r24, 0x01	; 1
    176a:	09 2e       	mov	r0, r25
    176c:	00 0c       	add	r0, r0
    176e:	aa 0b       	sbc	r26, r26
    1770:	bb 0b       	sbc	r27, r27
    1772:	dc 01       	movw	r26, r24
    1774:	99 27       	eor	r25, r25
    1776:	88 27       	eor	r24, r24
    1778:	60 e0       	ldi	r22, 0x00	; 0
    177a:	70 e0       	ldi	r23, 0x00	; 0
    177c:	84 2b       	or	r24, r20
    177e:	95 2b       	or	r25, r21
    1780:	a6 2b       	or	r26, r22
    1782:	b7 2b       	or	r27, r23
    1784:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1788:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    178c:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1790:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1794:	e0 91 0e 02 	lds	r30, 0x020E	; 0x80020e <mtable+0x1c>
    1798:	f0 91 0f 02 	lds	r31, 0x020F	; 0x80020f <mtable+0x1d>
    179c:	30 97       	sbiw	r30, 0x00	; 0
    179e:	39 f0       	breq	.+14     	; 0x17ae <__vector_19+0xb2>
    17a0:	6e e0       	ldi	r22, 0x0E	; 14
    17a2:	70 e0       	ldi	r23, 0x00	; 0
    17a4:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <otable+0x1c>
    17a8:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <otable+0x1d>
    17ac:	09 95       	icall
    17ae:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    17b2:	ff 91       	pop	r31
    17b4:	ef 91       	pop	r30
    17b6:	bf 91       	pop	r27
    17b8:	af 91       	pop	r26
    17ba:	9f 91       	pop	r25
    17bc:	8f 91       	pop	r24
    17be:	7f 91       	pop	r23
    17c0:	6f 91       	pop	r22
    17c2:	5f 91       	pop	r21
    17c4:	4f 91       	pop	r20
    17c6:	3f 91       	pop	r19
    17c8:	2f 91       	pop	r18
    17ca:	0f 90       	pop	r0
    17cc:	0f be       	out	0x3f, r0	; 63
    17ce:	0f 90       	pop	r0
    17d0:	1f 90       	pop	r1
    17d2:	18 95       	reti

000017d4 <__vector_20>:
    17d4:	1f 92       	push	r1
    17d6:	0f 92       	push	r0
    17d8:	0f b6       	in	r0, 0x3f	; 63
    17da:	0f 92       	push	r0
    17dc:	11 24       	eor	r1, r1
    17de:	2f 93       	push	r18
    17e0:	3f 93       	push	r19
    17e2:	4f 93       	push	r20
    17e4:	5f 93       	push	r21
    17e6:	6f 93       	push	r22
    17e8:	7f 93       	push	r23
    17ea:	8f 93       	push	r24
    17ec:	9f 93       	push	r25
    17ee:	af 93       	push	r26
    17f0:	bf 93       	push	r27
    17f2:	ef 93       	push	r30
    17f4:	ff 93       	push	r31
    17f6:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    17fa:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    17fe:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1802:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1806:	c9 01       	movw	r24, r18
    1808:	03 2e       	mov	r0, r19
    180a:	00 0c       	add	r0, r0
    180c:	aa 0b       	sbc	r26, r26
    180e:	bb 0b       	sbc	r27, r27
    1810:	dc 01       	movw	r26, r24
    1812:	99 27       	eor	r25, r25
    1814:	88 27       	eor	r24, r24
    1816:	60 e0       	ldi	r22, 0x00	; 0
    1818:	70 e0       	ldi	r23, 0x00	; 0
    181a:	84 2b       	or	r24, r20
    181c:	95 2b       	or	r25, r21
    181e:	a6 2b       	or	r26, r22
    1820:	b7 2b       	or	r27, r23
    1822:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1826:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    182a:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    182e:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1832:	b0 9b       	sbis	0x16, 0	; 22
    1834:	1b c0       	rjmp	.+54     	; 0x186c <__vector_20+0x98>
    1836:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    183a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    183e:	c9 01       	movw	r24, r18
    1840:	01 96       	adiw	r24, 0x01	; 1
    1842:	09 2e       	mov	r0, r25
    1844:	00 0c       	add	r0, r0
    1846:	aa 0b       	sbc	r26, r26
    1848:	bb 0b       	sbc	r27, r27
    184a:	dc 01       	movw	r26, r24
    184c:	99 27       	eor	r25, r25
    184e:	88 27       	eor	r24, r24
    1850:	60 e0       	ldi	r22, 0x00	; 0
    1852:	70 e0       	ldi	r23, 0x00	; 0
    1854:	84 2b       	or	r24, r20
    1856:	95 2b       	or	r25, r21
    1858:	a6 2b       	or	r26, r22
    185a:	b7 2b       	or	r27, r23
    185c:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1860:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1864:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1868:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    186c:	e0 91 10 02 	lds	r30, 0x0210	; 0x800210 <mtable+0x1e>
    1870:	f0 91 11 02 	lds	r31, 0x0211	; 0x800211 <mtable+0x1f>
    1874:	30 97       	sbiw	r30, 0x00	; 0
    1876:	39 f0       	breq	.+14     	; 0x1886 <__vector_20+0xb2>
    1878:	6f e0       	ldi	r22, 0x0F	; 15
    187a:	70 e0       	ldi	r23, 0x00	; 0
    187c:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <otable+0x1e>
    1880:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <otable+0x1f>
    1884:	09 95       	icall
    1886:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    188a:	ff 91       	pop	r31
    188c:	ef 91       	pop	r30
    188e:	bf 91       	pop	r27
    1890:	af 91       	pop	r26
    1892:	9f 91       	pop	r25
    1894:	8f 91       	pop	r24
    1896:	7f 91       	pop	r23
    1898:	6f 91       	pop	r22
    189a:	5f 91       	pop	r21
    189c:	4f 91       	pop	r20
    189e:	3f 91       	pop	r19
    18a0:	2f 91       	pop	r18
    18a2:	0f 90       	pop	r0
    18a4:	0f be       	out	0x3f, r0	; 63
    18a6:	0f 90       	pop	r0
    18a8:	1f 90       	pop	r1
    18aa:	18 95       	reti

000018ac <__vector_21>:
    18ac:	1f 92       	push	r1
    18ae:	0f 92       	push	r0
    18b0:	0f b6       	in	r0, 0x3f	; 63
    18b2:	0f 92       	push	r0
    18b4:	11 24       	eor	r1, r1
    18b6:	2f 93       	push	r18
    18b8:	3f 93       	push	r19
    18ba:	4f 93       	push	r20
    18bc:	5f 93       	push	r21
    18be:	6f 93       	push	r22
    18c0:	7f 93       	push	r23
    18c2:	8f 93       	push	r24
    18c4:	9f 93       	push	r25
    18c6:	af 93       	push	r26
    18c8:	bf 93       	push	r27
    18ca:	ef 93       	push	r30
    18cc:	ff 93       	push	r31
    18ce:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    18d2:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    18d6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18da:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18de:	c9 01       	movw	r24, r18
    18e0:	03 2e       	mov	r0, r19
    18e2:	00 0c       	add	r0, r0
    18e4:	aa 0b       	sbc	r26, r26
    18e6:	bb 0b       	sbc	r27, r27
    18e8:	dc 01       	movw	r26, r24
    18ea:	99 27       	eor	r25, r25
    18ec:	88 27       	eor	r24, r24
    18ee:	60 e0       	ldi	r22, 0x00	; 0
    18f0:	70 e0       	ldi	r23, 0x00	; 0
    18f2:	84 2b       	or	r24, r20
    18f4:	95 2b       	or	r25, r21
    18f6:	a6 2b       	or	r26, r22
    18f8:	b7 2b       	or	r27, r23
    18fa:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    18fe:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1902:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1906:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    190a:	b0 9b       	sbis	0x16, 0	; 22
    190c:	1b c0       	rjmp	.+54     	; 0x1944 <__vector_21+0x98>
    190e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1912:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1916:	c9 01       	movw	r24, r18
    1918:	01 96       	adiw	r24, 0x01	; 1
    191a:	09 2e       	mov	r0, r25
    191c:	00 0c       	add	r0, r0
    191e:	aa 0b       	sbc	r26, r26
    1920:	bb 0b       	sbc	r27, r27
    1922:	dc 01       	movw	r26, r24
    1924:	99 27       	eor	r25, r25
    1926:	88 27       	eor	r24, r24
    1928:	60 e0       	ldi	r22, 0x00	; 0
    192a:	70 e0       	ldi	r23, 0x00	; 0
    192c:	84 2b       	or	r24, r20
    192e:	95 2b       	or	r25, r21
    1930:	a6 2b       	or	r26, r22
    1932:	b7 2b       	or	r27, r23
    1934:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1938:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    193c:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1940:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1944:	e0 91 12 02 	lds	r30, 0x0212	; 0x800212 <mtable+0x20>
    1948:	f0 91 13 02 	lds	r31, 0x0213	; 0x800213 <mtable+0x21>
    194c:	30 97       	sbiw	r30, 0x00	; 0
    194e:	39 f0       	breq	.+14     	; 0x195e <__vector_21+0xb2>
    1950:	60 e1       	ldi	r22, 0x10	; 16
    1952:	70 e0       	ldi	r23, 0x00	; 0
    1954:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <otable+0x20>
    1958:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <otable+0x21>
    195c:	09 95       	icall
    195e:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    1962:	ff 91       	pop	r31
    1964:	ef 91       	pop	r30
    1966:	bf 91       	pop	r27
    1968:	af 91       	pop	r26
    196a:	9f 91       	pop	r25
    196c:	8f 91       	pop	r24
    196e:	7f 91       	pop	r23
    1970:	6f 91       	pop	r22
    1972:	5f 91       	pop	r21
    1974:	4f 91       	pop	r20
    1976:	3f 91       	pop	r19
    1978:	2f 91       	pop	r18
    197a:	0f 90       	pop	r0
    197c:	0f be       	out	0x3f, r0	; 63
    197e:	0f 90       	pop	r0
    1980:	1f 90       	pop	r1
    1982:	18 95       	reti

00001984 <__vector_22>:
    1984:	1f 92       	push	r1
    1986:	0f 92       	push	r0
    1988:	0f b6       	in	r0, 0x3f	; 63
    198a:	0f 92       	push	r0
    198c:	11 24       	eor	r1, r1
    198e:	2f 93       	push	r18
    1990:	3f 93       	push	r19
    1992:	4f 93       	push	r20
    1994:	5f 93       	push	r21
    1996:	6f 93       	push	r22
    1998:	7f 93       	push	r23
    199a:	8f 93       	push	r24
    199c:	9f 93       	push	r25
    199e:	af 93       	push	r26
    19a0:	bf 93       	push	r27
    19a2:	ef 93       	push	r30
    19a4:	ff 93       	push	r31
    19a6:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    19aa:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    19ae:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19b2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19b6:	c9 01       	movw	r24, r18
    19b8:	03 2e       	mov	r0, r19
    19ba:	00 0c       	add	r0, r0
    19bc:	aa 0b       	sbc	r26, r26
    19be:	bb 0b       	sbc	r27, r27
    19c0:	dc 01       	movw	r26, r24
    19c2:	99 27       	eor	r25, r25
    19c4:	88 27       	eor	r24, r24
    19c6:	60 e0       	ldi	r22, 0x00	; 0
    19c8:	70 e0       	ldi	r23, 0x00	; 0
    19ca:	84 2b       	or	r24, r20
    19cc:	95 2b       	or	r25, r21
    19ce:	a6 2b       	or	r26, r22
    19d0:	b7 2b       	or	r27, r23
    19d2:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    19d6:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    19da:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    19de:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    19e2:	b0 9b       	sbis	0x16, 0	; 22
    19e4:	1b c0       	rjmp	.+54     	; 0x1a1c <__vector_22+0x98>
    19e6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19ea:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19ee:	c9 01       	movw	r24, r18
    19f0:	01 96       	adiw	r24, 0x01	; 1
    19f2:	09 2e       	mov	r0, r25
    19f4:	00 0c       	add	r0, r0
    19f6:	aa 0b       	sbc	r26, r26
    19f8:	bb 0b       	sbc	r27, r27
    19fa:	dc 01       	movw	r26, r24
    19fc:	99 27       	eor	r25, r25
    19fe:	88 27       	eor	r24, r24
    1a00:	60 e0       	ldi	r22, 0x00	; 0
    1a02:	70 e0       	ldi	r23, 0x00	; 0
    1a04:	84 2b       	or	r24, r20
    1a06:	95 2b       	or	r25, r21
    1a08:	a6 2b       	or	r26, r22
    1a0a:	b7 2b       	or	r27, r23
    1a0c:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1a10:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1a14:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1a18:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1a1c:	e0 91 14 02 	lds	r30, 0x0214	; 0x800214 <mtable+0x22>
    1a20:	f0 91 15 02 	lds	r31, 0x0215	; 0x800215 <mtable+0x23>
    1a24:	30 97       	sbiw	r30, 0x00	; 0
    1a26:	39 f0       	breq	.+14     	; 0x1a36 <__vector_22+0xb2>
    1a28:	61 e1       	ldi	r22, 0x11	; 17
    1a2a:	70 e0       	ldi	r23, 0x00	; 0
    1a2c:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <otable+0x22>
    1a30:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <otable+0x23>
    1a34:	09 95       	icall
    1a36:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    1a3a:	ff 91       	pop	r31
    1a3c:	ef 91       	pop	r30
    1a3e:	bf 91       	pop	r27
    1a40:	af 91       	pop	r26
    1a42:	9f 91       	pop	r25
    1a44:	8f 91       	pop	r24
    1a46:	7f 91       	pop	r23
    1a48:	6f 91       	pop	r22
    1a4a:	5f 91       	pop	r21
    1a4c:	4f 91       	pop	r20
    1a4e:	3f 91       	pop	r19
    1a50:	2f 91       	pop	r18
    1a52:	0f 90       	pop	r0
    1a54:	0f be       	out	0x3f, r0	; 63
    1a56:	0f 90       	pop	r0
    1a58:	1f 90       	pop	r1
    1a5a:	18 95       	reti

00001a5c <enqueueByDeadline>:
    1a5c:	ef 92       	push	r14
    1a5e:	ff 92       	push	r15
    1a60:	0f 93       	push	r16
    1a62:	1f 93       	push	r17
    1a64:	cf 93       	push	r28
    1a66:	df 93       	push	r29
    1a68:	7b 01       	movw	r14, r22
    1a6a:	eb 01       	movw	r28, r22
    1a6c:	a8 81       	ld	r26, Y
    1a6e:	b9 81       	ldd	r27, Y+1	; 0x01
    1a70:	10 97       	sbiw	r26, 0x00	; 0
    1a72:	61 f1       	breq	.+88     	; 0x1acc <enqueueByDeadline+0x70>
    1a74:	fc 01       	movw	r30, r24
    1a76:	06 81       	ldd	r16, Z+6	; 0x06
    1a78:	17 81       	ldd	r17, Z+7	; 0x07
    1a7a:	20 85       	ldd	r18, Z+8	; 0x08
    1a7c:	31 85       	ldd	r19, Z+9	; 0x09
    1a7e:	16 96       	adiw	r26, 0x06	; 6
    1a80:	4d 91       	ld	r20, X+
    1a82:	5d 91       	ld	r21, X+
    1a84:	6d 91       	ld	r22, X+
    1a86:	7c 91       	ld	r23, X
    1a88:	19 97       	sbiw	r26, 0x09	; 9
    1a8a:	04 17       	cp	r16, r20
    1a8c:	15 07       	cpc	r17, r21
    1a8e:	26 07       	cpc	r18, r22
    1a90:	37 07       	cpc	r19, r23
    1a92:	14 f4       	brge	.+4      	; 0x1a98 <enqueueByDeadline+0x3c>
    1a94:	1b c0       	rjmp	.+54     	; 0x1acc <enqueueByDeadline+0x70>
    1a96:	df 01       	movw	r26, r30
    1a98:	ed 91       	ld	r30, X+
    1a9a:	fc 91       	ld	r31, X
    1a9c:	11 97       	sbiw	r26, 0x01	; 1
    1a9e:	30 97       	sbiw	r30, 0x00	; 0
    1aa0:	49 f0       	breq	.+18     	; 0x1ab4 <enqueueByDeadline+0x58>
    1aa2:	46 81       	ldd	r20, Z+6	; 0x06
    1aa4:	57 81       	ldd	r21, Z+7	; 0x07
    1aa6:	60 85       	ldd	r22, Z+8	; 0x08
    1aa8:	71 85       	ldd	r23, Z+9	; 0x09
    1aaa:	04 17       	cp	r16, r20
    1aac:	15 07       	cpc	r17, r21
    1aae:	26 07       	cpc	r18, r22
    1ab0:	37 07       	cpc	r19, r23
    1ab2:	8c f7       	brge	.-30     	; 0x1a96 <enqueueByDeadline+0x3a>
    1ab4:	ec 01       	movw	r28, r24
    1ab6:	f9 83       	std	Y+1, r31	; 0x01
    1ab8:	e8 83       	st	Y, r30
    1aba:	10 97       	sbiw	r26, 0x00	; 0
    1abc:	21 f4       	brne	.+8      	; 0x1ac6 <enqueueByDeadline+0x6a>
    1abe:	f7 01       	movw	r30, r14
    1ac0:	91 83       	std	Z+1, r25	; 0x01
    1ac2:	80 83       	st	Z, r24
    1ac4:	07 c0       	rjmp	.+14     	; 0x1ad4 <enqueueByDeadline+0x78>
    1ac6:	8d 93       	st	X+, r24
    1ac8:	9c 93       	st	X, r25
    1aca:	04 c0       	rjmp	.+8      	; 0x1ad4 <enqueueByDeadline+0x78>
    1acc:	ec 01       	movw	r28, r24
    1ace:	b9 83       	std	Y+1, r27	; 0x01
    1ad0:	a8 83       	st	Y, r26
    1ad2:	f5 cf       	rjmp	.-22     	; 0x1abe <enqueueByDeadline+0x62>
    1ad4:	df 91       	pop	r29
    1ad6:	cf 91       	pop	r28
    1ad8:	1f 91       	pop	r17
    1ada:	0f 91       	pop	r16
    1adc:	ff 90       	pop	r15
    1ade:	ef 90       	pop	r14
    1ae0:	08 95       	ret

00001ae2 <enqueueByBaseline>:
    1ae2:	ef 92       	push	r14
    1ae4:	ff 92       	push	r15
    1ae6:	0f 93       	push	r16
    1ae8:	1f 93       	push	r17
    1aea:	cf 93       	push	r28
    1aec:	df 93       	push	r29
    1aee:	7b 01       	movw	r14, r22
    1af0:	eb 01       	movw	r28, r22
    1af2:	a8 81       	ld	r26, Y
    1af4:	b9 81       	ldd	r27, Y+1	; 0x01
    1af6:	10 97       	sbiw	r26, 0x00	; 0
    1af8:	61 f1       	breq	.+88     	; 0x1b52 <enqueueByBaseline+0x70>
    1afa:	fc 01       	movw	r30, r24
    1afc:	02 81       	ldd	r16, Z+2	; 0x02
    1afe:	13 81       	ldd	r17, Z+3	; 0x03
    1b00:	24 81       	ldd	r18, Z+4	; 0x04
    1b02:	35 81       	ldd	r19, Z+5	; 0x05
    1b04:	12 96       	adiw	r26, 0x02	; 2
    1b06:	4d 91       	ld	r20, X+
    1b08:	5d 91       	ld	r21, X+
    1b0a:	6d 91       	ld	r22, X+
    1b0c:	7c 91       	ld	r23, X
    1b0e:	15 97       	sbiw	r26, 0x05	; 5
    1b10:	04 17       	cp	r16, r20
    1b12:	15 07       	cpc	r17, r21
    1b14:	26 07       	cpc	r18, r22
    1b16:	37 07       	cpc	r19, r23
    1b18:	14 f4       	brge	.+4      	; 0x1b1e <enqueueByBaseline+0x3c>
    1b1a:	1b c0       	rjmp	.+54     	; 0x1b52 <enqueueByBaseline+0x70>
    1b1c:	df 01       	movw	r26, r30
    1b1e:	ed 91       	ld	r30, X+
    1b20:	fc 91       	ld	r31, X
    1b22:	11 97       	sbiw	r26, 0x01	; 1
    1b24:	30 97       	sbiw	r30, 0x00	; 0
    1b26:	49 f0       	breq	.+18     	; 0x1b3a <enqueueByBaseline+0x58>
    1b28:	42 81       	ldd	r20, Z+2	; 0x02
    1b2a:	53 81       	ldd	r21, Z+3	; 0x03
    1b2c:	64 81       	ldd	r22, Z+4	; 0x04
    1b2e:	75 81       	ldd	r23, Z+5	; 0x05
    1b30:	04 17       	cp	r16, r20
    1b32:	15 07       	cpc	r17, r21
    1b34:	26 07       	cpc	r18, r22
    1b36:	37 07       	cpc	r19, r23
    1b38:	8c f7       	brge	.-30     	; 0x1b1c <enqueueByBaseline+0x3a>
    1b3a:	ec 01       	movw	r28, r24
    1b3c:	f9 83       	std	Y+1, r31	; 0x01
    1b3e:	e8 83       	st	Y, r30
    1b40:	10 97       	sbiw	r26, 0x00	; 0
    1b42:	21 f4       	brne	.+8      	; 0x1b4c <enqueueByBaseline+0x6a>
    1b44:	f7 01       	movw	r30, r14
    1b46:	91 83       	std	Z+1, r25	; 0x01
    1b48:	80 83       	st	Z, r24
    1b4a:	07 c0       	rjmp	.+14     	; 0x1b5a <enqueueByBaseline+0x78>
    1b4c:	8d 93       	st	X+, r24
    1b4e:	9c 93       	st	X, r25
    1b50:	04 c0       	rjmp	.+8      	; 0x1b5a <enqueueByBaseline+0x78>
    1b52:	ec 01       	movw	r28, r24
    1b54:	b9 83       	std	Y+1, r27	; 0x01
    1b56:	a8 83       	st	Y, r26
    1b58:	f5 cf       	rjmp	.-22     	; 0x1b44 <enqueueByBaseline+0x62>
    1b5a:	df 91       	pop	r29
    1b5c:	cf 91       	pop	r28
    1b5e:	1f 91       	pop	r17
    1b60:	0f 91       	pop	r16
    1b62:	ff 90       	pop	r15
    1b64:	ef 90       	pop	r14
    1b66:	08 95       	ret

00001b68 <dequeue>:
    1b68:	dc 01       	movw	r26, r24
    1b6a:	ed 91       	ld	r30, X+
    1b6c:	fc 91       	ld	r31, X
    1b6e:	11 97       	sbiw	r26, 0x01	; 1
    1b70:	30 97       	sbiw	r30, 0x00	; 0
    1b72:	59 f4       	brne	.+22     	; 0x1b8a <dequeue+0x22>
    1b74:	8f ef       	ldi	r24, 0xFF	; 255
    1b76:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
    1b7a:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
    1b7e:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
    1b82:	81 e0       	ldi	r24, 0x01	; 1
    1b84:	83 bf       	out	0x33, r24	; 51
    1b86:	88 95       	sleep
    1b88:	fd cf       	rjmp	.-6      	; 0x1b84 <dequeue+0x1c>
    1b8a:	20 81       	ld	r18, Z
    1b8c:	31 81       	ldd	r19, Z+1	; 0x01
    1b8e:	2d 93       	st	X+, r18
    1b90:	3c 93       	st	X, r19
    1b92:	cf 01       	movw	r24, r30
    1b94:	08 95       	ret

00001b96 <__vector_9>:
    1b96:	1f 92       	push	r1
    1b98:	0f 92       	push	r0
    1b9a:	0f b6       	in	r0, 0x3f	; 63
    1b9c:	0f 92       	push	r0
    1b9e:	11 24       	eor	r1, r1
    1ba0:	2f 93       	push	r18
    1ba2:	3f 93       	push	r19
    1ba4:	4f 93       	push	r20
    1ba6:	5f 93       	push	r21
    1ba8:	6f 93       	push	r22
    1baa:	7f 93       	push	r23
    1bac:	8f 93       	push	r24
    1bae:	9f 93       	push	r25
    1bb0:	ef 93       	push	r30
    1bb2:	ff 93       	push	r31
    1bb4:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <__data_end>
    1bb8:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <__data_end+0x1>
    1bbc:	01 96       	adiw	r24, 0x01	; 1
    1bbe:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <__data_end+0x1>
    1bc2:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <__data_end>
    1bc6:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <timerQ>
    1bca:	f0 91 57 01 	lds	r31, 0x0157	; 0x800157 <timerQ+0x1>
    1bce:	30 97       	sbiw	r30, 0x00	; 0
    1bd0:	01 f1       	breq	.+64     	; 0x1c12 <__vector_9+0x7c>
    1bd2:	42 81       	ldd	r20, Z+2	; 0x02
    1bd4:	53 81       	ldd	r21, Z+3	; 0x03
    1bd6:	64 81       	ldd	r22, Z+4	; 0x04
    1bd8:	75 81       	ldd	r23, Z+5	; 0x05
    1bda:	86 17       	cp	r24, r22
    1bdc:	97 07       	cpc	r25, r23
    1bde:	c9 f4       	brne	.+50     	; 0x1c12 <__vector_9+0x7c>
    1be0:	ca 01       	movw	r24, r20
    1be2:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1be6:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1bea:	42 1b       	sub	r20, r18
    1bec:	53 0b       	sbc	r21, r19
    1bee:	41 30       	cpi	r20, 0x01	; 1
    1bf0:	51 05       	cpc	r21, r1
    1bf2:	29 f4       	brne	.+10     	; 0x1bfe <__vector_9+0x68>
    1bf4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1bf8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1bfc:	01 96       	adiw	r24, 0x01	; 1
    1bfe:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1c02:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1c06:	ef e6       	ldi	r30, 0x6F	; 111
    1c08:	f0 e0       	ldi	r31, 0x00	; 0
    1c0a:	80 81       	ld	r24, Z
    1c0c:	82 60       	ori	r24, 0x02	; 2
    1c0e:	80 83       	st	Z, r24
    1c10:	05 c0       	rjmp	.+10     	; 0x1c1c <__vector_9+0x86>
    1c12:	ef e6       	ldi	r30, 0x6F	; 111
    1c14:	f0 e0       	ldi	r31, 0x00	; 0
    1c16:	80 81       	ld	r24, Z
    1c18:	8d 7f       	andi	r24, 0xFD	; 253
    1c1a:	80 83       	st	Z, r24
    1c1c:	ff 91       	pop	r31
    1c1e:	ef 91       	pop	r30
    1c20:	9f 91       	pop	r25
    1c22:	8f 91       	pop	r24
    1c24:	7f 91       	pop	r23
    1c26:	6f 91       	pop	r22
    1c28:	5f 91       	pop	r21
    1c2a:	4f 91       	pop	r20
    1c2c:	3f 91       	pop	r19
    1c2e:	2f 91       	pop	r18
    1c30:	0f 90       	pop	r0
    1c32:	0f be       	out	0x3f, r0	; 63
    1c34:	0f 90       	pop	r0
    1c36:	1f 90       	pop	r1
    1c38:	18 95       	reti

00001c3a <__vector_7>:
    1c3a:	1f 92       	push	r1
    1c3c:	0f 92       	push	r0
    1c3e:	0f b6       	in	r0, 0x3f	; 63
    1c40:	0f 92       	push	r0
    1c42:	11 24       	eor	r1, r1
    1c44:	cf 92       	push	r12
    1c46:	df 92       	push	r13
    1c48:	ef 92       	push	r14
    1c4a:	ff 92       	push	r15
    1c4c:	2f 93       	push	r18
    1c4e:	3f 93       	push	r19
    1c50:	4f 93       	push	r20
    1c52:	5f 93       	push	r21
    1c54:	6f 93       	push	r22
    1c56:	7f 93       	push	r23
    1c58:	8f 93       	push	r24
    1c5a:	9f 93       	push	r25
    1c5c:	af 93       	push	r26
    1c5e:	bf 93       	push	r27
    1c60:	ef 93       	push	r30
    1c62:	ff 93       	push	r31
    1c64:	c0 90 50 01 	lds	r12, 0x0150	; 0x800150 <__data_end>
    1c68:	d0 90 51 01 	lds	r13, 0x0151	; 0x800151 <__data_end+0x1>
    1c6c:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c70:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c74:	b0 99       	sbic	0x16, 0	; 22
    1c76:	0f c0       	rjmp	.+30     	; 0x1c96 <__vector_7+0x5c>
    1c78:	0d 2c       	mov	r0, r13
    1c7a:	00 0c       	add	r0, r0
    1c7c:	ee 08       	sbc	r14, r14
    1c7e:	ff 08       	sbc	r15, r15
    1c80:	d6 01       	movw	r26, r12
    1c82:	99 27       	eor	r25, r25
    1c84:	88 27       	eor	r24, r24
    1c86:	69 01       	movw	r12, r18
    1c88:	e1 2c       	mov	r14, r1
    1c8a:	f1 2c       	mov	r15, r1
    1c8c:	c8 2a       	or	r12, r24
    1c8e:	d9 2a       	or	r13, r25
    1c90:	ea 2a       	or	r14, r26
    1c92:	fb 2a       	or	r15, r27
    1c94:	15 c0       	rjmp	.+42     	; 0x1cc0 <__vector_7+0x86>
    1c96:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c9a:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c9e:	8f ef       	ldi	r24, 0xFF	; 255
    1ca0:	c8 1a       	sub	r12, r24
    1ca2:	d8 0a       	sbc	r13, r24
    1ca4:	0d 2c       	mov	r0, r13
    1ca6:	00 0c       	add	r0, r0
    1ca8:	ee 08       	sbc	r14, r14
    1caa:	ff 08       	sbc	r15, r15
    1cac:	d6 01       	movw	r26, r12
    1cae:	99 27       	eor	r25, r25
    1cb0:	88 27       	eor	r24, r24
    1cb2:	69 01       	movw	r12, r18
    1cb4:	e1 2c       	mov	r14, r1
    1cb6:	f1 2c       	mov	r15, r1
    1cb8:	c8 2a       	or	r12, r24
    1cba:	d9 2a       	or	r13, r25
    1cbc:	ea 2a       	or	r14, r26
    1cbe:	fb 2a       	or	r15, r27
    1cc0:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <timerQ>
    1cc4:	f0 91 57 01 	lds	r31, 0x0157	; 0x800157 <timerQ+0x1>
    1cc8:	30 97       	sbiw	r30, 0x00	; 0
    1cca:	09 f4       	brne	.+2      	; 0x1cce <__vector_7+0x94>
    1ccc:	42 c0       	rjmp	.+132    	; 0x1d52 <__vector_7+0x118>
    1cce:	82 81       	ldd	r24, Z+2	; 0x02
    1cd0:	93 81       	ldd	r25, Z+3	; 0x03
    1cd2:	a4 81       	ldd	r26, Z+4	; 0x04
    1cd4:	b5 81       	ldd	r27, Z+5	; 0x05
    1cd6:	8c 19       	sub	r24, r12
    1cd8:	9d 09       	sbc	r25, r13
    1cda:	ae 09       	sbc	r26, r14
    1cdc:	bf 09       	sbc	r27, r15
    1cde:	18 16       	cp	r1, r24
    1ce0:	19 06       	cpc	r1, r25
    1ce2:	1a 06       	cpc	r1, r26
    1ce4:	1b 06       	cpc	r1, r27
    1ce6:	ec f1       	brlt	.+122    	; 0x1d62 <__vector_7+0x128>
    1ce8:	86 e5       	ldi	r24, 0x56	; 86
    1cea:	91 e0       	ldi	r25, 0x01	; 1
    1cec:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <dequeue>
    1cf0:	68 e5       	ldi	r22, 0x58	; 88
    1cf2:	71 e0       	ldi	r23, 0x01	; 1
    1cf4:	0e 94 2e 0d 	call	0x1a5c	; 0x1a5c <enqueueByDeadline>
    1cf8:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <timerQ>
    1cfc:	f0 91 57 01 	lds	r31, 0x0157	; 0x800157 <timerQ+0x1>
    1d00:	30 97       	sbiw	r30, 0x00	; 0
    1d02:	39 f1       	breq	.+78     	; 0x1d52 <__vector_7+0x118>
    1d04:	82 81       	ldd	r24, Z+2	; 0x02
    1d06:	93 81       	ldd	r25, Z+3	; 0x03
    1d08:	a4 81       	ldd	r26, Z+4	; 0x04
    1d0a:	b5 81       	ldd	r27, Z+5	; 0x05
    1d0c:	8c 19       	sub	r24, r12
    1d0e:	9d 09       	sbc	r25, r13
    1d10:	ae 09       	sbc	r26, r14
    1d12:	bf 09       	sbc	r27, r15
    1d14:	18 16       	cp	r1, r24
    1d16:	19 06       	cpc	r1, r25
    1d18:	1a 06       	cpc	r1, r26
    1d1a:	1b 06       	cpc	r1, r27
    1d1c:	2c f7       	brge	.-54     	; 0x1ce8 <__vector_7+0xae>
    1d1e:	21 c0       	rjmp	.+66     	; 0x1d62 <__vector_7+0x128>
    1d20:	9c 01       	movw	r18, r24
    1d22:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d26:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d2a:	84 1b       	sub	r24, r20
    1d2c:	95 0b       	sbc	r25, r21
    1d2e:	01 97       	sbiw	r24, 0x01	; 1
    1d30:	31 f4       	brne	.+12     	; 0x1d3e <__vector_7+0x104>
    1d32:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d36:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d3a:	2f 5f       	subi	r18, 0xFF	; 255
    1d3c:	3f 4f       	sbci	r19, 0xFF	; 255
    1d3e:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1d42:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1d46:	ef e6       	ldi	r30, 0x6F	; 111
    1d48:	f0 e0       	ldi	r31, 0x00	; 0
    1d4a:	80 81       	ld	r24, Z
    1d4c:	82 60       	ori	r24, 0x02	; 2
    1d4e:	80 83       	st	Z, r24
    1d50:	05 c0       	rjmp	.+10     	; 0x1d5c <__vector_7+0x122>
    1d52:	ef e6       	ldi	r30, 0x6F	; 111
    1d54:	f0 e0       	ldi	r31, 0x00	; 0
    1d56:	80 81       	ld	r24, Z
    1d58:	8d 7f       	andi	r24, 0xFD	; 253
    1d5a:	80 83       	st	Z, r24
    1d5c:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    1d60:	0c c0       	rjmp	.+24     	; 0x1d7a <__vector_7+0x140>
    1d62:	82 81       	ldd	r24, Z+2	; 0x02
    1d64:	93 81       	ldd	r25, Z+3	; 0x03
    1d66:	a4 81       	ldd	r26, Z+4	; 0x04
    1d68:	b5 81       	ldd	r27, Z+5	; 0x05
    1d6a:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    1d6e:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1d72:	2a 17       	cp	r18, r26
    1d74:	3b 07       	cpc	r19, r27
    1d76:	69 f7       	brne	.-38     	; 0x1d52 <__vector_7+0x118>
    1d78:	d3 cf       	rjmp	.-90     	; 0x1d20 <__vector_7+0xe6>
    1d7a:	ff 91       	pop	r31
    1d7c:	ef 91       	pop	r30
    1d7e:	bf 91       	pop	r27
    1d80:	af 91       	pop	r26
    1d82:	9f 91       	pop	r25
    1d84:	8f 91       	pop	r24
    1d86:	7f 91       	pop	r23
    1d88:	6f 91       	pop	r22
    1d8a:	5f 91       	pop	r21
    1d8c:	4f 91       	pop	r20
    1d8e:	3f 91       	pop	r19
    1d90:	2f 91       	pop	r18
    1d92:	ff 90       	pop	r15
    1d94:	ef 90       	pop	r14
    1d96:	df 90       	pop	r13
    1d98:	cf 90       	pop	r12
    1d9a:	0f 90       	pop	r0
    1d9c:	0f be       	out	0x3f, r0	; 63
    1d9e:	0f 90       	pop	r0
    1da0:	1f 90       	pop	r1
    1da2:	18 95       	reti

00001da4 <async>:
    1da4:	3f 92       	push	r3
    1da6:	4f 92       	push	r4
    1da8:	5f 92       	push	r5
    1daa:	6f 92       	push	r6
    1dac:	7f 92       	push	r7
    1dae:	8f 92       	push	r8
    1db0:	9f 92       	push	r9
    1db2:	af 92       	push	r10
    1db4:	bf 92       	push	r11
    1db6:	cf 92       	push	r12
    1db8:	df 92       	push	r13
    1dba:	ef 92       	push	r14
    1dbc:	ff 92       	push	r15
    1dbe:	0f 93       	push	r16
    1dc0:	1f 93       	push	r17
    1dc2:	cf 93       	push	r28
    1dc4:	df 93       	push	r29
    1dc6:	2b 01       	movw	r4, r22
    1dc8:	3c 01       	movw	r6, r24
    1dca:	49 01       	movw	r8, r18
    1dcc:	5a 01       	movw	r10, r20
    1dce:	8f b7       	in	r24, 0x3f	; 63
    1dd0:	80 78       	andi	r24, 0x80	; 128
    1dd2:	38 2e       	mov	r3, r24
    1dd4:	f8 94       	cli
    1dd6:	86 e0       	ldi	r24, 0x06	; 6
    1dd8:	91 e0       	ldi	r25, 0x01	; 1
    1dda:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <dequeue>
    1dde:	ec 01       	movw	r28, r24
    1de0:	1b 87       	std	Y+11, r17	; 0x0b
    1de2:	0a 87       	std	Y+10, r16	; 0x0a
    1de4:	fd 86       	std	Y+13, r15	; 0x0d
    1de6:	ec 86       	std	Y+12, r14	; 0x0c
    1de8:	df 86       	std	Y+15, r13	; 0x0f
    1dea:	ce 86       	std	Y+14, r12	; 0x0e
    1dec:	33 20       	and	r3, r3
    1dee:	61 f0       	breq	.+24     	; 0x1e08 <async+0x64>
    1df0:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1df4:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1df8:	02 80       	ldd	r0, Z+2	; 0x02
    1dfa:	f3 81       	ldd	r31, Z+3	; 0x03
    1dfc:	e0 2d       	mov	r30, r0
    1dfe:	82 81       	ldd	r24, Z+2	; 0x02
    1e00:	93 81       	ldd	r25, Z+3	; 0x03
    1e02:	a4 81       	ldd	r26, Z+4	; 0x04
    1e04:	b5 81       	ldd	r27, Z+5	; 0x05
    1e06:	08 c0       	rjmp	.+16     	; 0x1e18 <async+0x74>
    1e08:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <timestamp>
    1e0c:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <timestamp+0x1>
    1e10:	a0 91 54 01 	lds	r26, 0x0154	; 0x800154 <timestamp+0x2>
    1e14:	b0 91 55 01 	lds	r27, 0x0155	; 0x800155 <timestamp+0x3>
    1e18:	48 0e       	add	r4, r24
    1e1a:	59 1e       	adc	r5, r25
    1e1c:	6a 1e       	adc	r6, r26
    1e1e:	7b 1e       	adc	r7, r27
    1e20:	4a 82       	std	Y+2, r4	; 0x02
    1e22:	5b 82       	std	Y+3, r5	; 0x03
    1e24:	6c 82       	std	Y+4, r6	; 0x04
    1e26:	7d 82       	std	Y+5, r7	; 0x05
    1e28:	18 14       	cp	r1, r8
    1e2a:	19 04       	cpc	r1, r9
    1e2c:	1a 04       	cpc	r1, r10
    1e2e:	1b 04       	cpc	r1, r11
    1e30:	44 f0       	brlt	.+16     	; 0x1e42 <async+0x9e>
    1e32:	0f 2e       	mov	r0, r31
    1e34:	88 24       	eor	r8, r8
    1e36:	8a 94       	dec	r8
    1e38:	98 2c       	mov	r9, r8
    1e3a:	a8 2c       	mov	r10, r8
    1e3c:	ff e7       	ldi	r31, 0x7F	; 127
    1e3e:	bf 2e       	mov	r11, r31
    1e40:	f0 2d       	mov	r31, r0
    1e42:	84 0c       	add	r8, r4
    1e44:	95 1c       	adc	r9, r5
    1e46:	a6 1c       	adc	r10, r6
    1e48:	b7 1c       	adc	r11, r7
    1e4a:	8e 82       	std	Y+6, r8	; 0x06
    1e4c:	9f 82       	std	Y+7, r9	; 0x07
    1e4e:	a8 86       	std	Y+8, r10	; 0x08
    1e50:	b9 86       	std	Y+9, r11	; 0x09
    1e52:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <__data_end>
    1e56:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <__data_end+0x1>
    1e5a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1e5e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1e62:	b0 99       	sbic	0x16, 0	; 22
    1e64:	0e c0       	rjmp	.+28     	; 0x1e82 <async+0xde>
    1e66:	09 2e       	mov	r0, r25
    1e68:	00 0c       	add	r0, r0
    1e6a:	aa 0b       	sbc	r26, r26
    1e6c:	bb 0b       	sbc	r27, r27
    1e6e:	dc 01       	movw	r26, r24
    1e70:	99 27       	eor	r25, r25
    1e72:	88 27       	eor	r24, r24
    1e74:	60 e0       	ldi	r22, 0x00	; 0
    1e76:	70 e0       	ldi	r23, 0x00	; 0
    1e78:	84 2b       	or	r24, r20
    1e7a:	95 2b       	or	r25, r21
    1e7c:	a6 2b       	or	r26, r22
    1e7e:	b7 2b       	or	r27, r23
    1e80:	13 c0       	rjmp	.+38     	; 0x1ea8 <async+0x104>
    1e82:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1e86:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1e8a:	01 96       	adiw	r24, 0x01	; 1
    1e8c:	09 2e       	mov	r0, r25
    1e8e:	00 0c       	add	r0, r0
    1e90:	aa 0b       	sbc	r26, r26
    1e92:	bb 0b       	sbc	r27, r27
    1e94:	dc 01       	movw	r26, r24
    1e96:	99 27       	eor	r25, r25
    1e98:	88 27       	eor	r24, r24
    1e9a:	a9 01       	movw	r20, r18
    1e9c:	60 e0       	ldi	r22, 0x00	; 0
    1e9e:	70 e0       	ldi	r23, 0x00	; 0
    1ea0:	84 2b       	or	r24, r20
    1ea2:	95 2b       	or	r25, r21
    1ea4:	a6 2b       	or	r26, r22
    1ea6:	b7 2b       	or	r27, r23
    1ea8:	48 1a       	sub	r4, r24
    1eaa:	59 0a       	sbc	r5, r25
    1eac:	6a 0a       	sbc	r6, r26
    1eae:	7b 0a       	sbc	r7, r27
    1eb0:	14 14       	cp	r1, r4
    1eb2:	15 04       	cpc	r1, r5
    1eb4:	16 04       	cpc	r1, r6
    1eb6:	17 04       	cpc	r1, r7
    1eb8:	ac f5       	brge	.+106    	; 0x1f24 <async+0x180>
    1eba:	66 e5       	ldi	r22, 0x56	; 86
    1ebc:	71 e0       	ldi	r23, 0x01	; 1
    1ebe:	ce 01       	movw	r24, r28
    1ec0:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <enqueueByBaseline>
    1ec4:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <timerQ>
    1ec8:	f0 91 57 01 	lds	r31, 0x0157	; 0x800157 <timerQ+0x1>
    1ecc:	30 97       	sbiw	r30, 0x00	; 0
    1ece:	21 f1       	breq	.+72     	; 0x1f18 <async+0x174>
    1ed0:	82 81       	ldd	r24, Z+2	; 0x02
    1ed2:	93 81       	ldd	r25, Z+3	; 0x03
    1ed4:	a4 81       	ldd	r26, Z+4	; 0x04
    1ed6:	b5 81       	ldd	r27, Z+5	; 0x05
    1ed8:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    1edc:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1ee0:	2a 17       	cp	r18, r26
    1ee2:	3b 07       	cpc	r19, r27
    1ee4:	c9 f4       	brne	.+50     	; 0x1f18 <async+0x174>
    1ee6:	9c 01       	movw	r18, r24
    1ee8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1eec:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ef0:	84 1b       	sub	r24, r20
    1ef2:	95 0b       	sbc	r25, r21
    1ef4:	01 97       	sbiw	r24, 0x01	; 1
    1ef6:	31 f4       	brne	.+12     	; 0x1f04 <async+0x160>
    1ef8:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1efc:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1f00:	2f 5f       	subi	r18, 0xFF	; 255
    1f02:	3f 4f       	sbci	r19, 0xFF	; 255
    1f04:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1f08:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1f0c:	ef e6       	ldi	r30, 0x6F	; 111
    1f0e:	f0 e0       	ldi	r31, 0x00	; 0
    1f10:	80 81       	ld	r24, Z
    1f12:	82 60       	ori	r24, 0x02	; 2
    1f14:	80 83       	st	Z, r24
    1f16:	41 c0       	rjmp	.+130    	; 0x1f9a <async+0x1f6>
    1f18:	ef e6       	ldi	r30, 0x6F	; 111
    1f1a:	f0 e0       	ldi	r31, 0x00	; 0
    1f1c:	80 81       	ld	r24, Z
    1f1e:	8d 7f       	andi	r24, 0xFD	; 253
    1f20:	80 83       	st	Z, r24
    1f22:	3b c0       	rjmp	.+118    	; 0x1f9a <async+0x1f6>
    1f24:	68 e5       	ldi	r22, 0x58	; 88
    1f26:	71 e0       	ldi	r23, 0x01	; 1
    1f28:	ce 01       	movw	r24, r28
    1f2a:	0e 94 2e 0d 	call	0x1a5c	; 0x1a5c <enqueueByDeadline>
    1f2e:	33 20       	and	r3, r3
    1f30:	b9 f1       	breq	.+110    	; 0x1fa0 <async+0x1fc>
    1f32:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1f36:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1f3a:	00 97       	sbiw	r24, 0x00	; 0
    1f3c:	81 f1       	breq	.+96     	; 0x1f9e <async+0x1fa>
    1f3e:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1f42:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1f46:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <msgQ>
    1f4a:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <msgQ+0x1>
    1f4e:	02 81       	ldd	r16, Z+2	; 0x02
    1f50:	13 81       	ldd	r17, Z+3	; 0x03
    1f52:	d9 01       	movw	r26, r18
    1f54:	16 96       	adiw	r26, 0x06	; 6
    1f56:	4d 91       	ld	r20, X+
    1f58:	5d 91       	ld	r21, X+
    1f5a:	6d 91       	ld	r22, X+
    1f5c:	7c 91       	ld	r23, X
    1f5e:	19 97       	sbiw	r26, 0x09	; 9
    1f60:	d8 01       	movw	r26, r16
    1f62:	16 96       	adiw	r26, 0x06	; 6
    1f64:	0d 91       	ld	r16, X+
    1f66:	1d 91       	ld	r17, X+
    1f68:	2d 91       	ld	r18, X+
    1f6a:	3c 91       	ld	r19, X
    1f6c:	19 97       	sbiw	r26, 0x09	; 9
    1f6e:	40 1b       	sub	r20, r16
    1f70:	51 0b       	sbc	r21, r17
    1f72:	62 0b       	sbc	r22, r18
    1f74:	73 0b       	sbc	r23, r19
    1f76:	9a f4       	brpl	.+38     	; 0x1f9e <async+0x1fa>
    1f78:	dc 01       	movw	r26, r24
    1f7a:	2d 91       	ld	r18, X+
    1f7c:	3c 91       	ld	r19, X
    1f7e:	11 97       	sbiw	r26, 0x01	; 1
    1f80:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
    1f84:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
    1f88:	ed 93       	st	X+, r30
    1f8a:	fc 93       	st	X, r31
    1f8c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
    1f90:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
    1f94:	0e 94 3b 05 	call	0xa76	; 0xa76 <dispatch>
    1f98:	02 c0       	rjmp	.+4      	; 0x1f9e <async+0x1fa>
    1f9a:	33 20       	and	r3, r3
    1f9c:	09 f0       	breq	.+2      	; 0x1fa0 <async+0x1fc>
    1f9e:	78 94       	sei
    1fa0:	ce 01       	movw	r24, r28
    1fa2:	df 91       	pop	r29
    1fa4:	cf 91       	pop	r28
    1fa6:	1f 91       	pop	r17
    1fa8:	0f 91       	pop	r16
    1faa:	ff 90       	pop	r15
    1fac:	ef 90       	pop	r14
    1fae:	df 90       	pop	r13
    1fb0:	cf 90       	pop	r12
    1fb2:	bf 90       	pop	r11
    1fb4:	af 90       	pop	r10
    1fb6:	9f 90       	pop	r9
    1fb8:	8f 90       	pop	r8
    1fba:	7f 90       	pop	r7
    1fbc:	6f 90       	pop	r6
    1fbe:	5f 90       	pop	r5
    1fc0:	4f 90       	pop	r4
    1fc2:	3f 90       	pop	r3
    1fc4:	08 95       	ret

00001fc6 <sync>:
    1fc6:	cf 92       	push	r12
    1fc8:	df 92       	push	r13
    1fca:	ef 92       	push	r14
    1fcc:	ff 92       	push	r15
    1fce:	0f 93       	push	r16
    1fd0:	1f 93       	push	r17
    1fd2:	cf 93       	push	r28
    1fd4:	df 93       	push	r29
    1fd6:	ec 01       	movw	r28, r24
    1fd8:	7b 01       	movw	r14, r22
    1fda:	6a 01       	movw	r12, r20
    1fdc:	1f b7       	in	r17, 0x3f	; 63
    1fde:	10 78       	andi	r17, 0x80	; 128
    1fe0:	f8 94       	cli
    1fe2:	a8 81       	ld	r26, Y
    1fe4:	b9 81       	ldd	r27, Y+1	; 0x01
    1fe6:	10 97       	sbiw	r26, 0x00	; 0
    1fe8:	61 f1       	breq	.+88     	; 0x2042 <sync+0x7c>
    1fea:	14 96       	adiw	r26, 0x04	; 4
    1fec:	ed 91       	ld	r30, X+
    1fee:	fc 91       	ld	r31, X
    1ff0:	15 97       	sbiw	r26, 0x05	; 5
    1ff2:	30 97       	sbiw	r30, 0x00	; 0
    1ff4:	41 f0       	breq	.+16     	; 0x2006 <sync+0x40>
    1ff6:	a0 81       	ld	r26, Z
    1ff8:	b1 81       	ldd	r27, Z+1	; 0x01
    1ffa:	14 96       	adiw	r26, 0x04	; 4
    1ffc:	ed 91       	ld	r30, X+
    1ffe:	fc 91       	ld	r31, X
    2000:	15 97       	sbiw	r26, 0x05	; 5
    2002:	30 97       	sbiw	r30, 0x00	; 0
    2004:	c1 f7       	brne	.-16     	; 0x1ff6 <sync+0x30>
    2006:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    200a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    200e:	2a 17       	cp	r18, r26
    2010:	3b 07       	cpc	r19, r27
    2012:	21 f0       	breq	.+8      	; 0x201c <sync+0x56>
    2014:	11 23       	and	r17, r17
    2016:	09 f4       	brne	.+2      	; 0x201a <sync+0x54>
    2018:	3d c0       	rjmp	.+122    	; 0x2094 <sync+0xce>
    201a:	07 c0       	rjmp	.+14     	; 0x202a <sync+0x64>
    201c:	11 23       	and	r17, r17
    201e:	09 f4       	brne	.+2      	; 0x2022 <sync+0x5c>
    2020:	3c c0       	rjmp	.+120    	; 0x209a <sync+0xd4>
    2022:	78 94       	sei
    2024:	8f ef       	ldi	r24, 0xFF	; 255
    2026:	9f ef       	ldi	r25, 0xFF	; 255
    2028:	52 c0       	rjmp	.+164    	; 0x20ce <sync+0x108>
    202a:	8a 81       	ldd	r24, Y+2	; 0x02
    202c:	9b 81       	ldd	r25, Y+3	; 0x03
    202e:	00 97       	sbiw	r24, 0x00	; 0
    2030:	d1 f1       	breq	.+116    	; 0x20a6 <sync+0xe0>
    2032:	fc 01       	movw	r30, r24
    2034:	15 82       	std	Z+5, r1	; 0x05
    2036:	14 82       	std	Z+4, r1	; 0x04
    2038:	36 c0       	rjmp	.+108    	; 0x20a6 <sync+0xe0>
    203a:	78 94       	sei
    203c:	80 e0       	ldi	r24, 0x00	; 0
    203e:	90 e0       	ldi	r25, 0x00	; 0
    2040:	46 c0       	rjmp	.+140    	; 0x20ce <sync+0x108>
    2042:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2046:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    204a:	99 83       	std	Y+1, r25	; 0x01
    204c:	88 83       	st	Y, r24
    204e:	11 23       	and	r17, r17
    2050:	29 f0       	breq	.+10     	; 0x205c <sync+0x96>
    2052:	8a 81       	ldd	r24, Y+2	; 0x02
    2054:	9b 81       	ldd	r25, Y+3	; 0x03
    2056:	01 97       	sbiw	r24, 0x01	; 1
    2058:	09 f0       	breq	.+2      	; 0x205c <sync+0x96>
    205a:	78 94       	sei
    205c:	b6 01       	movw	r22, r12
    205e:	ce 01       	movw	r24, r28
    2060:	f7 01       	movw	r30, r14
    2062:	09 95       	icall
    2064:	f8 2e       	mov	r15, r24
    2066:	09 2f       	mov	r16, r25
    2068:	8f b7       	in	r24, 0x3f	; 63
    206a:	f8 94       	cli
    206c:	19 82       	std	Y+1, r1	; 0x01
    206e:	18 82       	st	Y, r1
    2070:	8a 81       	ldd	r24, Y+2	; 0x02
    2072:	9b 81       	ldd	r25, Y+3	; 0x03
    2074:	82 30       	cpi	r24, 0x02	; 2
    2076:	91 05       	cpc	r25, r1
    2078:	38 f0       	brcs	.+14     	; 0x2088 <sync+0xc2>
    207a:	1b 82       	std	Y+3, r1	; 0x03
    207c:	1a 82       	std	Y+2, r1	; 0x02
    207e:	fc 01       	movw	r30, r24
    2080:	15 82       	std	Z+5, r1	; 0x05
    2082:	14 82       	std	Z+4, r1	; 0x04
    2084:	0e 94 3b 05 	call	0xa76	; 0xa76 <dispatch>
    2088:	11 23       	and	r17, r17
    208a:	51 f0       	breq	.+20     	; 0x20a0 <sync+0xda>
    208c:	78 94       	sei
    208e:	8f 2d       	mov	r24, r15
    2090:	90 2f       	mov	r25, r16
    2092:	1d c0       	rjmp	.+58     	; 0x20ce <sync+0x108>
    2094:	8f ef       	ldi	r24, 0xFF	; 255
    2096:	9f ef       	ldi	r25, 0xFF	; 255
    2098:	1a c0       	rjmp	.+52     	; 0x20ce <sync+0x108>
    209a:	8f ef       	ldi	r24, 0xFF	; 255
    209c:	9f ef       	ldi	r25, 0xFF	; 255
    209e:	17 c0       	rjmp	.+46     	; 0x20ce <sync+0x108>
    20a0:	8f 2d       	mov	r24, r15
    20a2:	90 2f       	mov	r25, r16
    20a4:	14 c0       	rjmp	.+40     	; 0x20ce <sync+0x108>
    20a6:	3b 83       	std	Y+3, r19	; 0x03
    20a8:	2a 83       	std	Y+2, r18	; 0x02
    20aa:	f9 01       	movw	r30, r18
    20ac:	d5 83       	std	Z+5, r29	; 0x05
    20ae:	c4 83       	std	Z+4, r28	; 0x04
    20b0:	cd 01       	movw	r24, r26
    20b2:	0e 94 3b 05 	call	0xa76	; 0xa76 <dispatch>
    20b6:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    20ba:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    20be:	82 81       	ldd	r24, Z+2	; 0x02
    20c0:	93 81       	ldd	r25, Z+3	; 0x03
    20c2:	89 2b       	or	r24, r25
    20c4:	09 f4       	brne	.+2      	; 0x20c8 <sync+0x102>
    20c6:	b9 cf       	rjmp	.-142    	; 0x203a <sync+0x74>
    20c8:	f9 83       	std	Y+1, r31	; 0x01
    20ca:	e8 83       	st	Y, r30
    20cc:	c2 cf       	rjmp	.-124    	; 0x2052 <sync+0x8c>
    20ce:	df 91       	pop	r29
    20d0:	cf 91       	pop	r28
    20d2:	1f 91       	pop	r17
    20d4:	0f 91       	pop	r16
    20d6:	ff 90       	pop	r15
    20d8:	ef 90       	pop	r14
    20da:	df 90       	pop	r13
    20dc:	cf 90       	pop	r12
    20de:	08 95       	ret

000020e0 <run>:
    20e0:	00 91 00 01 	lds	r16, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    20e4:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    20e8:	88 e5       	ldi	r24, 0x58	; 88
    20ea:	91 e0       	ldi	r25, 0x01	; 1
    20ec:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <dequeue>
    20f0:	ec 01       	movw	r28, r24
    20f2:	d8 01       	movw	r26, r16
    20f4:	13 96       	adiw	r26, 0x03	; 3
    20f6:	9c 93       	st	X, r25
    20f8:	8e 93       	st	-X, r24
    20fa:	12 97       	sbiw	r26, 0x02	; 2
    20fc:	78 94       	sei
    20fe:	4e 85       	ldd	r20, Y+14	; 0x0e
    2100:	5f 85       	ldd	r21, Y+15	; 0x0f
    2102:	6c 85       	ldd	r22, Y+12	; 0x0c
    2104:	7d 85       	ldd	r23, Y+13	; 0x0d
    2106:	8a 85       	ldd	r24, Y+10	; 0x0a
    2108:	9b 85       	ldd	r25, Y+11	; 0x0b
    210a:	0e 94 e3 0f 	call	0x1fc6	; 0x1fc6 <sync>
    210e:	8f b7       	in	r24, 0x3f	; 63
    2110:	f8 94       	cli
    2112:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <msgPool>
    2116:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <msgPool+0x1>
    211a:	99 83       	std	Y+1, r25	; 0x01
    211c:	88 83       	st	Y, r24
    211e:	d0 93 07 01 	sts	0x0107, r29	; 0x800107 <msgPool+0x1>
    2122:	c0 93 06 01 	sts	0x0106, r28	; 0x800106 <msgPool>
    2126:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    212a:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    212e:	00 81       	ld	r16, Z
    2130:	11 81       	ldd	r17, Z+1	; 0x01
    2132:	e8 01       	movw	r28, r16
    2134:	2a 81       	ldd	r18, Y+2	; 0x02
    2136:	3b 81       	ldd	r19, Y+3	; 0x03
    2138:	a0 91 58 01 	lds	r26, 0x0158	; 0x800158 <msgQ>
    213c:	b0 91 59 01 	lds	r27, 0x0159	; 0x800159 <msgQ+0x1>
    2140:	10 97       	sbiw	r26, 0x00	; 0
    2142:	c1 f0       	breq	.+48     	; 0x2174 <run+0x94>
    2144:	21 15       	cp	r18, r1
    2146:	31 05       	cpc	r19, r1
    2148:	59 f2       	breq	.-106    	; 0x20e0 <run>
    214a:	16 96       	adiw	r26, 0x06	; 6
    214c:	8d 91       	ld	r24, X+
    214e:	9d 91       	ld	r25, X+
    2150:	0d 90       	ld	r0, X+
    2152:	bc 91       	ld	r27, X
    2154:	a0 2d       	mov	r26, r0
    2156:	e9 01       	movw	r28, r18
    2158:	4e 81       	ldd	r20, Y+6	; 0x06
    215a:	5f 81       	ldd	r21, Y+7	; 0x07
    215c:	68 85       	ldd	r22, Y+8	; 0x08
    215e:	79 85       	ldd	r23, Y+9	; 0x09
    2160:	84 1b       	sub	r24, r20
    2162:	95 0b       	sbc	r25, r21
    2164:	a6 0b       	sbc	r26, r22
    2166:	b7 0b       	sbc	r27, r23
    2168:	18 16       	cp	r1, r24
    216a:	19 06       	cpc	r1, r25
    216c:	1a 06       	cpc	r1, r26
    216e:	1b 06       	cpc	r1, r27
    2170:	0c f0       	brlt	.+2      	; 0x2174 <run+0x94>
    2172:	b6 cf       	rjmp	.-148    	; 0x20e0 <run>
    2174:	10 93 03 01 	sts	0x0103, r17	; 0x800103 <activeStack+0x1>
    2178:	00 93 02 01 	sts	0x0102, r16	; 0x800102 <activeStack>
    217c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    2180:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    2184:	91 83       	std	Z+1, r25	; 0x01
    2186:	80 83       	st	Z, r24
    2188:	f0 93 05 01 	sts	0x0105, r31	; 0x800105 <threadPool+0x1>
    218c:	e0 93 04 01 	sts	0x0104, r30	; 0x800104 <threadPool>
    2190:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <activeStack>
    2194:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <activeStack+0x1>
    2198:	14 96       	adiw	r26, 0x04	; 4
    219a:	ed 91       	ld	r30, X+
    219c:	fc 91       	ld	r31, X
    219e:	15 97       	sbiw	r26, 0x05	; 5
    21a0:	30 97       	sbiw	r30, 0x00	; 0
    21a2:	41 f0       	breq	.+16     	; 0x21b4 <run+0xd4>
    21a4:	a0 81       	ld	r26, Z
    21a6:	b1 81       	ldd	r27, Z+1	; 0x01
    21a8:	14 96       	adiw	r26, 0x04	; 4
    21aa:	ed 91       	ld	r30, X+
    21ac:	fc 91       	ld	r31, X
    21ae:	15 97       	sbiw	r26, 0x05	; 5
    21b0:	30 97       	sbiw	r30, 0x00	; 0
    21b2:	c1 f7       	brne	.-16     	; 0x21a4 <run+0xc4>
    21b4:	cd 01       	movw	r24, r26
    21b6:	0e 94 3b 05 	call	0xa76	; 0xa76 <dispatch>
    21ba:	92 cf       	rjmp	.-220    	; 0x20e0 <run>

000021bc <install>:
    21bc:	42 31       	cpi	r20, 0x12	; 18
    21be:	b8 f4       	brcc	.+46     	; 0x21ee <install+0x32>
    21c0:	2f b7       	in	r18, 0x3f	; 63
    21c2:	f8 94       	cli
    21c4:	50 e0       	ldi	r21, 0x00	; 0
    21c6:	44 0f       	add	r20, r20
    21c8:	55 1f       	adc	r21, r21
    21ca:	fa 01       	movw	r30, r20
    21cc:	e6 5a       	subi	r30, 0xA6	; 166
    21ce:	fe 4f       	sbci	r31, 0xFE	; 254
    21d0:	91 83       	std	Z+1, r25	; 0x01
    21d2:	80 83       	st	Z, r24
    21d4:	fa 01       	movw	r30, r20
    21d6:	ee 50       	subi	r30, 0x0E	; 14
    21d8:	fe 4f       	sbci	r31, 0xFE	; 254
    21da:	71 83       	std	Z+1, r23	; 0x01
    21dc:	60 83       	st	Z, r22
    21de:	41 e0       	ldi	r20, 0x01	; 1
    21e0:	50 e0       	ldi	r21, 0x00	; 0
    21e2:	fc 01       	movw	r30, r24
    21e4:	53 83       	std	Z+3, r21	; 0x03
    21e6:	42 83       	std	Z+2, r20	; 0x02
    21e8:	22 23       	and	r18, r18
    21ea:	0c f4       	brge	.+2      	; 0x21ee <install+0x32>
    21ec:	78 94       	sei
    21ee:	08 95       	ret

000021f0 <tinytimber>:
    21f0:	8c 01       	movw	r16, r24
    21f2:	7b 01       	movw	r14, r22
    21f4:	6a 01       	movw	r12, r20
    21f6:	8f b7       	in	r24, 0x3f	; 63
    21f8:	f8 94       	cli
    21fa:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <initialize>
    21fe:	78 94       	sei
    2200:	e1 14       	cp	r14, r1
    2202:	f1 04       	cpc	r15, r1
    2204:	41 f0       	breq	.+16     	; 0x2216 <tinytimber+0x26>
    2206:	20 e0       	ldi	r18, 0x00	; 0
    2208:	30 e0       	ldi	r19, 0x00	; 0
    220a:	a9 01       	movw	r20, r18
    220c:	60 e0       	ldi	r22, 0x00	; 0
    220e:	70 e0       	ldi	r23, 0x00	; 0
    2210:	cb 01       	movw	r24, r22
    2212:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <async>
    2216:	8f b7       	in	r24, 0x3f	; 63
    2218:	f8 94       	cli
    221a:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    221e:	78 94       	sei
    2220:	81 e0       	ldi	r24, 0x01	; 1
    2222:	83 bf       	out	0x33, r24	; 51
    2224:	88 95       	sleep
    2226:	fd cf       	rjmp	.-6      	; 0x2222 <tinytimber+0x32>

00002228 <__divmodsi4>:
    2228:	05 2e       	mov	r0, r21
    222a:	97 fb       	bst	r25, 7
    222c:	1e f4       	brtc	.+6      	; 0x2234 <__divmodsi4+0xc>
    222e:	00 94       	com	r0
    2230:	0e 94 2b 11 	call	0x2256	; 0x2256 <__negsi2>
    2234:	57 fd       	sbrc	r21, 7
    2236:	07 d0       	rcall	.+14     	; 0x2246 <__divmodsi4_neg2>
    2238:	0e 94 3a 11 	call	0x2274	; 0x2274 <__udivmodsi4>
    223c:	07 fc       	sbrc	r0, 7
    223e:	03 d0       	rcall	.+6      	; 0x2246 <__divmodsi4_neg2>
    2240:	4e f4       	brtc	.+18     	; 0x2254 <__divmodsi4_exit>
    2242:	0c 94 2b 11 	jmp	0x2256	; 0x2256 <__negsi2>

00002246 <__divmodsi4_neg2>:
    2246:	50 95       	com	r21
    2248:	40 95       	com	r20
    224a:	30 95       	com	r19
    224c:	21 95       	neg	r18
    224e:	3f 4f       	sbci	r19, 0xFF	; 255
    2250:	4f 4f       	sbci	r20, 0xFF	; 255
    2252:	5f 4f       	sbci	r21, 0xFF	; 255

00002254 <__divmodsi4_exit>:
    2254:	08 95       	ret

00002256 <__negsi2>:
    2256:	90 95       	com	r25
    2258:	80 95       	com	r24
    225a:	70 95       	com	r23
    225c:	61 95       	neg	r22
    225e:	7f 4f       	sbci	r23, 0xFF	; 255
    2260:	8f 4f       	sbci	r24, 0xFF	; 255
    2262:	9f 4f       	sbci	r25, 0xFF	; 255
    2264:	08 95       	ret

00002266 <__usmulhisi3>:
    2266:	0e 94 5c 11 	call	0x22b8	; 0x22b8 <__umulhisi3>

0000226a <__usmulhisi3_tail>:
    226a:	b7 ff       	sbrs	r27, 7
    226c:	08 95       	ret
    226e:	82 1b       	sub	r24, r18
    2270:	93 0b       	sbc	r25, r19
    2272:	08 95       	ret

00002274 <__udivmodsi4>:
    2274:	a1 e2       	ldi	r26, 0x21	; 33
    2276:	1a 2e       	mov	r1, r26
    2278:	aa 1b       	sub	r26, r26
    227a:	bb 1b       	sub	r27, r27
    227c:	fd 01       	movw	r30, r26
    227e:	0d c0       	rjmp	.+26     	; 0x229a <__udivmodsi4_ep>

00002280 <__udivmodsi4_loop>:
    2280:	aa 1f       	adc	r26, r26
    2282:	bb 1f       	adc	r27, r27
    2284:	ee 1f       	adc	r30, r30
    2286:	ff 1f       	adc	r31, r31
    2288:	a2 17       	cp	r26, r18
    228a:	b3 07       	cpc	r27, r19
    228c:	e4 07       	cpc	r30, r20
    228e:	f5 07       	cpc	r31, r21
    2290:	20 f0       	brcs	.+8      	; 0x229a <__udivmodsi4_ep>
    2292:	a2 1b       	sub	r26, r18
    2294:	b3 0b       	sbc	r27, r19
    2296:	e4 0b       	sbc	r30, r20
    2298:	f5 0b       	sbc	r31, r21

0000229a <__udivmodsi4_ep>:
    229a:	66 1f       	adc	r22, r22
    229c:	77 1f       	adc	r23, r23
    229e:	88 1f       	adc	r24, r24
    22a0:	99 1f       	adc	r25, r25
    22a2:	1a 94       	dec	r1
    22a4:	69 f7       	brne	.-38     	; 0x2280 <__udivmodsi4_loop>
    22a6:	60 95       	com	r22
    22a8:	70 95       	com	r23
    22aa:	80 95       	com	r24
    22ac:	90 95       	com	r25
    22ae:	9b 01       	movw	r18, r22
    22b0:	ac 01       	movw	r20, r24
    22b2:	bd 01       	movw	r22, r26
    22b4:	cf 01       	movw	r24, r30
    22b6:	08 95       	ret

000022b8 <__umulhisi3>:
    22b8:	a2 9f       	mul	r26, r18
    22ba:	b0 01       	movw	r22, r0
    22bc:	b3 9f       	mul	r27, r19
    22be:	c0 01       	movw	r24, r0
    22c0:	a3 9f       	mul	r26, r19
    22c2:	70 0d       	add	r23, r0
    22c4:	81 1d       	adc	r24, r1
    22c6:	11 24       	eor	r1, r1
    22c8:	91 1d       	adc	r25, r1
    22ca:	b2 9f       	mul	r27, r18
    22cc:	70 0d       	add	r23, r0
    22ce:	81 1d       	adc	r24, r1
    22d0:	11 24       	eor	r1, r1
    22d2:	91 1d       	adc	r25, r1
    22d4:	08 95       	ret

000022d6 <setjmp>:
    22d6:	dc 01       	movw	r26, r24
    22d8:	2d 92       	st	X+, r2
    22da:	3d 92       	st	X+, r3
    22dc:	4d 92       	st	X+, r4
    22de:	5d 92       	st	X+, r5
    22e0:	6d 92       	st	X+, r6
    22e2:	7d 92       	st	X+, r7
    22e4:	8d 92       	st	X+, r8
    22e6:	9d 92       	st	X+, r9
    22e8:	ad 92       	st	X+, r10
    22ea:	bd 92       	st	X+, r11
    22ec:	cd 92       	st	X+, r12
    22ee:	dd 92       	st	X+, r13
    22f0:	ed 92       	st	X+, r14
    22f2:	fd 92       	st	X+, r15
    22f4:	0d 93       	st	X+, r16
    22f6:	1d 93       	st	X+, r17
    22f8:	cd 93       	st	X+, r28
    22fa:	dd 93       	st	X+, r29
    22fc:	ff 91       	pop	r31
    22fe:	ef 91       	pop	r30
    2300:	8d b7       	in	r24, 0x3d	; 61
    2302:	8d 93       	st	X+, r24
    2304:	8e b7       	in	r24, 0x3e	; 62
    2306:	8d 93       	st	X+, r24
    2308:	8f b7       	in	r24, 0x3f	; 63
    230a:	8d 93       	st	X+, r24
    230c:	ed 93       	st	X+, r30
    230e:	fd 93       	st	X+, r31
    2310:	88 27       	eor	r24, r24
    2312:	99 27       	eor	r25, r25
    2314:	09 94       	ijmp

00002316 <longjmp>:
    2316:	dc 01       	movw	r26, r24
    2318:	cb 01       	movw	r24, r22
    231a:	81 30       	cpi	r24, 0x01	; 1
    231c:	91 05       	cpc	r25, r1
    231e:	81 1d       	adc	r24, r1
    2320:	2d 90       	ld	r2, X+
    2322:	3d 90       	ld	r3, X+
    2324:	4d 90       	ld	r4, X+
    2326:	5d 90       	ld	r5, X+
    2328:	6d 90       	ld	r6, X+
    232a:	7d 90       	ld	r7, X+
    232c:	8d 90       	ld	r8, X+
    232e:	9d 90       	ld	r9, X+
    2330:	ad 90       	ld	r10, X+
    2332:	bd 90       	ld	r11, X+
    2334:	cd 90       	ld	r12, X+
    2336:	dd 90       	ld	r13, X+
    2338:	ed 90       	ld	r14, X+
    233a:	fd 90       	ld	r15, X+
    233c:	0d 91       	ld	r16, X+
    233e:	1d 91       	ld	r17, X+
    2340:	cd 91       	ld	r28, X+
    2342:	dd 91       	ld	r29, X+
    2344:	ed 91       	ld	r30, X+
    2346:	fd 91       	ld	r31, X+
    2348:	0d 90       	ld	r0, X+
    234a:	f8 94       	cli
    234c:	fe bf       	out	0x3e, r31	; 62
    234e:	0f be       	out	0x3f, r0	; 63
    2350:	ed bf       	out	0x3d, r30	; 61
    2352:	ed 91       	ld	r30, X+
    2354:	fd 91       	ld	r31, X+
    2356:	09 94       	ijmp

00002358 <_exit>:
    2358:	f8 94       	cli

0000235a <__stop_program>:
    235a:	ff cf       	rjmp	.-2      	; 0x235a <__stop_program>
