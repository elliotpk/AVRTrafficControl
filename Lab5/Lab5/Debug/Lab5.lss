
Lab5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000050  00800100  000022e0  00002374  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000022e0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  00800150  00800150  000023c4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000023c4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000023f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002a0  00000000  00000000  00002434  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000032f8  00000000  00000000  000026d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001298  00000000  00000000  000059cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000169b  00000000  00000000  00006c64  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000d4c  00000000  00000000  00008300  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009b9  00000000  00000000  0000904c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002f10  00000000  00000000  00009a05  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000220  00000000  00000000  0000c915  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 58 05 	jmp	0xab0	; 0xab0 <__vector_1>
       8:	0c 94 c4 05 	jmp	0xb88	; 0xb88 <__vector_2>
       c:	0c 94 30 06 	jmp	0xc60	; 0xc60 <__vector_3>
      10:	0c 94 9c 06 	jmp	0xd38	; 0xd38 <__vector_4>
      14:	0c 94 08 07 	jmp	0xe10	; 0xe10 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 df 0d 	jmp	0x1bbe	; 0x1bbe <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 8d 0d 	jmp	0x1b1a	; 0x1b1a <__vector_9>
      28:	0c 94 74 07 	jmp	0xee8	; 0xee8 <__vector_10>
      2c:	0c 94 e0 07 	jmp	0xfc0	; 0xfc0 <__vector_11>
      30:	0c 94 4c 08 	jmp	0x1098	; 0x1098 <__vector_12>
      34:	0c 94 b8 08 	jmp	0x1170	; 0x1170 <__vector_13>
      38:	0c 94 24 09 	jmp	0x1248	; 0x1248 <__vector_14>
      3c:	0c 94 90 09 	jmp	0x1320	; 0x1320 <__vector_15>
      40:	0c 94 fc 09 	jmp	0x13f8	; 0x13f8 <__vector_16>
      44:	0c 94 68 0a 	jmp	0x14d0	; 0x14d0 <__vector_17>
      48:	0c 94 d4 0a 	jmp	0x15a8	; 0x15a8 <__vector_18>
      4c:	0c 94 40 0b 	jmp	0x1680	; 0x1680 <__vector_19>
      50:	0c 94 ac 0b 	jmp	0x1758	; 0x1758 <__vector_20>
      54:	0c 94 18 0c 	jmp	0x1830	; 0x1830 <__vector_21>
      58:	0c 94 84 0c 	jmp	0x1908	; 0x1908 <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	e0 ee       	ldi	r30, 0xE0	; 224
      70:	f2 e2       	ldi	r31, 0x22	; 34
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	a0 35       	cpi	r26, 0x50	; 80
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	a0 e5       	ldi	r26, 0x50	; 80
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	a3 3a       	cpi	r26, 0xA3	; 163
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 72 03 	call	0x6e4	; 0x6e4 <main>
      92:	0c 94 6e 11 	jmp	0x22dc	; 0x22dc <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <removeEntry>:
	ASYNC(&(self->display[1]), updateDisplay, self->onBridge);
	AFTER(SEC(5), self, removeEntry, 0);
	removeCar(self, val);
}

void removeEntry(TC *self) {
      9a:	cf 92       	push	r12
      9c:	df 92       	push	r13
      9e:	ef 92       	push	r14
      a0:	ff 92       	push	r15
      a2:	0f 93       	push	r16
      a4:	1f 93       	push	r17
	self->onBridge--;
      a6:	fc 01       	movw	r30, r24
      a8:	c6 8c       	ldd	r12, Z+30	; 0x1e
      aa:	d7 8c       	ldd	r13, Z+31	; 0x1f
      ac:	f1 e0       	ldi	r31, 0x01	; 1
      ae:	cf 1a       	sub	r12, r31
      b0:	d1 08       	sbc	r13, r1
      b2:	fc 01       	movw	r30, r24
      b4:	d7 8e       	std	Z+31, r13	; 0x1f
      b6:	c6 8e       	std	Z+30, r12	; 0x1e
	ASYNC(&(self->display[1]), updateDisplay, self->onBridge);
      b8:	8c 01       	movw	r16, r24
      ba:	06 5f       	subi	r16, 0xF6	; 246
      bc:	1f 4f       	sbci	r17, 0xFF	; 255
      be:	0f 2e       	mov	r0, r31
      c0:	fb e4       	ldi	r31, 0x4B	; 75
      c2:	ef 2e       	mov	r14, r31
      c4:	f2 e0       	ldi	r31, 0x02	; 2
      c6:	ff 2e       	mov	r15, r31
      c8:	f0 2d       	mov	r31, r0
      ca:	20 e0       	ldi	r18, 0x00	; 0
      cc:	30 e0       	ldi	r19, 0x00	; 0
      ce:	a9 01       	movw	r20, r18
      d0:	60 e0       	ldi	r22, 0x00	; 0
      d2:	70 e0       	ldi	r23, 0x00	; 0
      d4:	cb 01       	movw	r24, r22
      d6:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <async>
}
      da:	1f 91       	pop	r17
      dc:	0f 91       	pop	r16
      de:	ff 90       	pop	r15
      e0:	ef 90       	pop	r14
      e2:	df 90       	pop	r13
      e4:	cf 90       	pop	r12
      e6:	08 95       	ret

000000e8 <closeRoad>:
	if(self->queues[val] > 0) {
		AFTER(SEC(closetime), self, closeRoad, val);
	} 
}

void closeRoad(TC *self, int val) {
      e8:	cf 92       	push	r12
      ea:	df 92       	push	r13
      ec:	ef 92       	push	r14
      ee:	ff 92       	push	r15
      f0:	0f 93       	push	r16
      f2:	1f 93       	push	r17
	self->bridgeClear = 0;
      f4:	fc 01       	movw	r30, r24
      f6:	11 a2       	std	Z+33, r1	; 0x21
      f8:	10 a2       	std	Z+32, r1	; 0x20
	ASYNC(self->lights[val], red, 0);
      fa:	65 5f       	subi	r22, 0xF5	; 245
      fc:	7f 4f       	sbci	r23, 0xFF	; 255
      fe:	66 0f       	add	r22, r22
     100:	77 1f       	adc	r23, r23
     102:	e6 0f       	add	r30, r22
     104:	f7 1f       	adc	r31, r23
     106:	00 81       	ld	r16, Z
     108:	11 81       	ldd	r17, Z+1	; 0x01
     10a:	c1 2c       	mov	r12, r1
     10c:	d1 2c       	mov	r13, r1
     10e:	0f 2e       	mov	r0, r31
     110:	fc e8       	ldi	r31, 0x8C	; 140
     112:	ef 2e       	mov	r14, r31
     114:	f4 e0       	ldi	r31, 0x04	; 4
     116:	ff 2e       	mov	r15, r31
     118:	f0 2d       	mov	r31, r0
     11a:	20 e0       	ldi	r18, 0x00	; 0
     11c:	30 e0       	ldi	r19, 0x00	; 0
     11e:	a9 01       	movw	r20, r18
     120:	60 e0       	ldi	r22, 0x00	; 0
     122:	70 e0       	ldi	r23, 0x00	; 0
     124:	cb 01       	movw	r24, r22
     126:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <async>
}
     12a:	1f 91       	pop	r17
     12c:	0f 91       	pop	r16
     12e:	ff 90       	pop	r15
     130:	ef 90       	pop	r14
     132:	df 90       	pop	r13
     134:	cf 90       	pop	r12
     136:	08 95       	ret

00000138 <addCar>:
 * Created: 2021-03-14 21:46:41
 *  Author: ailio
 */ 
#include "controller.h"

void addCar(TC *self, int val) {
     138:	cf 92       	push	r12
     13a:	df 92       	push	r13
     13c:	ef 92       	push	r14
     13e:	ff 92       	push	r15
     140:	0f 93       	push	r16
     142:	1f 93       	push	r17
	if(val == 0) {
     144:	67 2b       	or	r22, r23
     146:	d9 f4       	brne	.+54     	; 0x17e <addCar+0x46>
		self->queues[0]++;
     148:	fc 01       	movw	r30, r24
     14a:	c2 8c       	ldd	r12, Z+26	; 0x1a
     14c:	d3 8c       	ldd	r13, Z+27	; 0x1b
     14e:	ff ef       	ldi	r31, 0xFF	; 255
     150:	cf 1a       	sub	r12, r31
     152:	df 0a       	sbc	r13, r31
     154:	fc 01       	movw	r30, r24
     156:	d3 8e       	std	Z+27, r13	; 0x1b
     158:	c2 8e       	std	Z+26, r12	; 0x1a
		ASYNC(&(self->display[0]), updateDisplay, self->queues[0]);
     15a:	8c 01       	movw	r16, r24
     15c:	0c 5f       	subi	r16, 0xFC	; 252
     15e:	1f 4f       	sbci	r17, 0xFF	; 255
     160:	0f 2e       	mov	r0, r31
     162:	fb e4       	ldi	r31, 0x4B	; 75
     164:	ef 2e       	mov	r14, r31
     166:	f2 e0       	ldi	r31, 0x02	; 2
     168:	ff 2e       	mov	r15, r31
     16a:	f0 2d       	mov	r31, r0
     16c:	20 e0       	ldi	r18, 0x00	; 0
     16e:	30 e0       	ldi	r19, 0x00	; 0
     170:	a9 01       	movw	r20, r18
     172:	60 e0       	ldi	r22, 0x00	; 0
     174:	70 e0       	ldi	r23, 0x00	; 0
     176:	cb 01       	movw	r24, r22
     178:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <async>
     17c:	1a c0       	rjmp	.+52     	; 0x1b2 <addCar+0x7a>
	} else {
		self->queues[1]++;
     17e:	fc 01       	movw	r30, r24
     180:	c4 8c       	ldd	r12, Z+28	; 0x1c
     182:	d5 8c       	ldd	r13, Z+29	; 0x1d
     184:	ff ef       	ldi	r31, 0xFF	; 255
     186:	cf 1a       	sub	r12, r31
     188:	df 0a       	sbc	r13, r31
     18a:	fc 01       	movw	r30, r24
     18c:	d5 8e       	std	Z+29, r13	; 0x1d
     18e:	c4 8e       	std	Z+28, r12	; 0x1c
		ASYNC(&(self->display[2]), updateDisplay, self->queues[1]);
     190:	8c 01       	movw	r16, r24
     192:	00 5f       	subi	r16, 0xF0	; 240
     194:	1f 4f       	sbci	r17, 0xFF	; 255
     196:	0f 2e       	mov	r0, r31
     198:	fb e4       	ldi	r31, 0x4B	; 75
     19a:	ef 2e       	mov	r14, r31
     19c:	f2 e0       	ldi	r31, 0x02	; 2
     19e:	ff 2e       	mov	r15, r31
     1a0:	f0 2d       	mov	r31, r0
     1a2:	20 e0       	ldi	r18, 0x00	; 0
     1a4:	30 e0       	ldi	r19, 0x00	; 0
     1a6:	a9 01       	movw	r20, r18
     1a8:	60 e0       	ldi	r22, 0x00	; 0
     1aa:	70 e0       	ldi	r23, 0x00	; 0
     1ac:	cb 01       	movw	r24, r22
     1ae:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <async>
	}
}
     1b2:	1f 91       	pop	r17
     1b4:	0f 91       	pop	r16
     1b6:	ff 90       	pop	r15
     1b8:	ef 90       	pop	r14
     1ba:	df 90       	pop	r13
     1bc:	cf 90       	pop	r12
     1be:	08 95       	ret

000001c0 <removeCar>:

void removeCar(TC *self, int val) {
     1c0:	cf 92       	push	r12
     1c2:	df 92       	push	r13
     1c4:	ef 92       	push	r14
     1c6:	ff 92       	push	r15
     1c8:	0f 93       	push	r16
     1ca:	1f 93       	push	r17
	if(val == 0) {
     1cc:	67 2b       	or	r22, r23
     1ce:	d9 f4       	brne	.+54     	; 0x206 <__EEPROM_REGION_LENGTH__+0x6>
		self->queues[0]--;
     1d0:	fc 01       	movw	r30, r24
     1d2:	c2 8c       	ldd	r12, Z+26	; 0x1a
     1d4:	d3 8c       	ldd	r13, Z+27	; 0x1b
     1d6:	f1 e0       	ldi	r31, 0x01	; 1
     1d8:	cf 1a       	sub	r12, r31
     1da:	d1 08       	sbc	r13, r1
     1dc:	fc 01       	movw	r30, r24
     1de:	d3 8e       	std	Z+27, r13	; 0x1b
     1e0:	c2 8e       	std	Z+26, r12	; 0x1a
		ASYNC(&(self->display[0]), updateDisplay, self->queues[0]);
     1e2:	8c 01       	movw	r16, r24
     1e4:	0c 5f       	subi	r16, 0xFC	; 252
     1e6:	1f 4f       	sbci	r17, 0xFF	; 255
     1e8:	0f 2e       	mov	r0, r31
     1ea:	fb e4       	ldi	r31, 0x4B	; 75
     1ec:	ef 2e       	mov	r14, r31
     1ee:	f2 e0       	ldi	r31, 0x02	; 2
     1f0:	ff 2e       	mov	r15, r31
     1f2:	f0 2d       	mov	r31, r0
     1f4:	20 e0       	ldi	r18, 0x00	; 0
     1f6:	30 e0       	ldi	r19, 0x00	; 0
     1f8:	a9 01       	movw	r20, r18
     1fa:	60 e0       	ldi	r22, 0x00	; 0
     1fc:	70 e0       	ldi	r23, 0x00	; 0
     1fe:	cb 01       	movw	r24, r22
     200:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <async>
     204:	1a c0       	rjmp	.+52     	; 0x23a <__EEPROM_REGION_LENGTH__+0x3a>
	} else {
		self->queues[1]--;
     206:	fc 01       	movw	r30, r24
     208:	c4 8c       	ldd	r12, Z+28	; 0x1c
     20a:	d5 8c       	ldd	r13, Z+29	; 0x1d
     20c:	f1 e0       	ldi	r31, 0x01	; 1
     20e:	cf 1a       	sub	r12, r31
     210:	d1 08       	sbc	r13, r1
     212:	fc 01       	movw	r30, r24
     214:	d5 8e       	std	Z+29, r13	; 0x1d
     216:	c4 8e       	std	Z+28, r12	; 0x1c
		ASYNC(&(self->display[2]), updateDisplay, self->queues[1]);
     218:	8c 01       	movw	r16, r24
     21a:	00 5f       	subi	r16, 0xF0	; 240
     21c:	1f 4f       	sbci	r17, 0xFF	; 255
     21e:	0f 2e       	mov	r0, r31
     220:	fb e4       	ldi	r31, 0x4B	; 75
     222:	ef 2e       	mov	r14, r31
     224:	f2 e0       	ldi	r31, 0x02	; 2
     226:	ff 2e       	mov	r15, r31
     228:	f0 2d       	mov	r31, r0
     22a:	20 e0       	ldi	r18, 0x00	; 0
     22c:	30 e0       	ldi	r19, 0x00	; 0
     22e:	a9 01       	movw	r20, r18
     230:	60 e0       	ldi	r22, 0x00	; 0
     232:	70 e0       	ldi	r23, 0x00	; 0
     234:	cb 01       	movw	r24, r22
     236:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <async>
	}
}
     23a:	1f 91       	pop	r17
     23c:	0f 91       	pop	r16
     23e:	ff 90       	pop	r15
     240:	ef 90       	pop	r14
     242:	df 90       	pop	r13
     244:	cf 90       	pop	r12
     246:	08 95       	ret

00000248 <entry>:

void entry(TC *self, int val) {	//0 = north entry, 1 = south entry
     248:	af 92       	push	r10
     24a:	bf 92       	push	r11
     24c:	cf 92       	push	r12
     24e:	df 92       	push	r13
     250:	ef 92       	push	r14
     252:	ff 92       	push	r15
     254:	0f 93       	push	r16
     256:	1f 93       	push	r17
     258:	cf 93       	push	r28
     25a:	df 93       	push	r29
     25c:	ec 01       	movw	r28, r24
     25e:	5b 01       	movw	r10, r22
	self->onBridge++;
     260:	ce 8c       	ldd	r12, Y+30	; 0x1e
     262:	df 8c       	ldd	r13, Y+31	; 0x1f
     264:	8f ef       	ldi	r24, 0xFF	; 255
     266:	c8 1a       	sub	r12, r24
     268:	d8 0a       	sbc	r13, r24
     26a:	df 8e       	std	Y+31, r13	; 0x1f
     26c:	ce 8e       	std	Y+30, r12	; 0x1e
	ASYNC(&(self->display[1]), updateDisplay, self->onBridge);
     26e:	8e 01       	movw	r16, r28
     270:	06 5f       	subi	r16, 0xF6	; 246
     272:	1f 4f       	sbci	r17, 0xFF	; 255
     274:	0f 2e       	mov	r0, r31
     276:	fb e4       	ldi	r31, 0x4B	; 75
     278:	ef 2e       	mov	r14, r31
     27a:	f2 e0       	ldi	r31, 0x02	; 2
     27c:	ff 2e       	mov	r15, r31
     27e:	f0 2d       	mov	r31, r0
     280:	20 e0       	ldi	r18, 0x00	; 0
     282:	30 e0       	ldi	r19, 0x00	; 0
     284:	a9 01       	movw	r20, r18
     286:	60 e0       	ldi	r22, 0x00	; 0
     288:	70 e0       	ldi	r23, 0x00	; 0
     28a:	cb 01       	movw	r24, r22
     28c:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <async>
	AFTER(SEC(5), self, removeEntry, 0);
     290:	c1 2c       	mov	r12, r1
     292:	d1 2c       	mov	r13, r1
     294:	0f 2e       	mov	r0, r31
     296:	fd e4       	ldi	r31, 0x4D	; 77
     298:	ef 2e       	mov	r14, r31
     29a:	f0 e0       	ldi	r31, 0x00	; 0
     29c:	ff 2e       	mov	r15, r31
     29e:	f0 2d       	mov	r31, r0
     2a0:	8e 01       	movw	r16, r28
     2a2:	20 e0       	ldi	r18, 0x00	; 0
     2a4:	30 e0       	ldi	r19, 0x00	; 0
     2a6:	a9 01       	movw	r20, r18
     2a8:	6a e5       	ldi	r22, 0x5A	; 90
     2aa:	72 e6       	ldi	r23, 0x62	; 98
     2ac:	82 e0       	ldi	r24, 0x02	; 2
     2ae:	90 e0       	ldi	r25, 0x00	; 0
     2b0:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <async>
	removeCar(self, val);
     2b4:	b5 01       	movw	r22, r10
     2b6:	ce 01       	movw	r24, r28
     2b8:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <removeCar>
}
     2bc:	df 91       	pop	r29
     2be:	cf 91       	pop	r28
     2c0:	1f 91       	pop	r17
     2c2:	0f 91       	pop	r16
     2c4:	ff 90       	pop	r15
     2c6:	ef 90       	pop	r14
     2c8:	df 90       	pop	r13
     2ca:	cf 90       	pop	r12
     2cc:	bf 90       	pop	r11
     2ce:	af 90       	pop	r10
     2d0:	08 95       	ret

000002d2 <openRoad>:
void removeEntry(TC *self) {
	self->onBridge--;
	ASYNC(&(self->display[1]), updateDisplay, self->onBridge);
}

void openRoad(TC *self, int val) {
     2d2:	6f 92       	push	r6
     2d4:	7f 92       	push	r7
     2d6:	8f 92       	push	r8
     2d8:	9f 92       	push	r9
     2da:	af 92       	push	r10
     2dc:	bf 92       	push	r11
     2de:	cf 92       	push	r12
     2e0:	df 92       	push	r13
     2e2:	ef 92       	push	r14
     2e4:	ff 92       	push	r15
     2e6:	0f 93       	push	r16
     2e8:	1f 93       	push	r17
     2ea:	cf 93       	push	r28
     2ec:	df 93       	push	r29
	int closetime = 0;
	if(self->bridgeClear!=0) {
     2ee:	fc 01       	movw	r30, r24
     2f0:	20 a1       	ldd	r18, Z+32	; 0x20
     2f2:	31 a1       	ldd	r19, Z+33	; 0x21
     2f4:	23 2b       	or	r18, r19
     2f6:	09 f0       	breq	.+2      	; 0x2fa <openRoad+0x28>
     2f8:	3f c0       	rjmp	.+126    	; 0x378 <openRoad+0xa6>
     2fa:	5b 01       	movw	r10, r22
     2fc:	ec 01       	movw	r28, r24
		return;
	}
	self->bridgeClear = 1;
     2fe:	81 e0       	ldi	r24, 0x01	; 1
     300:	90 e0       	ldi	r25, 0x00	; 0
     302:	91 a3       	std	Z+33, r25	; 0x21
     304:	80 a3       	std	Z+32, r24	; 0x20
     306:	3b 01       	movw	r6, r22
     308:	66 0c       	add	r6, r6
     30a:	77 1c       	adc	r7, r7
     30c:	6e 0e       	add	r6, r30
     30e:	7f 1e       	adc	r7, r31
	closetime = 5*self->queues[val] + self->queues[val] - 1;
     310:	f3 01       	movw	r30, r6
     312:	82 8c       	ldd	r8, Z+26	; 0x1a
     314:	93 8c       	ldd	r9, Z+27	; 0x1b
	ASYNC(self->lights[val], green, 0);
     316:	06 89       	ldd	r16, Z+22	; 0x16
     318:	17 89       	ldd	r17, Z+23	; 0x17
     31a:	c1 2c       	mov	r12, r1
     31c:	d1 2c       	mov	r13, r1
     31e:	0f 2e       	mov	r0, r31
     320:	f4 e8       	ldi	r31, 0x84	; 132
     322:	ef 2e       	mov	r14, r31
     324:	f4 e0       	ldi	r31, 0x04	; 4
     326:	ff 2e       	mov	r15, r31
     328:	f0 2d       	mov	r31, r0
     32a:	20 e0       	ldi	r18, 0x00	; 0
     32c:	30 e0       	ldi	r19, 0x00	; 0
     32e:	a9 01       	movw	r20, r18
     330:	60 e0       	ldi	r22, 0x00	; 0
     332:	70 e0       	ldi	r23, 0x00	; 0
     334:	cb 01       	movw	r24, r22
     336:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <async>
	if(self->queues[val] > 0) {
     33a:	f3 01       	movw	r30, r6
     33c:	82 8d       	ldd	r24, Z+26	; 0x1a
     33e:	93 8d       	ldd	r25, Z+27	; 0x1b
     340:	18 16       	cp	r1, r24
     342:	19 06       	cpc	r1, r25
     344:	cc f4       	brge	.+50     	; 0x378 <openRoad+0xa6>
		AFTER(SEC(closetime), self, closeRoad, val);
     346:	d4 01       	movw	r26, r8
     348:	aa 0f       	add	r26, r26
     34a:	bb 1f       	adc	r27, r27
     34c:	a8 0d       	add	r26, r8
     34e:	b9 1d       	adc	r27, r9
     350:	aa 0f       	add	r26, r26
     352:	bb 1f       	adc	r27, r27
     354:	11 97       	sbiw	r26, 0x01	; 1
     356:	22 e1       	ldi	r18, 0x12	; 18
     358:	3a e7       	ldi	r19, 0x7A	; 122
     35a:	0e 94 f5 10 	call	0x21ea	; 0x21ea <__usmulhisi3>
     35e:	65 01       	movw	r12, r10
     360:	0f 2e       	mov	r0, r31
     362:	f4 e7       	ldi	r31, 0x74	; 116
     364:	ef 2e       	mov	r14, r31
     366:	f0 e0       	ldi	r31, 0x00	; 0
     368:	ff 2e       	mov	r15, r31
     36a:	f0 2d       	mov	r31, r0
     36c:	8e 01       	movw	r16, r28
     36e:	20 e0       	ldi	r18, 0x00	; 0
     370:	30 e0       	ldi	r19, 0x00	; 0
     372:	a9 01       	movw	r20, r18
     374:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <async>
	} 
}
     378:	df 91       	pop	r29
     37a:	cf 91       	pop	r28
     37c:	1f 91       	pop	r17
     37e:	0f 91       	pop	r16
     380:	ff 90       	pop	r15
     382:	ef 90       	pop	r14
     384:	df 90       	pop	r13
     386:	cf 90       	pop	r12
     388:	bf 90       	pop	r11
     38a:	af 90       	pop	r10
     38c:	9f 90       	pop	r9
     38e:	8f 90       	pop	r8
     390:	7f 90       	pop	r7
     392:	6f 90       	pop	r6
     394:	08 95       	ret

00000396 <controlling>:
void closeRoad(TC *self, int val) {
	self->bridgeClear = 0;
	ASYNC(self->lights[val], red, 0);
}

void controlling(TC *self) {
     396:	cf 92       	push	r12
     398:	df 92       	push	r13
     39a:	ef 92       	push	r14
     39c:	ff 92       	push	r15
     39e:	0f 93       	push	r16
     3a0:	1f 93       	push	r17
     3a2:	cf 93       	push	r28
     3a4:	df 93       	push	r29
     3a6:	ec 01       	movw	r28, r24
	if((self->bridgeClear == 0) && (self->queues[0] >= self->queues[1])) {
     3a8:	88 a1       	ldd	r24, Y+32	; 0x20
     3aa:	99 a1       	ldd	r25, Y+33	; 0x21
     3ac:	89 2b       	or	r24, r25
     3ae:	c1 f4       	brne	.+48     	; 0x3e0 <controlling+0x4a>
     3b0:	2a 8d       	ldd	r18, Y+26	; 0x1a
     3b2:	3b 8d       	ldd	r19, Y+27	; 0x1b
     3b4:	8c 8d       	ldd	r24, Y+28	; 0x1c
     3b6:	9d 8d       	ldd	r25, Y+29	; 0x1d
     3b8:	28 17       	cp	r18, r24
     3ba:	39 07       	cpc	r19, r25
     3bc:	4c f0       	brlt	.+18     	; 0x3d0 <controlling+0x3a>
		if(self->queues[0] > 0) {
     3be:	12 16       	cp	r1, r18
     3c0:	13 06       	cpc	r1, r19
     3c2:	74 f4       	brge	.+28     	; 0x3e0 <controlling+0x4a>
			openRoad(self, 0); //Open north
     3c4:	60 e0       	ldi	r22, 0x00	; 0
     3c6:	70 e0       	ldi	r23, 0x00	; 0
     3c8:	ce 01       	movw	r24, r28
     3ca:	0e 94 69 01 	call	0x2d2	; 0x2d2 <openRoad>
     3ce:	08 c0       	rjmp	.+16     	; 0x3e0 <controlling+0x4a>
		}
	} else if((self->bridgeClear == 0)) {
		if(self->queues[1] > 0) {
     3d0:	18 16       	cp	r1, r24
     3d2:	19 06       	cpc	r1, r25
     3d4:	2c f4       	brge	.+10     	; 0x3e0 <controlling+0x4a>
			openRoad(self, 1); //Open south
     3d6:	61 e0       	ldi	r22, 0x01	; 1
     3d8:	70 e0       	ldi	r23, 0x00	; 0
     3da:	ce 01       	movw	r24, r28
     3dc:	0e 94 69 01 	call	0x2d2	; 0x2d2 <openRoad>
		}
	}
	AFTER(MSEC(50), self, controlling, 0);//Keep running function with 0.5s intervals
     3e0:	c1 2c       	mov	r12, r1
     3e2:	d1 2c       	mov	r13, r1
     3e4:	0f 2e       	mov	r0, r31
     3e6:	fb ec       	ldi	r31, 0xCB	; 203
     3e8:	ef 2e       	mov	r14, r31
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	ff 2e       	mov	r15, r31
     3ee:	f0 2d       	mov	r31, r0
     3f0:	8e 01       	movw	r16, r28
     3f2:	20 e0       	ldi	r18, 0x00	; 0
     3f4:	30 e0       	ldi	r19, 0x00	; 0
     3f6:	a9 01       	movw	r20, r18
     3f8:	6a e1       	ldi	r22, 0x1A	; 26
     3fa:	76 e0       	ldi	r23, 0x06	; 6
     3fc:	80 e0       	ldi	r24, 0x00	; 0
     3fe:	90 e0       	ldi	r25, 0x00	; 0
     400:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <async>
}
     404:	df 91       	pop	r29
     406:	cf 91       	pop	r28
     408:	1f 91       	pop	r17
     40a:	0f 91       	pop	r16
     40c:	ff 90       	pop	r15
     40e:	ef 90       	pop	r14
     410:	df 90       	pop	r13
     412:	cf 90       	pop	r12
     414:	08 95       	ret

00000416 <startup>:

void startup(TC *self) {
     416:	cf 92       	push	r12
     418:	df 92       	push	r13
     41a:	ef 92       	push	r14
     41c:	ff 92       	push	r15
     41e:	0f 93       	push	r16
     420:	1f 93       	push	r17
     422:	cf 93       	push	r28
     424:	df 93       	push	r29
     426:	ec 01       	movw	r28, r24
		ASYNC(&(self->display[0]), updateDisplay, self->queues[0]);
     428:	ca 8c       	ldd	r12, Y+26	; 0x1a
     42a:	db 8c       	ldd	r13, Y+27	; 0x1b
     42c:	8c 01       	movw	r16, r24
     42e:	0c 5f       	subi	r16, 0xFC	; 252
     430:	1f 4f       	sbci	r17, 0xFF	; 255
     432:	0f 2e       	mov	r0, r31
     434:	fb e4       	ldi	r31, 0x4B	; 75
     436:	ef 2e       	mov	r14, r31
     438:	f2 e0       	ldi	r31, 0x02	; 2
     43a:	ff 2e       	mov	r15, r31
     43c:	f0 2d       	mov	r31, r0
     43e:	20 e0       	ldi	r18, 0x00	; 0
     440:	30 e0       	ldi	r19, 0x00	; 0
     442:	a9 01       	movw	r20, r18
     444:	60 e0       	ldi	r22, 0x00	; 0
     446:	70 e0       	ldi	r23, 0x00	; 0
     448:	cb 01       	movw	r24, r22
     44a:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <async>
		ASYNC(&(self->display[1]), updateDisplay, self->onBridge);
     44e:	ce 8c       	ldd	r12, Y+30	; 0x1e
     450:	df 8c       	ldd	r13, Y+31	; 0x1f
     452:	0a 5f       	subi	r16, 0xFA	; 250
     454:	1f 4f       	sbci	r17, 0xFF	; 255
     456:	20 e0       	ldi	r18, 0x00	; 0
     458:	30 e0       	ldi	r19, 0x00	; 0
     45a:	a9 01       	movw	r20, r18
     45c:	60 e0       	ldi	r22, 0x00	; 0
     45e:	70 e0       	ldi	r23, 0x00	; 0
     460:	cb 01       	movw	r24, r22
     462:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <async>
		ASYNC(&(self->display[2]), updateDisplay, self->queues[1]);
     466:	cc 8c       	ldd	r12, Y+28	; 0x1c
     468:	dd 8c       	ldd	r13, Y+29	; 0x1d
     46a:	0a 5f       	subi	r16, 0xFA	; 250
     46c:	1f 4f       	sbci	r17, 0xFF	; 255
     46e:	20 e0       	ldi	r18, 0x00	; 0
     470:	30 e0       	ldi	r19, 0x00	; 0
     472:	a9 01       	movw	r20, r18
     474:	60 e0       	ldi	r22, 0x00	; 0
     476:	70 e0       	ldi	r23, 0x00	; 0
     478:	cb 01       	movw	r24, r22
     47a:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <async>
		controlling(self);
     47e:	ce 01       	movw	r24, r28
     480:	0e 94 cb 01 	call	0x396	; 0x396 <controlling>
}
     484:	df 91       	pop	r29
     486:	cf 91       	pop	r28
     488:	1f 91       	pop	r17
     48a:	0f 91       	pop	r16
     48c:	ff 90       	pop	r15
     48e:	ef 90       	pop	r14
     490:	df 90       	pop	r13
     492:	cf 90       	pop	r12
     494:	08 95       	ret

00000496 <updateDisplay>:
     496:	fc 01       	movw	r30, r24
     498:	44 81       	ldd	r20, Z+4	; 0x04
     49a:	55 81       	ldd	r21, Z+5	; 0x05
     49c:	07 2e       	mov	r0, r23
     49e:	00 0c       	add	r0, r0
     4a0:	88 0b       	sbc	r24, r24
     4a2:	99 0b       	sbc	r25, r25
     4a4:	0e 94 38 03 	call	0x670	; 0x670 <printAt>
     4a8:	08 95       	ret

000004aa <comInterrupt>:
 * Created: 2021-03-16 12:25:09
 *  Author: ailio
 */ 
#include "intHandler.h"

void comInterrupt(intH *self) {
     4aa:	cf 92       	push	r12
     4ac:	df 92       	push	r13
     4ae:	ef 92       	push	r14
     4b0:	ff 92       	push	r15
     4b2:	0f 93       	push	r16
     4b4:	1f 93       	push	r17
     4b6:	dc 01       	movw	r26, r24
	while (!(UCSR0A & (1<<RXC0)));
     4b8:	e0 ec       	ldi	r30, 0xC0	; 192
     4ba:	f0 e0       	ldi	r31, 0x00	; 0
     4bc:	90 81       	ld	r25, Z
     4be:	99 23       	and	r25, r25
     4c0:	ec f7       	brge	.-6      	; 0x4bc <comInterrupt+0x12>
	int read = UDR0;
     4c2:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     4c6:	30 e0       	ldi	r19, 0x00	; 0
	
	if(read == 1) {
     4c8:	21 30       	cpi	r18, 0x01	; 1
     4ca:	31 05       	cpc	r19, r1
     4cc:	a9 f4       	brne	.+42     	; 0x4f8 <comInterrupt+0x4e>
		ASYNC(self->controlller, addCar, 0);
     4ce:	14 96       	adiw	r26, 0x04	; 4
     4d0:	0d 91       	ld	r16, X+
     4d2:	1c 91       	ld	r17, X
     4d4:	15 97       	sbiw	r26, 0x05	; 5
     4d6:	c1 2c       	mov	r12, r1
     4d8:	d1 2c       	mov	r13, r1
     4da:	0f 2e       	mov	r0, r31
     4dc:	fc e9       	ldi	r31, 0x9C	; 156
     4de:	ef 2e       	mov	r14, r31
     4e0:	f0 e0       	ldi	r31, 0x00	; 0
     4e2:	ff 2e       	mov	r15, r31
     4e4:	f0 2d       	mov	r31, r0
     4e6:	20 e0       	ldi	r18, 0x00	; 0
     4e8:	30 e0       	ldi	r19, 0x00	; 0
     4ea:	a9 01       	movw	r20, r18
     4ec:	60 e0       	ldi	r22, 0x00	; 0
     4ee:	70 e0       	ldi	r23, 0x00	; 0
     4f0:	cb 01       	movw	r24, r22
     4f2:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <async>
     4f6:	49 c0       	rjmp	.+146    	; 0x58a <__stack+0x8b>
	} else if (read == 2) {
     4f8:	22 30       	cpi	r18, 0x02	; 2
     4fa:	31 05       	cpc	r19, r1
     4fc:	a9 f4       	brne	.+42     	; 0x528 <__stack+0x29>
		ASYNC(self->controlller, entry, 0);
     4fe:	14 96       	adiw	r26, 0x04	; 4
     500:	0d 91       	ld	r16, X+
     502:	1c 91       	ld	r17, X
     504:	15 97       	sbiw	r26, 0x05	; 5
     506:	c1 2c       	mov	r12, r1
     508:	d1 2c       	mov	r13, r1
     50a:	0f 2e       	mov	r0, r31
     50c:	f4 e2       	ldi	r31, 0x24	; 36
     50e:	ef 2e       	mov	r14, r31
     510:	f1 e0       	ldi	r31, 0x01	; 1
     512:	ff 2e       	mov	r15, r31
     514:	f0 2d       	mov	r31, r0
     516:	20 e0       	ldi	r18, 0x00	; 0
     518:	30 e0       	ldi	r19, 0x00	; 0
     51a:	a9 01       	movw	r20, r18
     51c:	60 e0       	ldi	r22, 0x00	; 0
     51e:	70 e0       	ldi	r23, 0x00	; 0
     520:	cb 01       	movw	r24, r22
     522:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <async>
     526:	31 c0       	rjmp	.+98     	; 0x58a <__stack+0x8b>
	} else if (read == 4) {
     528:	24 30       	cpi	r18, 0x04	; 4
     52a:	31 05       	cpc	r19, r1
     52c:	b1 f4       	brne	.+44     	; 0x55a <__stack+0x5b>
		ASYNC(self->controlller, addCar, 1);		
     52e:	14 96       	adiw	r26, 0x04	; 4
     530:	0d 91       	ld	r16, X+
     532:	1c 91       	ld	r17, X
     534:	15 97       	sbiw	r26, 0x05	; 5
     536:	cc 24       	eor	r12, r12
     538:	c3 94       	inc	r12
     53a:	d1 2c       	mov	r13, r1
     53c:	0f 2e       	mov	r0, r31
     53e:	fc e9       	ldi	r31, 0x9C	; 156
     540:	ef 2e       	mov	r14, r31
     542:	f0 e0       	ldi	r31, 0x00	; 0
     544:	ff 2e       	mov	r15, r31
     546:	f0 2d       	mov	r31, r0
     548:	20 e0       	ldi	r18, 0x00	; 0
     54a:	30 e0       	ldi	r19, 0x00	; 0
     54c:	a9 01       	movw	r20, r18
     54e:	60 e0       	ldi	r22, 0x00	; 0
     550:	70 e0       	ldi	r23, 0x00	; 0
     552:	cb 01       	movw	r24, r22
     554:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <async>
     558:	18 c0       	rjmp	.+48     	; 0x58a <__stack+0x8b>
	} else if (read == 8) {
     55a:	28 30       	cpi	r18, 0x08	; 8
     55c:	31 05       	cpc	r19, r1
     55e:	a9 f4       	brne	.+42     	; 0x58a <__stack+0x8b>
		ASYNC(self->controlller, entry, 1);		
     560:	14 96       	adiw	r26, 0x04	; 4
     562:	0d 91       	ld	r16, X+
     564:	1c 91       	ld	r17, X
     566:	15 97       	sbiw	r26, 0x05	; 5
     568:	cc 24       	eor	r12, r12
     56a:	c3 94       	inc	r12
     56c:	d1 2c       	mov	r13, r1
     56e:	0f 2e       	mov	r0, r31
     570:	f4 e2       	ldi	r31, 0x24	; 36
     572:	ef 2e       	mov	r14, r31
     574:	f1 e0       	ldi	r31, 0x01	; 1
     576:	ff 2e       	mov	r15, r31
     578:	f0 2d       	mov	r31, r0
     57a:	20 e0       	ldi	r18, 0x00	; 0
     57c:	30 e0       	ldi	r19, 0x00	; 0
     57e:	a9 01       	movw	r20, r18
     580:	60 e0       	ldi	r22, 0x00	; 0
     582:	70 e0       	ldi	r23, 0x00	; 0
     584:	cb 01       	movw	r24, r22
     586:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <async>
	}
     58a:	1f 91       	pop	r17
     58c:	0f 91       	pop	r16
     58e:	ff 90       	pop	r15
     590:	ef 90       	pop	r14
     592:	df 90       	pop	r13
     594:	cf 90       	pop	r12
     596:	08 95       	ret

00000598 <writeChar>:
     598:	66 30       	cpi	r22, 0x06	; 6
     59a:	71 05       	cpc	r23, r1
     59c:	08 f0       	brcs	.+2      	; 0x5a0 <writeChar+0x8>
     59e:	5a c0       	rjmp	.+180    	; 0x654 <writeChar+0xbc>
     5a0:	9f e9       	ldi	r25, 0x9F	; 159
     5a2:	98 0f       	add	r25, r24
     5a4:	9a 31       	cpi	r25, 0x1A	; 26
     5a6:	48 f4       	brcc	.+18     	; 0x5ba <writeChar+0x22>
     5a8:	a8 2f       	mov	r26, r24
     5aa:	b0 e0       	ldi	r27, 0x00	; 0
     5ac:	aa 0f       	add	r26, r26
     5ae:	bb 1f       	adc	r27, r27
     5b0:	aa 5b       	subi	r26, 0xBA	; 186
     5b2:	bf 4f       	sbci	r27, 0xFF	; 255
     5b4:	2d 91       	ld	r18, X+
     5b6:	3c 91       	ld	r19, X
     5b8:	19 c0       	rjmp	.+50     	; 0x5ec <writeChar+0x54>
     5ba:	90 ed       	ldi	r25, 0xD0	; 208
     5bc:	98 0f       	add	r25, r24
     5be:	9a 30       	cpi	r25, 0x0A	; 10
     5c0:	48 f4       	brcc	.+18     	; 0x5d4 <writeChar+0x3c>
     5c2:	a8 2f       	mov	r26, r24
     5c4:	b0 e0       	ldi	r27, 0x00	; 0
     5c6:	aa 0f       	add	r26, r26
     5c8:	bb 1f       	adc	r27, r27
     5ca:	a4 52       	subi	r26, 0x24	; 36
     5cc:	bf 4f       	sbci	r27, 0xFF	; 255
     5ce:	2d 91       	ld	r18, X+
     5d0:	3c 91       	ld	r19, X
     5d2:	0c c0       	rjmp	.+24     	; 0x5ec <writeChar+0x54>
     5d4:	9f eb       	ldi	r25, 0xBF	; 191
     5d6:	98 0f       	add	r25, r24
     5d8:	9a 31       	cpi	r25, 0x1A	; 26
     5da:	e0 f5       	brcc	.+120    	; 0x654 <writeChar+0xbc>
     5dc:	a8 2f       	mov	r26, r24
     5de:	b0 e0       	ldi	r27, 0x00	; 0
     5e0:	aa 0f       	add	r26, r26
     5e2:	bb 1f       	adc	r27, r27
     5e4:	aa 57       	subi	r26, 0x7A	; 122
     5e6:	bf 4f       	sbci	r27, 0xFF	; 255
     5e8:	2d 91       	ld	r18, X+
     5ea:	3c 91       	ld	r19, X
     5ec:	64 30       	cpi	r22, 0x04	; 4
     5ee:	71 05       	cpc	r23, r1
     5f0:	34 f4       	brge	.+12     	; 0x5fe <writeChar+0x66>
     5f2:	62 30       	cpi	r22, 0x02	; 2
     5f4:	71 05       	cpc	r23, r1
     5f6:	54 f4       	brge	.+20     	; 0x60c <writeChar+0x74>
     5f8:	77 23       	and	r23, r23
     5fa:	2c f4       	brge	.+10     	; 0x606 <writeChar+0x6e>
     5fc:	0c c0       	rjmp	.+24     	; 0x616 <writeChar+0x7e>
     5fe:	66 30       	cpi	r22, 0x06	; 6
     600:	71 05       	cpc	r23, r1
     602:	3c f0       	brlt	.+14     	; 0x612 <writeChar+0x7a>
     604:	08 c0       	rjmp	.+16     	; 0x616 <writeChar+0x7e>
     606:	ec ee       	ldi	r30, 0xEC	; 236
     608:	f0 e0       	ldi	r31, 0x00	; 0
     60a:	05 c0       	rjmp	.+10     	; 0x616 <writeChar+0x7e>
     60c:	ed ee       	ldi	r30, 0xED	; 237
     60e:	f0 e0       	ldi	r31, 0x00	; 0
     610:	02 c0       	rjmp	.+4      	; 0x616 <writeChar+0x7e>
     612:	ee ee       	ldi	r30, 0xEE	; 238
     614:	f0 e0       	ldi	r31, 0x00	; 0
     616:	db 01       	movw	r26, r22
     618:	a1 70       	andi	r26, 0x01	; 1
     61a:	bb 27       	eor	r27, r27
     61c:	60 ff       	sbrs	r22, 0
     61e:	02 c0       	rjmp	.+4      	; 0x624 <writeChar+0x8c>
     620:	6f e0       	ldi	r22, 0x0F	; 15
     622:	01 c0       	rjmp	.+2      	; 0x626 <writeChar+0x8e>
     624:	60 ef       	ldi	r22, 0xF0	; 240
     626:	af 01       	movw	r20, r30
     628:	4c 5e       	subi	r20, 0xEC	; 236
     62a:	5f 4f       	sbci	r21, 0xFF	; 255
     62c:	82 2f       	mov	r24, r18
     62e:	8f 70       	andi	r24, 0x0F	; 15
     630:	32 95       	swap	r19
     632:	22 95       	swap	r18
     634:	2f 70       	andi	r18, 0x0F	; 15
     636:	23 27       	eor	r18, r19
     638:	3f 70       	andi	r19, 0x0F	; 15
     63a:	23 27       	eor	r18, r19
     63c:	10 97       	sbiw	r26, 0x00	; 0
     63e:	11 f0       	breq	.+4      	; 0x644 <writeChar+0xac>
     640:	82 95       	swap	r24
     642:	80 7f       	andi	r24, 0xF0	; 240
     644:	90 81       	ld	r25, Z
     646:	96 23       	and	r25, r22
     648:	89 2b       	or	r24, r25
     64a:	80 83       	st	Z, r24
     64c:	35 96       	adiw	r30, 0x05	; 5
     64e:	4e 17       	cp	r20, r30
     650:	5f 07       	cpc	r21, r31
     652:	61 f7       	brne	.-40     	; 0x62c <writeChar+0x94>
     654:	08 95       	ret

00000656 <LCD_Init>:
     656:	87 eb       	ldi	r24, 0xB7	; 183
     658:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
     65c:	87 e0       	ldi	r24, 0x07	; 7
     65e:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
     662:	8f e0       	ldi	r24, 0x0F	; 15
     664:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
     668:	80 ec       	ldi	r24, 0xC0	; 192
     66a:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
     66e:	08 95       	ret

00000670 <printAt>:
     670:	8f 92       	push	r8
     672:	9f 92       	push	r9
     674:	af 92       	push	r10
     676:	bf 92       	push	r11
     678:	cf 92       	push	r12
     67a:	df 92       	push	r13
     67c:	ef 92       	push	r14
     67e:	ff 92       	push	r15
     680:	cf 93       	push	r28
     682:	df 93       	push	r29
     684:	4b 01       	movw	r8, r22
     686:	5c 01       	movw	r10, r24
     688:	ea 01       	movw	r28, r20
     68a:	24 e6       	ldi	r18, 0x64	; 100
     68c:	30 e0       	ldi	r19, 0x00	; 0
     68e:	40 e0       	ldi	r20, 0x00	; 0
     690:	50 e0       	ldi	r21, 0x00	; 0
     692:	0e 94 d6 10 	call	0x21ac	; 0x21ac <__divmodsi4>
     696:	0f 2e       	mov	r0, r31
     698:	fa e0       	ldi	r31, 0x0A	; 10
     69a:	cf 2e       	mov	r12, r31
     69c:	d1 2c       	mov	r13, r1
     69e:	e1 2c       	mov	r14, r1
     6a0:	f1 2c       	mov	r15, r1
     6a2:	f0 2d       	mov	r31, r0
     6a4:	a7 01       	movw	r20, r14
     6a6:	96 01       	movw	r18, r12
     6a8:	0e 94 d6 10 	call	0x21ac	; 0x21ac <__divmodsi4>
     6ac:	be 01       	movw	r22, r28
     6ae:	80 e3       	ldi	r24, 0x30	; 48
     6b0:	82 0f       	add	r24, r18
     6b2:	0e 94 cc 02 	call	0x598	; 0x598 <writeChar>
     6b6:	21 96       	adiw	r28, 0x01	; 1
     6b8:	c5 01       	movw	r24, r10
     6ba:	b4 01       	movw	r22, r8
     6bc:	a7 01       	movw	r20, r14
     6be:	96 01       	movw	r18, r12
     6c0:	0e 94 d6 10 	call	0x21ac	; 0x21ac <__divmodsi4>
     6c4:	86 2f       	mov	r24, r22
     6c6:	be 01       	movw	r22, r28
     6c8:	80 5d       	subi	r24, 0xD0	; 208
     6ca:	0e 94 cc 02 	call	0x598	; 0x598 <writeChar>
     6ce:	df 91       	pop	r29
     6d0:	cf 91       	pop	r28
     6d2:	ff 90       	pop	r15
     6d4:	ef 90       	pop	r14
     6d6:	df 90       	pop	r13
     6d8:	cf 90       	pop	r12
     6da:	bf 90       	pop	r11
     6dc:	af 90       	pop	r10
     6de:	9f 90       	pop	r9
     6e0:	8f 90       	pop	r8
     6e2:	08 95       	ret

000006e4 <main>:
#include "intHandler.h"
#include "LCD_driver.h"
#include <stdint.h>

int main(void)
{
     6e4:	ef 92       	push	r14
     6e6:	ff 92       	push	r15
     6e8:	0f 93       	push	r16
     6ea:	1f 93       	push	r17
     6ec:	cf 93       	push	r28
     6ee:	df 93       	push	r29
     6f0:	cd b7       	in	r28, 0x3d	; 61
     6f2:	de b7       	in	r29, 0x3e	; 62
     6f4:	c0 54       	subi	r28, 0x40	; 64
     6f6:	d1 09       	sbc	r29, r1
     6f8:	0f b6       	in	r0, 0x3f	; 63
     6fa:	f8 94       	cli
     6fc:	de bf       	out	0x3e, r29	; 62
     6fe:	0f be       	out	0x3f, r0	; 63
     700:	cd bf       	out	0x3d, r28	; 61
	outH out = initoutH();
     702:	1a 82       	std	Y+2, r1	; 0x02
     704:	19 82       	std	Y+1, r1	; 0x01
     706:	1c 82       	std	Y+4, r1	; 0x04
     708:	1b 82       	std	Y+3, r1	; 0x03
	light nLight = initlight(&out, 0);
     70a:	1e 82       	std	Y+6, r1	; 0x06
     70c:	1d 82       	std	Y+5, r1	; 0x05
     70e:	18 86       	std	Y+8, r1	; 0x08
     710:	1f 82       	std	Y+7, r1	; 0x07
     712:	8e 01       	movw	r16, r28
     714:	0f 5f       	subi	r16, 0xFF	; 255
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	1a 87       	std	Y+10, r17	; 0x0a
     71a:	09 87       	std	Y+9, r16	; 0x09
     71c:	1c 86       	std	Y+12, r1	; 0x0c
     71e:	1b 86       	std	Y+11, r1	; 0x0b
     720:	1e 86       	std	Y+14, r1	; 0x0e
     722:	1d 86       	std	Y+13, r1	; 0x0d
	light sLight = initlight(&out, 1);
     724:	18 8a       	std	Y+16, r1	; 0x10
     726:	1f 86       	std	Y+15, r1	; 0x0f
     728:	1a 8a       	std	Y+18, r1	; 0x12
     72a:	19 8a       	std	Y+17, r1	; 0x11
     72c:	1c 8b       	std	Y+20, r17	; 0x14
     72e:	0b 8b       	std	Y+19, r16	; 0x13
     730:	1e 8a       	std	Y+22, r1	; 0x16
     732:	1d 8a       	std	Y+21, r1	; 0x15
     734:	81 e0       	ldi	r24, 0x01	; 1
     736:	90 e0       	ldi	r25, 0x00	; 0
     738:	98 8f       	std	Y+24, r25	; 0x18
     73a:	8f 8b       	std	Y+23, r24	; 0x17
	TC cont = initTC(&nLight, &sLight);
     73c:	1a 8e       	std	Y+26, r1	; 0x1a
     73e:	19 8e       	std	Y+25, r1	; 0x19
     740:	1c 8e       	std	Y+28, r1	; 0x1c
     742:	1b 8e       	std	Y+27, r1	; 0x1b
     744:	1e 8e       	std	Y+30, r1	; 0x1e
     746:	1d 8e       	std	Y+29, r1	; 0x1d
     748:	18 a2       	std	Y+32, r1	; 0x20
     74a:	1f 8e       	std	Y+31, r1	; 0x1f
     74c:	84 e0       	ldi	r24, 0x04	; 4
     74e:	90 e0       	ldi	r25, 0x00	; 0
     750:	9a a3       	std	Y+34, r25	; 0x22
     752:	89 a3       	std	Y+33, r24	; 0x21
     754:	1c a2       	std	Y+36, r1	; 0x24
     756:	1b a2       	std	Y+35, r1	; 0x23
     758:	1e a2       	std	Y+38, r1	; 0x26
     75a:	1d a2       	std	Y+37, r1	; 0x25
     75c:	82 e0       	ldi	r24, 0x02	; 2
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	98 a7       	std	Y+40, r25	; 0x28
     762:	8f a3       	std	Y+39, r24	; 0x27
     764:	1a a6       	std	Y+42, r1	; 0x2a
     766:	19 a6       	std	Y+41, r1	; 0x29
     768:	1c a6       	std	Y+44, r1	; 0x2c
     76a:	1b a6       	std	Y+43, r1	; 0x2b
     76c:	1e a6       	std	Y+46, r1	; 0x2e
     76e:	1d a6       	std	Y+45, r1	; 0x2d
     770:	ce 01       	movw	r24, r28
     772:	05 96       	adiw	r24, 0x05	; 5
     774:	98 ab       	std	Y+48, r25	; 0x30
     776:	8f a7       	std	Y+47, r24	; 0x2f
     778:	0a 96       	adiw	r24, 0x0a	; 10
     77a:	9a ab       	std	Y+50, r25	; 0x32
     77c:	89 ab       	std	Y+49, r24	; 0x31
     77e:	1c aa       	std	Y+52, r1	; 0x34
     780:	1b aa       	std	Y+51, r1	; 0x33
     782:	1e aa       	std	Y+54, r1	; 0x36
     784:	1d aa       	std	Y+53, r1	; 0x35
     786:	18 ae       	std	Y+56, r1	; 0x38
     788:	1f aa       	std	Y+55, r1	; 0x37
     78a:	1a ae       	std	Y+58, r1	; 0x3a
     78c:	19 ae       	std	Y+57, r1	; 0x39
	intH interr = initintH(&cont);
     78e:	1c ae       	std	Y+60, r1	; 0x3c
     790:	1b ae       	std	Y+59, r1	; 0x3b
     792:	1e ae       	std	Y+62, r1	; 0x3e
     794:	1d ae       	std	Y+61, r1	; 0x3d
     796:	7e 01       	movw	r14, r28
     798:	89 e1       	ldi	r24, 0x19	; 25
     79a:	e8 0e       	add	r14, r24
     79c:	f1 1c       	adc	r15, r1
     79e:	21 96       	adiw	r28, 0x01	; 1
     7a0:	ff ae       	std	Y+63, r15	; 0x3f
     7a2:	ee ae       	std	Y+62, r14	; 0x3e
     7a4:	21 97       	sbiw	r28, 0x01	; 1
	CLKPR = 0x80;
     7a6:	e1 e6       	ldi	r30, 0x61	; 97
     7a8:	f0 e0       	ldi	r31, 0x00	; 0
     7aa:	80 e8       	ldi	r24, 0x80	; 128
     7ac:	80 83       	st	Z, r24
	CLKPR = 0x00;
     7ae:	10 82       	st	Z, r1
	LCD_Init();
     7b0:	0e 94 2b 03 	call	0x656	; 0x656 <LCD_Init>
	initUSART(&out);
     7b4:	c8 01       	movw	r24, r16
     7b6:	0e 94 08 04 	call	0x810	; 0x810 <initUSART>
	INSTALL(&interr, comInterrupt, IRQ_USART0_RX);
     7ba:	48 e0       	ldi	r20, 0x08	; 8
     7bc:	65 e5       	ldi	r22, 0x55	; 85
     7be:	72 e0       	ldi	r23, 0x02	; 2
     7c0:	ce 01       	movw	r24, r28
     7c2:	cb 96       	adiw	r24, 0x3b	; 59
     7c4:	0e 94 a0 10 	call	0x2140	; 0x2140 <install>
 	INSTALL(&interr, comInterrupt, IRQ_USART0_TX);
     7c8:	4a e0       	ldi	r20, 0x0A	; 10
     7ca:	65 e5       	ldi	r22, 0x55	; 85
     7cc:	72 e0       	ldi	r23, 0x02	; 2
     7ce:	ce 01       	movw	r24, r28
     7d0:	cb 96       	adiw	r24, 0x3b	; 59
     7d2:	0e 94 a0 10 	call	0x2140	; 0x2140 <install>
 	return TINYTIMBER(&cont, startup, 0);
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	6b e0       	ldi	r22, 0x0B	; 11
     7dc:	72 e0       	ldi	r23, 0x02	; 2
     7de:	c7 01       	movw	r24, r14
     7e0:	0e 94 ba 10 	call	0x2174	; 0x2174 <tinytimber>
}
     7e4:	c0 5c       	subi	r28, 0xC0	; 192
     7e6:	df 4f       	sbci	r29, 0xFF	; 255
     7e8:	0f b6       	in	r0, 0x3f	; 63
     7ea:	f8 94       	cli
     7ec:	de bf       	out	0x3e, r29	; 62
     7ee:	0f be       	out	0x3f, r0	; 63
     7f0:	cd bf       	out	0x3d, r28	; 61
     7f2:	df 91       	pop	r29
     7f4:	cf 91       	pop	r28
     7f6:	1f 91       	pop	r17
     7f8:	0f 91       	pop	r16
     7fa:	ff 90       	pop	r15
     7fc:	ef 90       	pop	r14
     7fe:	08 95       	ret

00000800 <transmit>:
2 -> South green light
3 -> South red light
*/
void transmit(outH *self, int val) {
	
	while( !(UCSR0A & (1<<UDRE0)) );	//Wait for empty buffer
     800:	e0 ec       	ldi	r30, 0xC0	; 192
     802:	f0 e0       	ldi	r31, 0x00	; 0
     804:	80 81       	ld	r24, Z
     806:	85 ff       	sbrs	r24, 5
     808:	fd cf       	rjmp	.-6      	; 0x804 <transmit+0x4>
	
	UDR0 = val;	//"send" data
     80a:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     80e:	08 95       	ret

00000810 <initUSART>:
}

void initUSART(outH *self) {
	//Set baud rate
	UBRR0H = (unsigned char)(51>>8); 
     810:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7fc0c5>
	UBRR0L = (unsigned char) 51;
     814:	83 e3       	ldi	r24, 0x33	; 51
     816:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7fc0c4>
	//Enable transmit and receive
	UCSR0B |= (1<<RXEN0) | (1<<TXEN0) | (1<<RXCIE0);
     81a:	e1 ec       	ldi	r30, 0xC1	; 193
     81c:	f0 e0       	ldi	r31, 0x00	; 0
     81e:	80 81       	ld	r24, Z
     820:	88 69       	ori	r24, 0x98	; 152
     822:	80 83       	st	Z, r24
     824:	08 95       	ret

00000826 <write>:
void red(light *self) {
	self->status = 0;
	write(self);
}

void write(light *self) {
     826:	cf 92       	push	r12
     828:	df 92       	push	r13
     82a:	ef 92       	push	r14
     82c:	ff 92       	push	r15
     82e:	0f 93       	push	r16
     830:	1f 93       	push	r17
     832:	fc 01       	movw	r30, r24
	if(self->pos == 0) {	//North light
     834:	80 85       	ldd	r24, Z+8	; 0x08
     836:	91 85       	ldd	r25, Z+9	; 0x09
     838:	89 2b       	or	r24, r25
     83a:	81 f5       	brne	.+96     	; 0x89c <write+0x76>
		switch(self->status){
     83c:	86 81       	ldd	r24, Z+6	; 0x06
     83e:	97 81       	ldd	r25, Z+7	; 0x07
     840:	00 97       	sbiw	r24, 0x00	; 0
     842:	b9 f0       	breq	.+46     	; 0x872 <write+0x4c>
     844:	01 97       	sbiw	r24, 0x01	; 1
     846:	09 f0       	breq	.+2      	; 0x84a <write+0x24>
     848:	58 c0       	rjmp	.+176    	; 0x8fa <write+0xd4>
			case 1:
				ASYNC(self->output, transmit, 1);	//North green light
     84a:	04 81       	ldd	r16, Z+4	; 0x04
     84c:	15 81       	ldd	r17, Z+5	; 0x05
     84e:	cc 24       	eor	r12, r12
     850:	c3 94       	inc	r12
     852:	d1 2c       	mov	r13, r1
     854:	0f 2e       	mov	r0, r31
     856:	f0 e0       	ldi	r31, 0x00	; 0
     858:	ef 2e       	mov	r14, r31
     85a:	f4 e0       	ldi	r31, 0x04	; 4
     85c:	ff 2e       	mov	r15, r31
     85e:	f0 2d       	mov	r31, r0
     860:	20 e0       	ldi	r18, 0x00	; 0
     862:	30 e0       	ldi	r19, 0x00	; 0
     864:	a9 01       	movw	r20, r18
     866:	60 e0       	ldi	r22, 0x00	; 0
     868:	70 e0       	ldi	r23, 0x00	; 0
     86a:	cb 01       	movw	r24, r22
     86c:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <async>
				break;
     870:	44 c0       	rjmp	.+136    	; 0x8fa <write+0xd4>
			case 0:
				ASYNC(self->output, transmit, 2);	//North red light
     872:	04 81       	ldd	r16, Z+4	; 0x04
     874:	15 81       	ldd	r17, Z+5	; 0x05
     876:	68 94       	set
     878:	cc 24       	eor	r12, r12
     87a:	c1 f8       	bld	r12, 1
     87c:	d1 2c       	mov	r13, r1
     87e:	0f 2e       	mov	r0, r31
     880:	f0 e0       	ldi	r31, 0x00	; 0
     882:	ef 2e       	mov	r14, r31
     884:	f4 e0       	ldi	r31, 0x04	; 4
     886:	ff 2e       	mov	r15, r31
     888:	f0 2d       	mov	r31, r0
     88a:	20 e0       	ldi	r18, 0x00	; 0
     88c:	30 e0       	ldi	r19, 0x00	; 0
     88e:	a9 01       	movw	r20, r18
     890:	60 e0       	ldi	r22, 0x00	; 0
     892:	70 e0       	ldi	r23, 0x00	; 0
     894:	cb 01       	movw	r24, r22
     896:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <async>
     89a:	2f c0       	rjmp	.+94     	; 0x8fa <write+0xd4>
		}
	} else {				//South light
		switch(self->status){
     89c:	86 81       	ldd	r24, Z+6	; 0x06
     89e:	97 81       	ldd	r25, Z+7	; 0x07
     8a0:	00 97       	sbiw	r24, 0x00	; 0
     8a2:	b9 f0       	breq	.+46     	; 0x8d2 <write+0xac>
     8a4:	01 97       	sbiw	r24, 0x01	; 1
     8a6:	49 f5       	brne	.+82     	; 0x8fa <write+0xd4>
			case 1:
				ASYNC(self->output, transmit, 4);	//South green light
     8a8:	04 81       	ldd	r16, Z+4	; 0x04
     8aa:	15 81       	ldd	r17, Z+5	; 0x05
     8ac:	68 94       	set
     8ae:	cc 24       	eor	r12, r12
     8b0:	c2 f8       	bld	r12, 2
     8b2:	d1 2c       	mov	r13, r1
     8b4:	0f 2e       	mov	r0, r31
     8b6:	f0 e0       	ldi	r31, 0x00	; 0
     8b8:	ef 2e       	mov	r14, r31
     8ba:	f4 e0       	ldi	r31, 0x04	; 4
     8bc:	ff 2e       	mov	r15, r31
     8be:	f0 2d       	mov	r31, r0
     8c0:	20 e0       	ldi	r18, 0x00	; 0
     8c2:	30 e0       	ldi	r19, 0x00	; 0
     8c4:	a9 01       	movw	r20, r18
     8c6:	60 e0       	ldi	r22, 0x00	; 0
     8c8:	70 e0       	ldi	r23, 0x00	; 0
     8ca:	cb 01       	movw	r24, r22
     8cc:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <async>
				break;
     8d0:	14 c0       	rjmp	.+40     	; 0x8fa <write+0xd4>
			case 0:
				ASYNC(self->output, transmit, 8);	//South red light
     8d2:	04 81       	ldd	r16, Z+4	; 0x04
     8d4:	15 81       	ldd	r17, Z+5	; 0x05
     8d6:	68 94       	set
     8d8:	cc 24       	eor	r12, r12
     8da:	c3 f8       	bld	r12, 3
     8dc:	d1 2c       	mov	r13, r1
     8de:	0f 2e       	mov	r0, r31
     8e0:	f0 e0       	ldi	r31, 0x00	; 0
     8e2:	ef 2e       	mov	r14, r31
     8e4:	f4 e0       	ldi	r31, 0x04	; 4
     8e6:	ff 2e       	mov	r15, r31
     8e8:	f0 2d       	mov	r31, r0
     8ea:	20 e0       	ldi	r18, 0x00	; 0
     8ec:	30 e0       	ldi	r19, 0x00	; 0
     8ee:	a9 01       	movw	r20, r18
     8f0:	60 e0       	ldi	r22, 0x00	; 0
     8f2:	70 e0       	ldi	r23, 0x00	; 0
     8f4:	cb 01       	movw	r24, r22
     8f6:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <async>
				break;
		}
	}
     8fa:	1f 91       	pop	r17
     8fc:	0f 91       	pop	r16
     8fe:	ff 90       	pop	r15
     900:	ef 90       	pop	r14
     902:	df 90       	pop	r13
     904:	cf 90       	pop	r12
     906:	08 95       	ret

00000908 <green>:
 *  Author: ailio
 */ 
#include "stopLight.h"

void green(light *self) {
	self->status = 1;
     908:	21 e0       	ldi	r18, 0x01	; 1
     90a:	30 e0       	ldi	r19, 0x00	; 0
     90c:	fc 01       	movw	r30, r24
     90e:	37 83       	std	Z+7, r19	; 0x07
     910:	26 83       	std	Z+6, r18	; 0x06
	write(self);
     912:	0e 94 13 04 	call	0x826	; 0x826 <write>
     916:	08 95       	ret

00000918 <red>:
}

void red(light *self) {
	self->status = 0;
     918:	fc 01       	movw	r30, r24
     91a:	17 82       	std	Z+7, r1	; 0x07
     91c:	16 82       	std	Z+6, r1	; 0x06
	write(self);
     91e:	0e 94 13 04 	call	0x826	; 0x826 <write>
     922:	08 95       	ret

00000924 <initialize>:
     924:	cf 93       	push	r28
     926:	df 93       	push	r29
     928:	00 d0       	rcall	.+0      	; 0x92a <initialize+0x6>
     92a:	00 d0       	rcall	.+0      	; 0x92c <initialize+0x8>
     92c:	cd b7       	in	r28, 0x3d	; 61
     92e:	de b7       	in	r29, 0x3e	; 62
     930:	83 e4       	ldi	r24, 0x43	; 67
     932:	92 e0       	ldi	r25, 0x02	; 2
     934:	23 e2       	ldi	r18, 0x23	; 35
     936:	33 e0       	ldi	r19, 0x03	; 3
     938:	fc 01       	movw	r30, r24
     93a:	70 97       	sbiw	r30, 0x10	; 16
     93c:	91 83       	std	Z+1, r25	; 0x01
     93e:	80 83       	st	Z, r24
     940:	40 96       	adiw	r24, 0x10	; 16
     942:	82 17       	cp	r24, r18
     944:	93 07       	cpc	r25, r19
     946:	c1 f7       	brne	.-16     	; 0x938 <initialize+0x14>
     948:	10 92 14 03 	sts	0x0314, r1	; 0x800314 <messages+0xe1>
     94c:	10 92 13 03 	sts	0x0313, r1	; 0x800313 <messages+0xe0>
     950:	ee e7       	ldi	r30, 0x7E	; 126
     952:	f1 e0       	ldi	r31, 0x01	; 1
     954:	8b e9       	ldi	r24, 0x9B	; 155
     956:	91 e0       	ldi	r25, 0x01	; 1
     958:	91 83       	std	Z+1, r25	; 0x01
     95a:	80 83       	st	Z, r24
     95c:	88 eb       	ldi	r24, 0xB8	; 184
     95e:	91 e0       	ldi	r25, 0x01	; 1
     960:	96 8f       	std	Z+30, r25	; 0x1e
     962:	85 8f       	std	Z+29, r24	; 0x1d
     964:	a5 ed       	ldi	r26, 0xD5	; 213
     966:	b1 e0       	ldi	r27, 0x01	; 1
     968:	b3 af       	std	Z+59, r27	; 0x3b
     96a:	a2 af       	std	Z+58, r26	; 0x3a
     96c:	1d 92       	st	X+, r1
     96e:	1c 92       	st	X, r1
     970:	fa 83       	std	Y+2, r31	; 0x02
     972:	e9 83       	std	Y+1, r30	; 0x01
     974:	ef e7       	ldi	r30, 0x7F	; 127
     976:	f3 e0       	ldi	r31, 0x03	; 3
     978:	fc 83       	std	Y+4, r31	; 0x04
     97a:	eb 83       	std	Y+3, r30	; 0x03
     97c:	89 81       	ldd	r24, Y+1	; 0x01
     97e:	9a 81       	ldd	r25, Y+2	; 0x02
     980:	06 96       	adiw	r24, 0x06	; 6
     982:	0e 94 2d 11 	call	0x225a	; 0x225a <setjmp>
     986:	8b 81       	ldd	r24, Y+3	; 0x03
     988:	9c 81       	ldd	r25, Y+4	; 0x04
     98a:	e9 81       	ldd	r30, Y+1	; 0x01
     98c:	fa 81       	ldd	r31, Y+2	; 0x02
     98e:	97 8b       	std	Z+23, r25	; 0x17
     990:	86 8b       	std	Z+22, r24	; 0x16
     992:	91 8f       	std	Z+25, r25	; 0x19
     994:	80 8f       	std	Z+24, r24	; 0x18
     996:	82 e3       	ldi	r24, 0x32	; 50
     998:	90 e1       	ldi	r25, 0x10	; 16
     99a:	94 8f       	std	Z+28, r25	; 0x1c
     99c:	83 8f       	std	Z+27, r24	; 0x1b
     99e:	15 82       	std	Z+5, r1	; 0x05
     9a0:	14 82       	std	Z+4, r1	; 0x04
     9a2:	7d 96       	adiw	r30, 0x1d	; 29
     9a4:	fa 83       	std	Y+2, r31	; 0x02
     9a6:	e9 83       	std	Y+1, r30	; 0x01
     9a8:	eb 81       	ldd	r30, Y+3	; 0x03
     9aa:	fc 81       	ldd	r31, Y+4	; 0x04
     9ac:	e0 5a       	subi	r30, 0xA0	; 160
     9ae:	ff 4f       	sbci	r31, 0xFF	; 255
     9b0:	fc 83       	std	Y+4, r31	; 0x04
     9b2:	eb 83       	std	Y+3, r30	; 0x03
     9b4:	89 81       	ldd	r24, Y+1	; 0x01
     9b6:	9a 81       	ldd	r25, Y+2	; 0x02
     9b8:	82 5f       	subi	r24, 0xF2	; 242
     9ba:	91 40       	sbci	r25, 0x01	; 1
     9bc:	f9 f6       	brne	.-66     	; 0x97c <initialize+0x58>
     9be:	e6 e1       	ldi	r30, 0x16	; 22
     9c0:	f2 e0       	ldi	r31, 0x02	; 2
     9c2:	11 82       	std	Z+1, r1	; 0x01
     9c4:	10 82       	st	Z, r1
     9c6:	15 82       	std	Z+5, r1	; 0x05
     9c8:	14 82       	std	Z+4, r1	; 0x04
     9ca:	13 82       	std	Z+3, r1	; 0x03
     9cc:	12 82       	std	Z+2, r1	; 0x02
     9ce:	e1 e6       	ldi	r30, 0x61	; 97
     9d0:	f0 e0       	ldi	r31, 0x00	; 0
     9d2:	80 e8       	ldi	r24, 0x80	; 128
     9d4:	80 83       	st	Z, r24
     9d6:	10 82       	st	Z, r1
     9d8:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     9dc:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     9e0:	84 e0       	ldi	r24, 0x04	; 4
     9e2:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     9e6:	81 e0       	ldi	r24, 0x01	; 1
     9e8:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     9ec:	0f 90       	pop	r0
     9ee:	0f 90       	pop	r0
     9f0:	0f 90       	pop	r0
     9f2:	0f 90       	pop	r0
     9f4:	df 91       	pop	r29
     9f6:	cf 91       	pop	r28
     9f8:	08 95       	ret

000009fa <dispatch>:
     9fa:	cf 93       	push	r28
     9fc:	df 93       	push	r29
     9fe:	00 d0       	rcall	.+0      	; 0xa00 <dispatch+0x6>
     a00:	cd b7       	in	r28, 0x3d	; 61
     a02:	de b7       	in	r29, 0x3e	; 62
     a04:	9a 83       	std	Y+2, r25	; 0x02
     a06:	89 83       	std	Y+1, r24	; 0x01
     a08:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     a0c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a10:	06 96       	adiw	r24, 0x06	; 6
     a12:	0e 94 2d 11 	call	0x225a	; 0x225a <setjmp>
     a16:	89 2b       	or	r24, r25
     a18:	59 f4       	brne	.+22     	; 0xa30 <dispatch+0x36>
     a1a:	89 81       	ldd	r24, Y+1	; 0x01
     a1c:	9a 81       	ldd	r25, Y+2	; 0x02
     a1e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a22:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     a26:	61 e0       	ldi	r22, 0x01	; 1
     a28:	70 e0       	ldi	r23, 0x00	; 0
     a2a:	06 96       	adiw	r24, 0x06	; 6
     a2c:	0e 94 4d 11 	call	0x229a	; 0x229a <longjmp>
     a30:	0f 90       	pop	r0
     a32:	0f 90       	pop	r0
     a34:	df 91       	pop	r29
     a36:	cf 91       	pop	r28
     a38:	08 95       	ret

00000a3a <schedule>:
     a3a:	0f 93       	push	r16
     a3c:	1f 93       	push	r17
     a3e:	cf 93       	push	r28
     a40:	df 93       	push	r29
     a42:	e0 91 58 01 	lds	r30, 0x0158	; 0x800158 <msgQ>
     a46:	f0 91 59 01 	lds	r31, 0x0159	; 0x800159 <msgQ+0x1>
     a4a:	30 97       	sbiw	r30, 0x00	; 0
     a4c:	61 f1       	breq	.+88     	; 0xaa6 <schedule+0x6c>
     a4e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     a52:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     a56:	00 97       	sbiw	r24, 0x00	; 0
     a58:	31 f1       	breq	.+76     	; 0xaa6 <schedule+0x6c>
     a5a:	c0 91 02 01 	lds	r28, 0x0102	; 0x800102 <activeStack>
     a5e:	d0 91 03 01 	lds	r29, 0x0103	; 0x800103 <activeStack+0x1>
     a62:	aa 81       	ldd	r26, Y+2	; 0x02
     a64:	bb 81       	ldd	r27, Y+3	; 0x03
     a66:	10 97       	sbiw	r26, 0x00	; 0
     a68:	79 f0       	breq	.+30     	; 0xa88 <schedule+0x4e>
     a6a:	46 81       	ldd	r20, Z+6	; 0x06
     a6c:	57 81       	ldd	r21, Z+7	; 0x07
     a6e:	60 85       	ldd	r22, Z+8	; 0x08
     a70:	71 85       	ldd	r23, Z+9	; 0x09
     a72:	16 96       	adiw	r26, 0x06	; 6
     a74:	0d 91       	ld	r16, X+
     a76:	1d 91       	ld	r17, X+
     a78:	2d 91       	ld	r18, X+
     a7a:	3c 91       	ld	r19, X
     a7c:	19 97       	sbiw	r26, 0x09	; 9
     a7e:	40 1b       	sub	r20, r16
     a80:	51 0b       	sbc	r21, r17
     a82:	62 0b       	sbc	r22, r18
     a84:	73 0b       	sbc	r23, r19
     a86:	7a f4       	brpl	.+30     	; 0xaa6 <schedule+0x6c>
     a88:	fc 01       	movw	r30, r24
     a8a:	20 81       	ld	r18, Z
     a8c:	31 81       	ldd	r19, Z+1	; 0x01
     a8e:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
     a92:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
     a96:	d1 83       	std	Z+1, r29	; 0x01
     a98:	c0 83       	st	Z, r28
     a9a:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
     a9e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
     aa2:	0e 94 fd 04 	call	0x9fa	; 0x9fa <dispatch>
     aa6:	df 91       	pop	r29
     aa8:	cf 91       	pop	r28
     aaa:	1f 91       	pop	r17
     aac:	0f 91       	pop	r16
     aae:	08 95       	ret

00000ab0 <__vector_1>:
     ab0:	1f 92       	push	r1
     ab2:	0f 92       	push	r0
     ab4:	0f b6       	in	r0, 0x3f	; 63
     ab6:	0f 92       	push	r0
     ab8:	11 24       	eor	r1, r1
     aba:	2f 93       	push	r18
     abc:	3f 93       	push	r19
     abe:	4f 93       	push	r20
     ac0:	5f 93       	push	r21
     ac2:	6f 93       	push	r22
     ac4:	7f 93       	push	r23
     ac6:	8f 93       	push	r24
     ac8:	9f 93       	push	r25
     aca:	af 93       	push	r26
     acc:	bf 93       	push	r27
     ace:	ef 93       	push	r30
     ad0:	ff 93       	push	r31
     ad2:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     ad6:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     ada:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ade:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ae2:	c9 01       	movw	r24, r18
     ae4:	03 2e       	mov	r0, r19
     ae6:	00 0c       	add	r0, r0
     ae8:	aa 0b       	sbc	r26, r26
     aea:	bb 0b       	sbc	r27, r27
     aec:	dc 01       	movw	r26, r24
     aee:	99 27       	eor	r25, r25
     af0:	88 27       	eor	r24, r24
     af2:	60 e0       	ldi	r22, 0x00	; 0
     af4:	70 e0       	ldi	r23, 0x00	; 0
     af6:	84 2b       	or	r24, r20
     af8:	95 2b       	or	r25, r21
     afa:	a6 2b       	or	r26, r22
     afc:	b7 2b       	or	r27, r23
     afe:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     b02:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     b06:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     b0a:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     b0e:	b0 9b       	sbis	0x16, 0	; 22
     b10:	1b c0       	rjmp	.+54     	; 0xb48 <__vector_1+0x98>
     b12:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b16:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b1a:	c9 01       	movw	r24, r18
     b1c:	01 96       	adiw	r24, 0x01	; 1
     b1e:	09 2e       	mov	r0, r25
     b20:	00 0c       	add	r0, r0
     b22:	aa 0b       	sbc	r26, r26
     b24:	bb 0b       	sbc	r27, r27
     b26:	dc 01       	movw	r26, r24
     b28:	99 27       	eor	r25, r25
     b2a:	88 27       	eor	r24, r24
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	84 2b       	or	r24, r20
     b32:	95 2b       	or	r25, r21
     b34:	a6 2b       	or	r26, r22
     b36:	b7 2b       	or	r27, r23
     b38:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     b3c:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     b40:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     b44:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     b48:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <mtable>
     b4c:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <mtable+0x1>
     b50:	30 97       	sbiw	r30, 0x00	; 0
     b52:	39 f0       	breq	.+14     	; 0xb62 <__vector_1+0xb2>
     b54:	60 e0       	ldi	r22, 0x00	; 0
     b56:	70 e0       	ldi	r23, 0x00	; 0
     b58:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <otable>
     b5c:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <otable+0x1>
     b60:	09 95       	icall
     b62:	0e 94 1d 05 	call	0xa3a	; 0xa3a <schedule>
     b66:	ff 91       	pop	r31
     b68:	ef 91       	pop	r30
     b6a:	bf 91       	pop	r27
     b6c:	af 91       	pop	r26
     b6e:	9f 91       	pop	r25
     b70:	8f 91       	pop	r24
     b72:	7f 91       	pop	r23
     b74:	6f 91       	pop	r22
     b76:	5f 91       	pop	r21
     b78:	4f 91       	pop	r20
     b7a:	3f 91       	pop	r19
     b7c:	2f 91       	pop	r18
     b7e:	0f 90       	pop	r0
     b80:	0f be       	out	0x3f, r0	; 63
     b82:	0f 90       	pop	r0
     b84:	1f 90       	pop	r1
     b86:	18 95       	reti

00000b88 <__vector_2>:
     b88:	1f 92       	push	r1
     b8a:	0f 92       	push	r0
     b8c:	0f b6       	in	r0, 0x3f	; 63
     b8e:	0f 92       	push	r0
     b90:	11 24       	eor	r1, r1
     b92:	2f 93       	push	r18
     b94:	3f 93       	push	r19
     b96:	4f 93       	push	r20
     b98:	5f 93       	push	r21
     b9a:	6f 93       	push	r22
     b9c:	7f 93       	push	r23
     b9e:	8f 93       	push	r24
     ba0:	9f 93       	push	r25
     ba2:	af 93       	push	r26
     ba4:	bf 93       	push	r27
     ba6:	ef 93       	push	r30
     ba8:	ff 93       	push	r31
     baa:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     bae:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     bb2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bb6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bba:	c9 01       	movw	r24, r18
     bbc:	03 2e       	mov	r0, r19
     bbe:	00 0c       	add	r0, r0
     bc0:	aa 0b       	sbc	r26, r26
     bc2:	bb 0b       	sbc	r27, r27
     bc4:	dc 01       	movw	r26, r24
     bc6:	99 27       	eor	r25, r25
     bc8:	88 27       	eor	r24, r24
     bca:	60 e0       	ldi	r22, 0x00	; 0
     bcc:	70 e0       	ldi	r23, 0x00	; 0
     bce:	84 2b       	or	r24, r20
     bd0:	95 2b       	or	r25, r21
     bd2:	a6 2b       	or	r26, r22
     bd4:	b7 2b       	or	r27, r23
     bd6:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     bda:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     bde:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     be2:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     be6:	b0 9b       	sbis	0x16, 0	; 22
     be8:	1b c0       	rjmp	.+54     	; 0xc20 <__vector_2+0x98>
     bea:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bee:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bf2:	c9 01       	movw	r24, r18
     bf4:	01 96       	adiw	r24, 0x01	; 1
     bf6:	09 2e       	mov	r0, r25
     bf8:	00 0c       	add	r0, r0
     bfa:	aa 0b       	sbc	r26, r26
     bfc:	bb 0b       	sbc	r27, r27
     bfe:	dc 01       	movw	r26, r24
     c00:	99 27       	eor	r25, r25
     c02:	88 27       	eor	r24, r24
     c04:	60 e0       	ldi	r22, 0x00	; 0
     c06:	70 e0       	ldi	r23, 0x00	; 0
     c08:	84 2b       	or	r24, r20
     c0a:	95 2b       	or	r25, r21
     c0c:	a6 2b       	or	r26, r22
     c0e:	b7 2b       	or	r27, r23
     c10:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     c14:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     c18:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     c1c:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     c20:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <mtable+0x2>
     c24:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <mtable+0x3>
     c28:	30 97       	sbiw	r30, 0x00	; 0
     c2a:	39 f0       	breq	.+14     	; 0xc3a <__vector_2+0xb2>
     c2c:	61 e0       	ldi	r22, 0x01	; 1
     c2e:	70 e0       	ldi	r23, 0x00	; 0
     c30:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <otable+0x2>
     c34:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <otable+0x3>
     c38:	09 95       	icall
     c3a:	0e 94 1d 05 	call	0xa3a	; 0xa3a <schedule>
     c3e:	ff 91       	pop	r31
     c40:	ef 91       	pop	r30
     c42:	bf 91       	pop	r27
     c44:	af 91       	pop	r26
     c46:	9f 91       	pop	r25
     c48:	8f 91       	pop	r24
     c4a:	7f 91       	pop	r23
     c4c:	6f 91       	pop	r22
     c4e:	5f 91       	pop	r21
     c50:	4f 91       	pop	r20
     c52:	3f 91       	pop	r19
     c54:	2f 91       	pop	r18
     c56:	0f 90       	pop	r0
     c58:	0f be       	out	0x3f, r0	; 63
     c5a:	0f 90       	pop	r0
     c5c:	1f 90       	pop	r1
     c5e:	18 95       	reti

00000c60 <__vector_3>:
     c60:	1f 92       	push	r1
     c62:	0f 92       	push	r0
     c64:	0f b6       	in	r0, 0x3f	; 63
     c66:	0f 92       	push	r0
     c68:	11 24       	eor	r1, r1
     c6a:	2f 93       	push	r18
     c6c:	3f 93       	push	r19
     c6e:	4f 93       	push	r20
     c70:	5f 93       	push	r21
     c72:	6f 93       	push	r22
     c74:	7f 93       	push	r23
     c76:	8f 93       	push	r24
     c78:	9f 93       	push	r25
     c7a:	af 93       	push	r26
     c7c:	bf 93       	push	r27
     c7e:	ef 93       	push	r30
     c80:	ff 93       	push	r31
     c82:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     c86:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     c8a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c8e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c92:	c9 01       	movw	r24, r18
     c94:	03 2e       	mov	r0, r19
     c96:	00 0c       	add	r0, r0
     c98:	aa 0b       	sbc	r26, r26
     c9a:	bb 0b       	sbc	r27, r27
     c9c:	dc 01       	movw	r26, r24
     c9e:	99 27       	eor	r25, r25
     ca0:	88 27       	eor	r24, r24
     ca2:	60 e0       	ldi	r22, 0x00	; 0
     ca4:	70 e0       	ldi	r23, 0x00	; 0
     ca6:	84 2b       	or	r24, r20
     ca8:	95 2b       	or	r25, r21
     caa:	a6 2b       	or	r26, r22
     cac:	b7 2b       	or	r27, r23
     cae:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     cb2:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     cb6:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     cba:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     cbe:	b0 9b       	sbis	0x16, 0	; 22
     cc0:	1b c0       	rjmp	.+54     	; 0xcf8 <__vector_3+0x98>
     cc2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cc6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cca:	c9 01       	movw	r24, r18
     ccc:	01 96       	adiw	r24, 0x01	; 1
     cce:	09 2e       	mov	r0, r25
     cd0:	00 0c       	add	r0, r0
     cd2:	aa 0b       	sbc	r26, r26
     cd4:	bb 0b       	sbc	r27, r27
     cd6:	dc 01       	movw	r26, r24
     cd8:	99 27       	eor	r25, r25
     cda:	88 27       	eor	r24, r24
     cdc:	60 e0       	ldi	r22, 0x00	; 0
     cde:	70 e0       	ldi	r23, 0x00	; 0
     ce0:	84 2b       	or	r24, r20
     ce2:	95 2b       	or	r25, r21
     ce4:	a6 2b       	or	r26, r22
     ce6:	b7 2b       	or	r27, r23
     ce8:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     cec:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     cf0:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     cf4:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     cf8:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <mtable+0x4>
     cfc:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <mtable+0x5>
     d00:	30 97       	sbiw	r30, 0x00	; 0
     d02:	39 f0       	breq	.+14     	; 0xd12 <__vector_3+0xb2>
     d04:	62 e0       	ldi	r22, 0x02	; 2
     d06:	70 e0       	ldi	r23, 0x00	; 0
     d08:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <otable+0x4>
     d0c:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <otable+0x5>
     d10:	09 95       	icall
     d12:	0e 94 1d 05 	call	0xa3a	; 0xa3a <schedule>
     d16:	ff 91       	pop	r31
     d18:	ef 91       	pop	r30
     d1a:	bf 91       	pop	r27
     d1c:	af 91       	pop	r26
     d1e:	9f 91       	pop	r25
     d20:	8f 91       	pop	r24
     d22:	7f 91       	pop	r23
     d24:	6f 91       	pop	r22
     d26:	5f 91       	pop	r21
     d28:	4f 91       	pop	r20
     d2a:	3f 91       	pop	r19
     d2c:	2f 91       	pop	r18
     d2e:	0f 90       	pop	r0
     d30:	0f be       	out	0x3f, r0	; 63
     d32:	0f 90       	pop	r0
     d34:	1f 90       	pop	r1
     d36:	18 95       	reti

00000d38 <__vector_4>:
     d38:	1f 92       	push	r1
     d3a:	0f 92       	push	r0
     d3c:	0f b6       	in	r0, 0x3f	; 63
     d3e:	0f 92       	push	r0
     d40:	11 24       	eor	r1, r1
     d42:	2f 93       	push	r18
     d44:	3f 93       	push	r19
     d46:	4f 93       	push	r20
     d48:	5f 93       	push	r21
     d4a:	6f 93       	push	r22
     d4c:	7f 93       	push	r23
     d4e:	8f 93       	push	r24
     d50:	9f 93       	push	r25
     d52:	af 93       	push	r26
     d54:	bf 93       	push	r27
     d56:	ef 93       	push	r30
     d58:	ff 93       	push	r31
     d5a:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     d5e:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     d62:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d66:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d6a:	c9 01       	movw	r24, r18
     d6c:	03 2e       	mov	r0, r19
     d6e:	00 0c       	add	r0, r0
     d70:	aa 0b       	sbc	r26, r26
     d72:	bb 0b       	sbc	r27, r27
     d74:	dc 01       	movw	r26, r24
     d76:	99 27       	eor	r25, r25
     d78:	88 27       	eor	r24, r24
     d7a:	60 e0       	ldi	r22, 0x00	; 0
     d7c:	70 e0       	ldi	r23, 0x00	; 0
     d7e:	84 2b       	or	r24, r20
     d80:	95 2b       	or	r25, r21
     d82:	a6 2b       	or	r26, r22
     d84:	b7 2b       	or	r27, r23
     d86:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     d8a:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     d8e:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     d92:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     d96:	b0 9b       	sbis	0x16, 0	; 22
     d98:	1b c0       	rjmp	.+54     	; 0xdd0 <__vector_4+0x98>
     d9a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d9e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     da2:	c9 01       	movw	r24, r18
     da4:	01 96       	adiw	r24, 0x01	; 1
     da6:	09 2e       	mov	r0, r25
     da8:	00 0c       	add	r0, r0
     daa:	aa 0b       	sbc	r26, r26
     dac:	bb 0b       	sbc	r27, r27
     dae:	dc 01       	movw	r26, r24
     db0:	99 27       	eor	r25, r25
     db2:	88 27       	eor	r24, r24
     db4:	60 e0       	ldi	r22, 0x00	; 0
     db6:	70 e0       	ldi	r23, 0x00	; 0
     db8:	84 2b       	or	r24, r20
     dba:	95 2b       	or	r25, r21
     dbc:	a6 2b       	or	r26, r22
     dbe:	b7 2b       	or	r27, r23
     dc0:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     dc4:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     dc8:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     dcc:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     dd0:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <mtable+0x6>
     dd4:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <mtable+0x7>
     dd8:	30 97       	sbiw	r30, 0x00	; 0
     dda:	39 f0       	breq	.+14     	; 0xdea <__vector_4+0xb2>
     ddc:	63 e0       	ldi	r22, 0x03	; 3
     dde:	70 e0       	ldi	r23, 0x00	; 0
     de0:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <otable+0x6>
     de4:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <otable+0x7>
     de8:	09 95       	icall
     dea:	0e 94 1d 05 	call	0xa3a	; 0xa3a <schedule>
     dee:	ff 91       	pop	r31
     df0:	ef 91       	pop	r30
     df2:	bf 91       	pop	r27
     df4:	af 91       	pop	r26
     df6:	9f 91       	pop	r25
     df8:	8f 91       	pop	r24
     dfa:	7f 91       	pop	r23
     dfc:	6f 91       	pop	r22
     dfe:	5f 91       	pop	r21
     e00:	4f 91       	pop	r20
     e02:	3f 91       	pop	r19
     e04:	2f 91       	pop	r18
     e06:	0f 90       	pop	r0
     e08:	0f be       	out	0x3f, r0	; 63
     e0a:	0f 90       	pop	r0
     e0c:	1f 90       	pop	r1
     e0e:	18 95       	reti

00000e10 <__vector_5>:
     e10:	1f 92       	push	r1
     e12:	0f 92       	push	r0
     e14:	0f b6       	in	r0, 0x3f	; 63
     e16:	0f 92       	push	r0
     e18:	11 24       	eor	r1, r1
     e1a:	2f 93       	push	r18
     e1c:	3f 93       	push	r19
     e1e:	4f 93       	push	r20
     e20:	5f 93       	push	r21
     e22:	6f 93       	push	r22
     e24:	7f 93       	push	r23
     e26:	8f 93       	push	r24
     e28:	9f 93       	push	r25
     e2a:	af 93       	push	r26
     e2c:	bf 93       	push	r27
     e2e:	ef 93       	push	r30
     e30:	ff 93       	push	r31
     e32:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     e36:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     e3a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e3e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e42:	c9 01       	movw	r24, r18
     e44:	03 2e       	mov	r0, r19
     e46:	00 0c       	add	r0, r0
     e48:	aa 0b       	sbc	r26, r26
     e4a:	bb 0b       	sbc	r27, r27
     e4c:	dc 01       	movw	r26, r24
     e4e:	99 27       	eor	r25, r25
     e50:	88 27       	eor	r24, r24
     e52:	60 e0       	ldi	r22, 0x00	; 0
     e54:	70 e0       	ldi	r23, 0x00	; 0
     e56:	84 2b       	or	r24, r20
     e58:	95 2b       	or	r25, r21
     e5a:	a6 2b       	or	r26, r22
     e5c:	b7 2b       	or	r27, r23
     e5e:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     e62:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     e66:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     e6a:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     e6e:	b0 9b       	sbis	0x16, 0	; 22
     e70:	1b c0       	rjmp	.+54     	; 0xea8 <__vector_5+0x98>
     e72:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e76:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e7a:	c9 01       	movw	r24, r18
     e7c:	01 96       	adiw	r24, 0x01	; 1
     e7e:	09 2e       	mov	r0, r25
     e80:	00 0c       	add	r0, r0
     e82:	aa 0b       	sbc	r26, r26
     e84:	bb 0b       	sbc	r27, r27
     e86:	dc 01       	movw	r26, r24
     e88:	99 27       	eor	r25, r25
     e8a:	88 27       	eor	r24, r24
     e8c:	60 e0       	ldi	r22, 0x00	; 0
     e8e:	70 e0       	ldi	r23, 0x00	; 0
     e90:	84 2b       	or	r24, r20
     e92:	95 2b       	or	r25, r21
     e94:	a6 2b       	or	r26, r22
     e96:	b7 2b       	or	r27, r23
     e98:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     e9c:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     ea0:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     ea4:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     ea8:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <mtable+0x8>
     eac:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <mtable+0x9>
     eb0:	30 97       	sbiw	r30, 0x00	; 0
     eb2:	39 f0       	breq	.+14     	; 0xec2 <__vector_5+0xb2>
     eb4:	64 e0       	ldi	r22, 0x04	; 4
     eb6:	70 e0       	ldi	r23, 0x00	; 0
     eb8:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <otable+0x8>
     ebc:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <otable+0x9>
     ec0:	09 95       	icall
     ec2:	0e 94 1d 05 	call	0xa3a	; 0xa3a <schedule>
     ec6:	ff 91       	pop	r31
     ec8:	ef 91       	pop	r30
     eca:	bf 91       	pop	r27
     ecc:	af 91       	pop	r26
     ece:	9f 91       	pop	r25
     ed0:	8f 91       	pop	r24
     ed2:	7f 91       	pop	r23
     ed4:	6f 91       	pop	r22
     ed6:	5f 91       	pop	r21
     ed8:	4f 91       	pop	r20
     eda:	3f 91       	pop	r19
     edc:	2f 91       	pop	r18
     ede:	0f 90       	pop	r0
     ee0:	0f be       	out	0x3f, r0	; 63
     ee2:	0f 90       	pop	r0
     ee4:	1f 90       	pop	r1
     ee6:	18 95       	reti

00000ee8 <__vector_10>:
     ee8:	1f 92       	push	r1
     eea:	0f 92       	push	r0
     eec:	0f b6       	in	r0, 0x3f	; 63
     eee:	0f 92       	push	r0
     ef0:	11 24       	eor	r1, r1
     ef2:	2f 93       	push	r18
     ef4:	3f 93       	push	r19
     ef6:	4f 93       	push	r20
     ef8:	5f 93       	push	r21
     efa:	6f 93       	push	r22
     efc:	7f 93       	push	r23
     efe:	8f 93       	push	r24
     f00:	9f 93       	push	r25
     f02:	af 93       	push	r26
     f04:	bf 93       	push	r27
     f06:	ef 93       	push	r30
     f08:	ff 93       	push	r31
     f0a:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     f0e:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     f12:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f16:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f1a:	c9 01       	movw	r24, r18
     f1c:	03 2e       	mov	r0, r19
     f1e:	00 0c       	add	r0, r0
     f20:	aa 0b       	sbc	r26, r26
     f22:	bb 0b       	sbc	r27, r27
     f24:	dc 01       	movw	r26, r24
     f26:	99 27       	eor	r25, r25
     f28:	88 27       	eor	r24, r24
     f2a:	60 e0       	ldi	r22, 0x00	; 0
     f2c:	70 e0       	ldi	r23, 0x00	; 0
     f2e:	84 2b       	or	r24, r20
     f30:	95 2b       	or	r25, r21
     f32:	a6 2b       	or	r26, r22
     f34:	b7 2b       	or	r27, r23
     f36:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     f3a:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     f3e:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     f42:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     f46:	b0 9b       	sbis	0x16, 0	; 22
     f48:	1b c0       	rjmp	.+54     	; 0xf80 <__vector_10+0x98>
     f4a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f4e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f52:	c9 01       	movw	r24, r18
     f54:	01 96       	adiw	r24, 0x01	; 1
     f56:	09 2e       	mov	r0, r25
     f58:	00 0c       	add	r0, r0
     f5a:	aa 0b       	sbc	r26, r26
     f5c:	bb 0b       	sbc	r27, r27
     f5e:	dc 01       	movw	r26, r24
     f60:	99 27       	eor	r25, r25
     f62:	88 27       	eor	r24, r24
     f64:	60 e0       	ldi	r22, 0x00	; 0
     f66:	70 e0       	ldi	r23, 0x00	; 0
     f68:	84 2b       	or	r24, r20
     f6a:	95 2b       	or	r25, r21
     f6c:	a6 2b       	or	r26, r22
     f6e:	b7 2b       	or	r27, r23
     f70:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     f74:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     f78:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     f7c:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     f80:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <mtable+0xa>
     f84:	f0 91 fd 01 	lds	r31, 0x01FD	; 0x8001fd <mtable+0xb>
     f88:	30 97       	sbiw	r30, 0x00	; 0
     f8a:	39 f0       	breq	.+14     	; 0xf9a <__vector_10+0xb2>
     f8c:	65 e0       	ldi	r22, 0x05	; 5
     f8e:	70 e0       	ldi	r23, 0x00	; 0
     f90:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <otable+0xa>
     f94:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <otable+0xb>
     f98:	09 95       	icall
     f9a:	0e 94 1d 05 	call	0xa3a	; 0xa3a <schedule>
     f9e:	ff 91       	pop	r31
     fa0:	ef 91       	pop	r30
     fa2:	bf 91       	pop	r27
     fa4:	af 91       	pop	r26
     fa6:	9f 91       	pop	r25
     fa8:	8f 91       	pop	r24
     faa:	7f 91       	pop	r23
     fac:	6f 91       	pop	r22
     fae:	5f 91       	pop	r21
     fb0:	4f 91       	pop	r20
     fb2:	3f 91       	pop	r19
     fb4:	2f 91       	pop	r18
     fb6:	0f 90       	pop	r0
     fb8:	0f be       	out	0x3f, r0	; 63
     fba:	0f 90       	pop	r0
     fbc:	1f 90       	pop	r1
     fbe:	18 95       	reti

00000fc0 <__vector_11>:
     fc0:	1f 92       	push	r1
     fc2:	0f 92       	push	r0
     fc4:	0f b6       	in	r0, 0x3f	; 63
     fc6:	0f 92       	push	r0
     fc8:	11 24       	eor	r1, r1
     fca:	2f 93       	push	r18
     fcc:	3f 93       	push	r19
     fce:	4f 93       	push	r20
     fd0:	5f 93       	push	r21
     fd2:	6f 93       	push	r22
     fd4:	7f 93       	push	r23
     fd6:	8f 93       	push	r24
     fd8:	9f 93       	push	r25
     fda:	af 93       	push	r26
     fdc:	bf 93       	push	r27
     fde:	ef 93       	push	r30
     fe0:	ff 93       	push	r31
     fe2:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
     fe6:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
     fea:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fee:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ff2:	c9 01       	movw	r24, r18
     ff4:	03 2e       	mov	r0, r19
     ff6:	00 0c       	add	r0, r0
     ff8:	aa 0b       	sbc	r26, r26
     ffa:	bb 0b       	sbc	r27, r27
     ffc:	dc 01       	movw	r26, r24
     ffe:	99 27       	eor	r25, r25
    1000:	88 27       	eor	r24, r24
    1002:	60 e0       	ldi	r22, 0x00	; 0
    1004:	70 e0       	ldi	r23, 0x00	; 0
    1006:	84 2b       	or	r24, r20
    1008:	95 2b       	or	r25, r21
    100a:	a6 2b       	or	r26, r22
    100c:	b7 2b       	or	r27, r23
    100e:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1012:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1016:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    101a:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    101e:	b0 9b       	sbis	0x16, 0	; 22
    1020:	1b c0       	rjmp	.+54     	; 0x1058 <__vector_11+0x98>
    1022:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1026:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    102a:	c9 01       	movw	r24, r18
    102c:	01 96       	adiw	r24, 0x01	; 1
    102e:	09 2e       	mov	r0, r25
    1030:	00 0c       	add	r0, r0
    1032:	aa 0b       	sbc	r26, r26
    1034:	bb 0b       	sbc	r27, r27
    1036:	dc 01       	movw	r26, r24
    1038:	99 27       	eor	r25, r25
    103a:	88 27       	eor	r24, r24
    103c:	60 e0       	ldi	r22, 0x00	; 0
    103e:	70 e0       	ldi	r23, 0x00	; 0
    1040:	84 2b       	or	r24, r20
    1042:	95 2b       	or	r25, r21
    1044:	a6 2b       	or	r26, r22
    1046:	b7 2b       	or	r27, r23
    1048:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    104c:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1050:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1054:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1058:	e0 91 fe 01 	lds	r30, 0x01FE	; 0x8001fe <mtable+0xc>
    105c:	f0 91 ff 01 	lds	r31, 0x01FF	; 0x8001ff <mtable+0xd>
    1060:	30 97       	sbiw	r30, 0x00	; 0
    1062:	39 f0       	breq	.+14     	; 0x1072 <__vector_11+0xb2>
    1064:	66 e0       	ldi	r22, 0x06	; 6
    1066:	70 e0       	ldi	r23, 0x00	; 0
    1068:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <otable+0xc>
    106c:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <otable+0xd>
    1070:	09 95       	icall
    1072:	0e 94 1d 05 	call	0xa3a	; 0xa3a <schedule>
    1076:	ff 91       	pop	r31
    1078:	ef 91       	pop	r30
    107a:	bf 91       	pop	r27
    107c:	af 91       	pop	r26
    107e:	9f 91       	pop	r25
    1080:	8f 91       	pop	r24
    1082:	7f 91       	pop	r23
    1084:	6f 91       	pop	r22
    1086:	5f 91       	pop	r21
    1088:	4f 91       	pop	r20
    108a:	3f 91       	pop	r19
    108c:	2f 91       	pop	r18
    108e:	0f 90       	pop	r0
    1090:	0f be       	out	0x3f, r0	; 63
    1092:	0f 90       	pop	r0
    1094:	1f 90       	pop	r1
    1096:	18 95       	reti

00001098 <__vector_12>:
    1098:	1f 92       	push	r1
    109a:	0f 92       	push	r0
    109c:	0f b6       	in	r0, 0x3f	; 63
    109e:	0f 92       	push	r0
    10a0:	11 24       	eor	r1, r1
    10a2:	2f 93       	push	r18
    10a4:	3f 93       	push	r19
    10a6:	4f 93       	push	r20
    10a8:	5f 93       	push	r21
    10aa:	6f 93       	push	r22
    10ac:	7f 93       	push	r23
    10ae:	8f 93       	push	r24
    10b0:	9f 93       	push	r25
    10b2:	af 93       	push	r26
    10b4:	bf 93       	push	r27
    10b6:	ef 93       	push	r30
    10b8:	ff 93       	push	r31
    10ba:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    10be:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    10c2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10c6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10ca:	c9 01       	movw	r24, r18
    10cc:	03 2e       	mov	r0, r19
    10ce:	00 0c       	add	r0, r0
    10d0:	aa 0b       	sbc	r26, r26
    10d2:	bb 0b       	sbc	r27, r27
    10d4:	dc 01       	movw	r26, r24
    10d6:	99 27       	eor	r25, r25
    10d8:	88 27       	eor	r24, r24
    10da:	60 e0       	ldi	r22, 0x00	; 0
    10dc:	70 e0       	ldi	r23, 0x00	; 0
    10de:	84 2b       	or	r24, r20
    10e0:	95 2b       	or	r25, r21
    10e2:	a6 2b       	or	r26, r22
    10e4:	b7 2b       	or	r27, r23
    10e6:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    10ea:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    10ee:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    10f2:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    10f6:	b0 9b       	sbis	0x16, 0	; 22
    10f8:	1b c0       	rjmp	.+54     	; 0x1130 <__vector_12+0x98>
    10fa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10fe:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1102:	c9 01       	movw	r24, r18
    1104:	01 96       	adiw	r24, 0x01	; 1
    1106:	09 2e       	mov	r0, r25
    1108:	00 0c       	add	r0, r0
    110a:	aa 0b       	sbc	r26, r26
    110c:	bb 0b       	sbc	r27, r27
    110e:	dc 01       	movw	r26, r24
    1110:	99 27       	eor	r25, r25
    1112:	88 27       	eor	r24, r24
    1114:	60 e0       	ldi	r22, 0x00	; 0
    1116:	70 e0       	ldi	r23, 0x00	; 0
    1118:	84 2b       	or	r24, r20
    111a:	95 2b       	or	r25, r21
    111c:	a6 2b       	or	r26, r22
    111e:	b7 2b       	or	r27, r23
    1120:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1124:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1128:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    112c:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1130:	e0 91 00 02 	lds	r30, 0x0200	; 0x800200 <mtable+0xe>
    1134:	f0 91 01 02 	lds	r31, 0x0201	; 0x800201 <mtable+0xf>
    1138:	30 97       	sbiw	r30, 0x00	; 0
    113a:	39 f0       	breq	.+14     	; 0x114a <__vector_12+0xb2>
    113c:	67 e0       	ldi	r22, 0x07	; 7
    113e:	70 e0       	ldi	r23, 0x00	; 0
    1140:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <otable+0xe>
    1144:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <otable+0xf>
    1148:	09 95       	icall
    114a:	0e 94 1d 05 	call	0xa3a	; 0xa3a <schedule>
    114e:	ff 91       	pop	r31
    1150:	ef 91       	pop	r30
    1152:	bf 91       	pop	r27
    1154:	af 91       	pop	r26
    1156:	9f 91       	pop	r25
    1158:	8f 91       	pop	r24
    115a:	7f 91       	pop	r23
    115c:	6f 91       	pop	r22
    115e:	5f 91       	pop	r21
    1160:	4f 91       	pop	r20
    1162:	3f 91       	pop	r19
    1164:	2f 91       	pop	r18
    1166:	0f 90       	pop	r0
    1168:	0f be       	out	0x3f, r0	; 63
    116a:	0f 90       	pop	r0
    116c:	1f 90       	pop	r1
    116e:	18 95       	reti

00001170 <__vector_13>:
    1170:	1f 92       	push	r1
    1172:	0f 92       	push	r0
    1174:	0f b6       	in	r0, 0x3f	; 63
    1176:	0f 92       	push	r0
    1178:	11 24       	eor	r1, r1
    117a:	2f 93       	push	r18
    117c:	3f 93       	push	r19
    117e:	4f 93       	push	r20
    1180:	5f 93       	push	r21
    1182:	6f 93       	push	r22
    1184:	7f 93       	push	r23
    1186:	8f 93       	push	r24
    1188:	9f 93       	push	r25
    118a:	af 93       	push	r26
    118c:	bf 93       	push	r27
    118e:	ef 93       	push	r30
    1190:	ff 93       	push	r31
    1192:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    1196:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    119a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    119e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11a2:	c9 01       	movw	r24, r18
    11a4:	03 2e       	mov	r0, r19
    11a6:	00 0c       	add	r0, r0
    11a8:	aa 0b       	sbc	r26, r26
    11aa:	bb 0b       	sbc	r27, r27
    11ac:	dc 01       	movw	r26, r24
    11ae:	99 27       	eor	r25, r25
    11b0:	88 27       	eor	r24, r24
    11b2:	60 e0       	ldi	r22, 0x00	; 0
    11b4:	70 e0       	ldi	r23, 0x00	; 0
    11b6:	84 2b       	or	r24, r20
    11b8:	95 2b       	or	r25, r21
    11ba:	a6 2b       	or	r26, r22
    11bc:	b7 2b       	or	r27, r23
    11be:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    11c2:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    11c6:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    11ca:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    11ce:	b0 9b       	sbis	0x16, 0	; 22
    11d0:	1b c0       	rjmp	.+54     	; 0x1208 <__vector_13+0x98>
    11d2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11d6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11da:	c9 01       	movw	r24, r18
    11dc:	01 96       	adiw	r24, 0x01	; 1
    11de:	09 2e       	mov	r0, r25
    11e0:	00 0c       	add	r0, r0
    11e2:	aa 0b       	sbc	r26, r26
    11e4:	bb 0b       	sbc	r27, r27
    11e6:	dc 01       	movw	r26, r24
    11e8:	99 27       	eor	r25, r25
    11ea:	88 27       	eor	r24, r24
    11ec:	60 e0       	ldi	r22, 0x00	; 0
    11ee:	70 e0       	ldi	r23, 0x00	; 0
    11f0:	84 2b       	or	r24, r20
    11f2:	95 2b       	or	r25, r21
    11f4:	a6 2b       	or	r26, r22
    11f6:	b7 2b       	or	r27, r23
    11f8:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    11fc:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1200:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1204:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1208:	e0 91 02 02 	lds	r30, 0x0202	; 0x800202 <mtable+0x10>
    120c:	f0 91 03 02 	lds	r31, 0x0203	; 0x800203 <mtable+0x11>
    1210:	30 97       	sbiw	r30, 0x00	; 0
    1212:	39 f0       	breq	.+14     	; 0x1222 <__vector_13+0xb2>
    1214:	68 e0       	ldi	r22, 0x08	; 8
    1216:	70 e0       	ldi	r23, 0x00	; 0
    1218:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <otable+0x10>
    121c:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <otable+0x11>
    1220:	09 95       	icall
    1222:	0e 94 1d 05 	call	0xa3a	; 0xa3a <schedule>
    1226:	ff 91       	pop	r31
    1228:	ef 91       	pop	r30
    122a:	bf 91       	pop	r27
    122c:	af 91       	pop	r26
    122e:	9f 91       	pop	r25
    1230:	8f 91       	pop	r24
    1232:	7f 91       	pop	r23
    1234:	6f 91       	pop	r22
    1236:	5f 91       	pop	r21
    1238:	4f 91       	pop	r20
    123a:	3f 91       	pop	r19
    123c:	2f 91       	pop	r18
    123e:	0f 90       	pop	r0
    1240:	0f be       	out	0x3f, r0	; 63
    1242:	0f 90       	pop	r0
    1244:	1f 90       	pop	r1
    1246:	18 95       	reti

00001248 <__vector_14>:
    1248:	1f 92       	push	r1
    124a:	0f 92       	push	r0
    124c:	0f b6       	in	r0, 0x3f	; 63
    124e:	0f 92       	push	r0
    1250:	11 24       	eor	r1, r1
    1252:	2f 93       	push	r18
    1254:	3f 93       	push	r19
    1256:	4f 93       	push	r20
    1258:	5f 93       	push	r21
    125a:	6f 93       	push	r22
    125c:	7f 93       	push	r23
    125e:	8f 93       	push	r24
    1260:	9f 93       	push	r25
    1262:	af 93       	push	r26
    1264:	bf 93       	push	r27
    1266:	ef 93       	push	r30
    1268:	ff 93       	push	r31
    126a:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    126e:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1272:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1276:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    127a:	c9 01       	movw	r24, r18
    127c:	03 2e       	mov	r0, r19
    127e:	00 0c       	add	r0, r0
    1280:	aa 0b       	sbc	r26, r26
    1282:	bb 0b       	sbc	r27, r27
    1284:	dc 01       	movw	r26, r24
    1286:	99 27       	eor	r25, r25
    1288:	88 27       	eor	r24, r24
    128a:	60 e0       	ldi	r22, 0x00	; 0
    128c:	70 e0       	ldi	r23, 0x00	; 0
    128e:	84 2b       	or	r24, r20
    1290:	95 2b       	or	r25, r21
    1292:	a6 2b       	or	r26, r22
    1294:	b7 2b       	or	r27, r23
    1296:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    129a:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    129e:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    12a2:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    12a6:	b0 9b       	sbis	0x16, 0	; 22
    12a8:	1b c0       	rjmp	.+54     	; 0x12e0 <__vector_14+0x98>
    12aa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12ae:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12b2:	c9 01       	movw	r24, r18
    12b4:	01 96       	adiw	r24, 0x01	; 1
    12b6:	09 2e       	mov	r0, r25
    12b8:	00 0c       	add	r0, r0
    12ba:	aa 0b       	sbc	r26, r26
    12bc:	bb 0b       	sbc	r27, r27
    12be:	dc 01       	movw	r26, r24
    12c0:	99 27       	eor	r25, r25
    12c2:	88 27       	eor	r24, r24
    12c4:	60 e0       	ldi	r22, 0x00	; 0
    12c6:	70 e0       	ldi	r23, 0x00	; 0
    12c8:	84 2b       	or	r24, r20
    12ca:	95 2b       	or	r25, r21
    12cc:	a6 2b       	or	r26, r22
    12ce:	b7 2b       	or	r27, r23
    12d0:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    12d4:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    12d8:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    12dc:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    12e0:	e0 91 04 02 	lds	r30, 0x0204	; 0x800204 <mtable+0x12>
    12e4:	f0 91 05 02 	lds	r31, 0x0205	; 0x800205 <mtable+0x13>
    12e8:	30 97       	sbiw	r30, 0x00	; 0
    12ea:	39 f0       	breq	.+14     	; 0x12fa <__vector_14+0xb2>
    12ec:	69 e0       	ldi	r22, 0x09	; 9
    12ee:	70 e0       	ldi	r23, 0x00	; 0
    12f0:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <otable+0x12>
    12f4:	90 91 6d 01 	lds	r25, 0x016D	; 0x80016d <otable+0x13>
    12f8:	09 95       	icall
    12fa:	0e 94 1d 05 	call	0xa3a	; 0xa3a <schedule>
    12fe:	ff 91       	pop	r31
    1300:	ef 91       	pop	r30
    1302:	bf 91       	pop	r27
    1304:	af 91       	pop	r26
    1306:	9f 91       	pop	r25
    1308:	8f 91       	pop	r24
    130a:	7f 91       	pop	r23
    130c:	6f 91       	pop	r22
    130e:	5f 91       	pop	r21
    1310:	4f 91       	pop	r20
    1312:	3f 91       	pop	r19
    1314:	2f 91       	pop	r18
    1316:	0f 90       	pop	r0
    1318:	0f be       	out	0x3f, r0	; 63
    131a:	0f 90       	pop	r0
    131c:	1f 90       	pop	r1
    131e:	18 95       	reti

00001320 <__vector_15>:
    1320:	1f 92       	push	r1
    1322:	0f 92       	push	r0
    1324:	0f b6       	in	r0, 0x3f	; 63
    1326:	0f 92       	push	r0
    1328:	11 24       	eor	r1, r1
    132a:	2f 93       	push	r18
    132c:	3f 93       	push	r19
    132e:	4f 93       	push	r20
    1330:	5f 93       	push	r21
    1332:	6f 93       	push	r22
    1334:	7f 93       	push	r23
    1336:	8f 93       	push	r24
    1338:	9f 93       	push	r25
    133a:	af 93       	push	r26
    133c:	bf 93       	push	r27
    133e:	ef 93       	push	r30
    1340:	ff 93       	push	r31
    1342:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    1346:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    134a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    134e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1352:	c9 01       	movw	r24, r18
    1354:	03 2e       	mov	r0, r19
    1356:	00 0c       	add	r0, r0
    1358:	aa 0b       	sbc	r26, r26
    135a:	bb 0b       	sbc	r27, r27
    135c:	dc 01       	movw	r26, r24
    135e:	99 27       	eor	r25, r25
    1360:	88 27       	eor	r24, r24
    1362:	60 e0       	ldi	r22, 0x00	; 0
    1364:	70 e0       	ldi	r23, 0x00	; 0
    1366:	84 2b       	or	r24, r20
    1368:	95 2b       	or	r25, r21
    136a:	a6 2b       	or	r26, r22
    136c:	b7 2b       	or	r27, r23
    136e:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1372:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1376:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    137a:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    137e:	b0 9b       	sbis	0x16, 0	; 22
    1380:	1b c0       	rjmp	.+54     	; 0x13b8 <__vector_15+0x98>
    1382:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1386:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    138a:	c9 01       	movw	r24, r18
    138c:	01 96       	adiw	r24, 0x01	; 1
    138e:	09 2e       	mov	r0, r25
    1390:	00 0c       	add	r0, r0
    1392:	aa 0b       	sbc	r26, r26
    1394:	bb 0b       	sbc	r27, r27
    1396:	dc 01       	movw	r26, r24
    1398:	99 27       	eor	r25, r25
    139a:	88 27       	eor	r24, r24
    139c:	60 e0       	ldi	r22, 0x00	; 0
    139e:	70 e0       	ldi	r23, 0x00	; 0
    13a0:	84 2b       	or	r24, r20
    13a2:	95 2b       	or	r25, r21
    13a4:	a6 2b       	or	r26, r22
    13a6:	b7 2b       	or	r27, r23
    13a8:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    13ac:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    13b0:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    13b4:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    13b8:	e0 91 06 02 	lds	r30, 0x0206	; 0x800206 <mtable+0x14>
    13bc:	f0 91 07 02 	lds	r31, 0x0207	; 0x800207 <mtable+0x15>
    13c0:	30 97       	sbiw	r30, 0x00	; 0
    13c2:	39 f0       	breq	.+14     	; 0x13d2 <__vector_15+0xb2>
    13c4:	6a e0       	ldi	r22, 0x0A	; 10
    13c6:	70 e0       	ldi	r23, 0x00	; 0
    13c8:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <otable+0x14>
    13cc:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <otable+0x15>
    13d0:	09 95       	icall
    13d2:	0e 94 1d 05 	call	0xa3a	; 0xa3a <schedule>
    13d6:	ff 91       	pop	r31
    13d8:	ef 91       	pop	r30
    13da:	bf 91       	pop	r27
    13dc:	af 91       	pop	r26
    13de:	9f 91       	pop	r25
    13e0:	8f 91       	pop	r24
    13e2:	7f 91       	pop	r23
    13e4:	6f 91       	pop	r22
    13e6:	5f 91       	pop	r21
    13e8:	4f 91       	pop	r20
    13ea:	3f 91       	pop	r19
    13ec:	2f 91       	pop	r18
    13ee:	0f 90       	pop	r0
    13f0:	0f be       	out	0x3f, r0	; 63
    13f2:	0f 90       	pop	r0
    13f4:	1f 90       	pop	r1
    13f6:	18 95       	reti

000013f8 <__vector_16>:
    13f8:	1f 92       	push	r1
    13fa:	0f 92       	push	r0
    13fc:	0f b6       	in	r0, 0x3f	; 63
    13fe:	0f 92       	push	r0
    1400:	11 24       	eor	r1, r1
    1402:	2f 93       	push	r18
    1404:	3f 93       	push	r19
    1406:	4f 93       	push	r20
    1408:	5f 93       	push	r21
    140a:	6f 93       	push	r22
    140c:	7f 93       	push	r23
    140e:	8f 93       	push	r24
    1410:	9f 93       	push	r25
    1412:	af 93       	push	r26
    1414:	bf 93       	push	r27
    1416:	ef 93       	push	r30
    1418:	ff 93       	push	r31
    141a:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    141e:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1422:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1426:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    142a:	c9 01       	movw	r24, r18
    142c:	03 2e       	mov	r0, r19
    142e:	00 0c       	add	r0, r0
    1430:	aa 0b       	sbc	r26, r26
    1432:	bb 0b       	sbc	r27, r27
    1434:	dc 01       	movw	r26, r24
    1436:	99 27       	eor	r25, r25
    1438:	88 27       	eor	r24, r24
    143a:	60 e0       	ldi	r22, 0x00	; 0
    143c:	70 e0       	ldi	r23, 0x00	; 0
    143e:	84 2b       	or	r24, r20
    1440:	95 2b       	or	r25, r21
    1442:	a6 2b       	or	r26, r22
    1444:	b7 2b       	or	r27, r23
    1446:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    144a:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    144e:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1452:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1456:	b0 9b       	sbis	0x16, 0	; 22
    1458:	1b c0       	rjmp	.+54     	; 0x1490 <__vector_16+0x98>
    145a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    145e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1462:	c9 01       	movw	r24, r18
    1464:	01 96       	adiw	r24, 0x01	; 1
    1466:	09 2e       	mov	r0, r25
    1468:	00 0c       	add	r0, r0
    146a:	aa 0b       	sbc	r26, r26
    146c:	bb 0b       	sbc	r27, r27
    146e:	dc 01       	movw	r26, r24
    1470:	99 27       	eor	r25, r25
    1472:	88 27       	eor	r24, r24
    1474:	60 e0       	ldi	r22, 0x00	; 0
    1476:	70 e0       	ldi	r23, 0x00	; 0
    1478:	84 2b       	or	r24, r20
    147a:	95 2b       	or	r25, r21
    147c:	a6 2b       	or	r26, r22
    147e:	b7 2b       	or	r27, r23
    1480:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1484:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1488:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    148c:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1490:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <mtable+0x16>
    1494:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <mtable+0x17>
    1498:	30 97       	sbiw	r30, 0x00	; 0
    149a:	39 f0       	breq	.+14     	; 0x14aa <__vector_16+0xb2>
    149c:	6b e0       	ldi	r22, 0x0B	; 11
    149e:	70 e0       	ldi	r23, 0x00	; 0
    14a0:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <otable+0x16>
    14a4:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <otable+0x17>
    14a8:	09 95       	icall
    14aa:	0e 94 1d 05 	call	0xa3a	; 0xa3a <schedule>
    14ae:	ff 91       	pop	r31
    14b0:	ef 91       	pop	r30
    14b2:	bf 91       	pop	r27
    14b4:	af 91       	pop	r26
    14b6:	9f 91       	pop	r25
    14b8:	8f 91       	pop	r24
    14ba:	7f 91       	pop	r23
    14bc:	6f 91       	pop	r22
    14be:	5f 91       	pop	r21
    14c0:	4f 91       	pop	r20
    14c2:	3f 91       	pop	r19
    14c4:	2f 91       	pop	r18
    14c6:	0f 90       	pop	r0
    14c8:	0f be       	out	0x3f, r0	; 63
    14ca:	0f 90       	pop	r0
    14cc:	1f 90       	pop	r1
    14ce:	18 95       	reti

000014d0 <__vector_17>:
    14d0:	1f 92       	push	r1
    14d2:	0f 92       	push	r0
    14d4:	0f b6       	in	r0, 0x3f	; 63
    14d6:	0f 92       	push	r0
    14d8:	11 24       	eor	r1, r1
    14da:	2f 93       	push	r18
    14dc:	3f 93       	push	r19
    14de:	4f 93       	push	r20
    14e0:	5f 93       	push	r21
    14e2:	6f 93       	push	r22
    14e4:	7f 93       	push	r23
    14e6:	8f 93       	push	r24
    14e8:	9f 93       	push	r25
    14ea:	af 93       	push	r26
    14ec:	bf 93       	push	r27
    14ee:	ef 93       	push	r30
    14f0:	ff 93       	push	r31
    14f2:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    14f6:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    14fa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14fe:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1502:	c9 01       	movw	r24, r18
    1504:	03 2e       	mov	r0, r19
    1506:	00 0c       	add	r0, r0
    1508:	aa 0b       	sbc	r26, r26
    150a:	bb 0b       	sbc	r27, r27
    150c:	dc 01       	movw	r26, r24
    150e:	99 27       	eor	r25, r25
    1510:	88 27       	eor	r24, r24
    1512:	60 e0       	ldi	r22, 0x00	; 0
    1514:	70 e0       	ldi	r23, 0x00	; 0
    1516:	84 2b       	or	r24, r20
    1518:	95 2b       	or	r25, r21
    151a:	a6 2b       	or	r26, r22
    151c:	b7 2b       	or	r27, r23
    151e:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1522:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1526:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    152a:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    152e:	b0 9b       	sbis	0x16, 0	; 22
    1530:	1b c0       	rjmp	.+54     	; 0x1568 <__vector_17+0x98>
    1532:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1536:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    153a:	c9 01       	movw	r24, r18
    153c:	01 96       	adiw	r24, 0x01	; 1
    153e:	09 2e       	mov	r0, r25
    1540:	00 0c       	add	r0, r0
    1542:	aa 0b       	sbc	r26, r26
    1544:	bb 0b       	sbc	r27, r27
    1546:	dc 01       	movw	r26, r24
    1548:	99 27       	eor	r25, r25
    154a:	88 27       	eor	r24, r24
    154c:	60 e0       	ldi	r22, 0x00	; 0
    154e:	70 e0       	ldi	r23, 0x00	; 0
    1550:	84 2b       	or	r24, r20
    1552:	95 2b       	or	r25, r21
    1554:	a6 2b       	or	r26, r22
    1556:	b7 2b       	or	r27, r23
    1558:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    155c:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1560:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1564:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1568:	e0 91 0a 02 	lds	r30, 0x020A	; 0x80020a <mtable+0x18>
    156c:	f0 91 0b 02 	lds	r31, 0x020B	; 0x80020b <mtable+0x19>
    1570:	30 97       	sbiw	r30, 0x00	; 0
    1572:	39 f0       	breq	.+14     	; 0x1582 <__vector_17+0xb2>
    1574:	6c e0       	ldi	r22, 0x0C	; 12
    1576:	70 e0       	ldi	r23, 0x00	; 0
    1578:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <otable+0x18>
    157c:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <otable+0x19>
    1580:	09 95       	icall
    1582:	0e 94 1d 05 	call	0xa3a	; 0xa3a <schedule>
    1586:	ff 91       	pop	r31
    1588:	ef 91       	pop	r30
    158a:	bf 91       	pop	r27
    158c:	af 91       	pop	r26
    158e:	9f 91       	pop	r25
    1590:	8f 91       	pop	r24
    1592:	7f 91       	pop	r23
    1594:	6f 91       	pop	r22
    1596:	5f 91       	pop	r21
    1598:	4f 91       	pop	r20
    159a:	3f 91       	pop	r19
    159c:	2f 91       	pop	r18
    159e:	0f 90       	pop	r0
    15a0:	0f be       	out	0x3f, r0	; 63
    15a2:	0f 90       	pop	r0
    15a4:	1f 90       	pop	r1
    15a6:	18 95       	reti

000015a8 <__vector_18>:
    15a8:	1f 92       	push	r1
    15aa:	0f 92       	push	r0
    15ac:	0f b6       	in	r0, 0x3f	; 63
    15ae:	0f 92       	push	r0
    15b0:	11 24       	eor	r1, r1
    15b2:	2f 93       	push	r18
    15b4:	3f 93       	push	r19
    15b6:	4f 93       	push	r20
    15b8:	5f 93       	push	r21
    15ba:	6f 93       	push	r22
    15bc:	7f 93       	push	r23
    15be:	8f 93       	push	r24
    15c0:	9f 93       	push	r25
    15c2:	af 93       	push	r26
    15c4:	bf 93       	push	r27
    15c6:	ef 93       	push	r30
    15c8:	ff 93       	push	r31
    15ca:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    15ce:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    15d2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15d6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15da:	c9 01       	movw	r24, r18
    15dc:	03 2e       	mov	r0, r19
    15de:	00 0c       	add	r0, r0
    15e0:	aa 0b       	sbc	r26, r26
    15e2:	bb 0b       	sbc	r27, r27
    15e4:	dc 01       	movw	r26, r24
    15e6:	99 27       	eor	r25, r25
    15e8:	88 27       	eor	r24, r24
    15ea:	60 e0       	ldi	r22, 0x00	; 0
    15ec:	70 e0       	ldi	r23, 0x00	; 0
    15ee:	84 2b       	or	r24, r20
    15f0:	95 2b       	or	r25, r21
    15f2:	a6 2b       	or	r26, r22
    15f4:	b7 2b       	or	r27, r23
    15f6:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    15fa:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    15fe:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1602:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1606:	b0 9b       	sbis	0x16, 0	; 22
    1608:	1b c0       	rjmp	.+54     	; 0x1640 <__vector_18+0x98>
    160a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    160e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1612:	c9 01       	movw	r24, r18
    1614:	01 96       	adiw	r24, 0x01	; 1
    1616:	09 2e       	mov	r0, r25
    1618:	00 0c       	add	r0, r0
    161a:	aa 0b       	sbc	r26, r26
    161c:	bb 0b       	sbc	r27, r27
    161e:	dc 01       	movw	r26, r24
    1620:	99 27       	eor	r25, r25
    1622:	88 27       	eor	r24, r24
    1624:	60 e0       	ldi	r22, 0x00	; 0
    1626:	70 e0       	ldi	r23, 0x00	; 0
    1628:	84 2b       	or	r24, r20
    162a:	95 2b       	or	r25, r21
    162c:	a6 2b       	or	r26, r22
    162e:	b7 2b       	or	r27, r23
    1630:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1634:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1638:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    163c:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1640:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <mtable+0x1a>
    1644:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <mtable+0x1b>
    1648:	30 97       	sbiw	r30, 0x00	; 0
    164a:	39 f0       	breq	.+14     	; 0x165a <__vector_18+0xb2>
    164c:	6d e0       	ldi	r22, 0x0D	; 13
    164e:	70 e0       	ldi	r23, 0x00	; 0
    1650:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <otable+0x1a>
    1654:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <otable+0x1b>
    1658:	09 95       	icall
    165a:	0e 94 1d 05 	call	0xa3a	; 0xa3a <schedule>
    165e:	ff 91       	pop	r31
    1660:	ef 91       	pop	r30
    1662:	bf 91       	pop	r27
    1664:	af 91       	pop	r26
    1666:	9f 91       	pop	r25
    1668:	8f 91       	pop	r24
    166a:	7f 91       	pop	r23
    166c:	6f 91       	pop	r22
    166e:	5f 91       	pop	r21
    1670:	4f 91       	pop	r20
    1672:	3f 91       	pop	r19
    1674:	2f 91       	pop	r18
    1676:	0f 90       	pop	r0
    1678:	0f be       	out	0x3f, r0	; 63
    167a:	0f 90       	pop	r0
    167c:	1f 90       	pop	r1
    167e:	18 95       	reti

00001680 <__vector_19>:
    1680:	1f 92       	push	r1
    1682:	0f 92       	push	r0
    1684:	0f b6       	in	r0, 0x3f	; 63
    1686:	0f 92       	push	r0
    1688:	11 24       	eor	r1, r1
    168a:	2f 93       	push	r18
    168c:	3f 93       	push	r19
    168e:	4f 93       	push	r20
    1690:	5f 93       	push	r21
    1692:	6f 93       	push	r22
    1694:	7f 93       	push	r23
    1696:	8f 93       	push	r24
    1698:	9f 93       	push	r25
    169a:	af 93       	push	r26
    169c:	bf 93       	push	r27
    169e:	ef 93       	push	r30
    16a0:	ff 93       	push	r31
    16a2:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    16a6:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    16aa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16ae:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16b2:	c9 01       	movw	r24, r18
    16b4:	03 2e       	mov	r0, r19
    16b6:	00 0c       	add	r0, r0
    16b8:	aa 0b       	sbc	r26, r26
    16ba:	bb 0b       	sbc	r27, r27
    16bc:	dc 01       	movw	r26, r24
    16be:	99 27       	eor	r25, r25
    16c0:	88 27       	eor	r24, r24
    16c2:	60 e0       	ldi	r22, 0x00	; 0
    16c4:	70 e0       	ldi	r23, 0x00	; 0
    16c6:	84 2b       	or	r24, r20
    16c8:	95 2b       	or	r25, r21
    16ca:	a6 2b       	or	r26, r22
    16cc:	b7 2b       	or	r27, r23
    16ce:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    16d2:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    16d6:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    16da:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    16de:	b0 9b       	sbis	0x16, 0	; 22
    16e0:	1b c0       	rjmp	.+54     	; 0x1718 <__vector_19+0x98>
    16e2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16e6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16ea:	c9 01       	movw	r24, r18
    16ec:	01 96       	adiw	r24, 0x01	; 1
    16ee:	09 2e       	mov	r0, r25
    16f0:	00 0c       	add	r0, r0
    16f2:	aa 0b       	sbc	r26, r26
    16f4:	bb 0b       	sbc	r27, r27
    16f6:	dc 01       	movw	r26, r24
    16f8:	99 27       	eor	r25, r25
    16fa:	88 27       	eor	r24, r24
    16fc:	60 e0       	ldi	r22, 0x00	; 0
    16fe:	70 e0       	ldi	r23, 0x00	; 0
    1700:	84 2b       	or	r24, r20
    1702:	95 2b       	or	r25, r21
    1704:	a6 2b       	or	r26, r22
    1706:	b7 2b       	or	r27, r23
    1708:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    170c:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1710:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1714:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1718:	e0 91 0e 02 	lds	r30, 0x020E	; 0x80020e <mtable+0x1c>
    171c:	f0 91 0f 02 	lds	r31, 0x020F	; 0x80020f <mtable+0x1d>
    1720:	30 97       	sbiw	r30, 0x00	; 0
    1722:	39 f0       	breq	.+14     	; 0x1732 <__vector_19+0xb2>
    1724:	6e e0       	ldi	r22, 0x0E	; 14
    1726:	70 e0       	ldi	r23, 0x00	; 0
    1728:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <otable+0x1c>
    172c:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <otable+0x1d>
    1730:	09 95       	icall
    1732:	0e 94 1d 05 	call	0xa3a	; 0xa3a <schedule>
    1736:	ff 91       	pop	r31
    1738:	ef 91       	pop	r30
    173a:	bf 91       	pop	r27
    173c:	af 91       	pop	r26
    173e:	9f 91       	pop	r25
    1740:	8f 91       	pop	r24
    1742:	7f 91       	pop	r23
    1744:	6f 91       	pop	r22
    1746:	5f 91       	pop	r21
    1748:	4f 91       	pop	r20
    174a:	3f 91       	pop	r19
    174c:	2f 91       	pop	r18
    174e:	0f 90       	pop	r0
    1750:	0f be       	out	0x3f, r0	; 63
    1752:	0f 90       	pop	r0
    1754:	1f 90       	pop	r1
    1756:	18 95       	reti

00001758 <__vector_20>:
    1758:	1f 92       	push	r1
    175a:	0f 92       	push	r0
    175c:	0f b6       	in	r0, 0x3f	; 63
    175e:	0f 92       	push	r0
    1760:	11 24       	eor	r1, r1
    1762:	2f 93       	push	r18
    1764:	3f 93       	push	r19
    1766:	4f 93       	push	r20
    1768:	5f 93       	push	r21
    176a:	6f 93       	push	r22
    176c:	7f 93       	push	r23
    176e:	8f 93       	push	r24
    1770:	9f 93       	push	r25
    1772:	af 93       	push	r26
    1774:	bf 93       	push	r27
    1776:	ef 93       	push	r30
    1778:	ff 93       	push	r31
    177a:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    177e:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1782:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1786:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    178a:	c9 01       	movw	r24, r18
    178c:	03 2e       	mov	r0, r19
    178e:	00 0c       	add	r0, r0
    1790:	aa 0b       	sbc	r26, r26
    1792:	bb 0b       	sbc	r27, r27
    1794:	dc 01       	movw	r26, r24
    1796:	99 27       	eor	r25, r25
    1798:	88 27       	eor	r24, r24
    179a:	60 e0       	ldi	r22, 0x00	; 0
    179c:	70 e0       	ldi	r23, 0x00	; 0
    179e:	84 2b       	or	r24, r20
    17a0:	95 2b       	or	r25, r21
    17a2:	a6 2b       	or	r26, r22
    17a4:	b7 2b       	or	r27, r23
    17a6:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    17aa:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    17ae:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    17b2:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    17b6:	b0 9b       	sbis	0x16, 0	; 22
    17b8:	1b c0       	rjmp	.+54     	; 0x17f0 <__vector_20+0x98>
    17ba:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17be:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17c2:	c9 01       	movw	r24, r18
    17c4:	01 96       	adiw	r24, 0x01	; 1
    17c6:	09 2e       	mov	r0, r25
    17c8:	00 0c       	add	r0, r0
    17ca:	aa 0b       	sbc	r26, r26
    17cc:	bb 0b       	sbc	r27, r27
    17ce:	dc 01       	movw	r26, r24
    17d0:	99 27       	eor	r25, r25
    17d2:	88 27       	eor	r24, r24
    17d4:	60 e0       	ldi	r22, 0x00	; 0
    17d6:	70 e0       	ldi	r23, 0x00	; 0
    17d8:	84 2b       	or	r24, r20
    17da:	95 2b       	or	r25, r21
    17dc:	a6 2b       	or	r26, r22
    17de:	b7 2b       	or	r27, r23
    17e0:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    17e4:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    17e8:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    17ec:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    17f0:	e0 91 10 02 	lds	r30, 0x0210	; 0x800210 <mtable+0x1e>
    17f4:	f0 91 11 02 	lds	r31, 0x0211	; 0x800211 <mtable+0x1f>
    17f8:	30 97       	sbiw	r30, 0x00	; 0
    17fa:	39 f0       	breq	.+14     	; 0x180a <__vector_20+0xb2>
    17fc:	6f e0       	ldi	r22, 0x0F	; 15
    17fe:	70 e0       	ldi	r23, 0x00	; 0
    1800:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <otable+0x1e>
    1804:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <otable+0x1f>
    1808:	09 95       	icall
    180a:	0e 94 1d 05 	call	0xa3a	; 0xa3a <schedule>
    180e:	ff 91       	pop	r31
    1810:	ef 91       	pop	r30
    1812:	bf 91       	pop	r27
    1814:	af 91       	pop	r26
    1816:	9f 91       	pop	r25
    1818:	8f 91       	pop	r24
    181a:	7f 91       	pop	r23
    181c:	6f 91       	pop	r22
    181e:	5f 91       	pop	r21
    1820:	4f 91       	pop	r20
    1822:	3f 91       	pop	r19
    1824:	2f 91       	pop	r18
    1826:	0f 90       	pop	r0
    1828:	0f be       	out	0x3f, r0	; 63
    182a:	0f 90       	pop	r0
    182c:	1f 90       	pop	r1
    182e:	18 95       	reti

00001830 <__vector_21>:
    1830:	1f 92       	push	r1
    1832:	0f 92       	push	r0
    1834:	0f b6       	in	r0, 0x3f	; 63
    1836:	0f 92       	push	r0
    1838:	11 24       	eor	r1, r1
    183a:	2f 93       	push	r18
    183c:	3f 93       	push	r19
    183e:	4f 93       	push	r20
    1840:	5f 93       	push	r21
    1842:	6f 93       	push	r22
    1844:	7f 93       	push	r23
    1846:	8f 93       	push	r24
    1848:	9f 93       	push	r25
    184a:	af 93       	push	r26
    184c:	bf 93       	push	r27
    184e:	ef 93       	push	r30
    1850:	ff 93       	push	r31
    1852:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    1856:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    185a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    185e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1862:	c9 01       	movw	r24, r18
    1864:	03 2e       	mov	r0, r19
    1866:	00 0c       	add	r0, r0
    1868:	aa 0b       	sbc	r26, r26
    186a:	bb 0b       	sbc	r27, r27
    186c:	dc 01       	movw	r26, r24
    186e:	99 27       	eor	r25, r25
    1870:	88 27       	eor	r24, r24
    1872:	60 e0       	ldi	r22, 0x00	; 0
    1874:	70 e0       	ldi	r23, 0x00	; 0
    1876:	84 2b       	or	r24, r20
    1878:	95 2b       	or	r25, r21
    187a:	a6 2b       	or	r26, r22
    187c:	b7 2b       	or	r27, r23
    187e:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1882:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1886:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    188a:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    188e:	b0 9b       	sbis	0x16, 0	; 22
    1890:	1b c0       	rjmp	.+54     	; 0x18c8 <__vector_21+0x98>
    1892:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1896:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    189a:	c9 01       	movw	r24, r18
    189c:	01 96       	adiw	r24, 0x01	; 1
    189e:	09 2e       	mov	r0, r25
    18a0:	00 0c       	add	r0, r0
    18a2:	aa 0b       	sbc	r26, r26
    18a4:	bb 0b       	sbc	r27, r27
    18a6:	dc 01       	movw	r26, r24
    18a8:	99 27       	eor	r25, r25
    18aa:	88 27       	eor	r24, r24
    18ac:	60 e0       	ldi	r22, 0x00	; 0
    18ae:	70 e0       	ldi	r23, 0x00	; 0
    18b0:	84 2b       	or	r24, r20
    18b2:	95 2b       	or	r25, r21
    18b4:	a6 2b       	or	r26, r22
    18b6:	b7 2b       	or	r27, r23
    18b8:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    18bc:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    18c0:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    18c4:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    18c8:	e0 91 12 02 	lds	r30, 0x0212	; 0x800212 <mtable+0x20>
    18cc:	f0 91 13 02 	lds	r31, 0x0213	; 0x800213 <mtable+0x21>
    18d0:	30 97       	sbiw	r30, 0x00	; 0
    18d2:	39 f0       	breq	.+14     	; 0x18e2 <__vector_21+0xb2>
    18d4:	60 e1       	ldi	r22, 0x10	; 16
    18d6:	70 e0       	ldi	r23, 0x00	; 0
    18d8:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <otable+0x20>
    18dc:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <otable+0x21>
    18e0:	09 95       	icall
    18e2:	0e 94 1d 05 	call	0xa3a	; 0xa3a <schedule>
    18e6:	ff 91       	pop	r31
    18e8:	ef 91       	pop	r30
    18ea:	bf 91       	pop	r27
    18ec:	af 91       	pop	r26
    18ee:	9f 91       	pop	r25
    18f0:	8f 91       	pop	r24
    18f2:	7f 91       	pop	r23
    18f4:	6f 91       	pop	r22
    18f6:	5f 91       	pop	r21
    18f8:	4f 91       	pop	r20
    18fa:	3f 91       	pop	r19
    18fc:	2f 91       	pop	r18
    18fe:	0f 90       	pop	r0
    1900:	0f be       	out	0x3f, r0	; 63
    1902:	0f 90       	pop	r0
    1904:	1f 90       	pop	r1
    1906:	18 95       	reti

00001908 <__vector_22>:
    1908:	1f 92       	push	r1
    190a:	0f 92       	push	r0
    190c:	0f b6       	in	r0, 0x3f	; 63
    190e:	0f 92       	push	r0
    1910:	11 24       	eor	r1, r1
    1912:	2f 93       	push	r18
    1914:	3f 93       	push	r19
    1916:	4f 93       	push	r20
    1918:	5f 93       	push	r21
    191a:	6f 93       	push	r22
    191c:	7f 93       	push	r23
    191e:	8f 93       	push	r24
    1920:	9f 93       	push	r25
    1922:	af 93       	push	r26
    1924:	bf 93       	push	r27
    1926:	ef 93       	push	r30
    1928:	ff 93       	push	r31
    192a:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    192e:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1932:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1936:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    193a:	c9 01       	movw	r24, r18
    193c:	03 2e       	mov	r0, r19
    193e:	00 0c       	add	r0, r0
    1940:	aa 0b       	sbc	r26, r26
    1942:	bb 0b       	sbc	r27, r27
    1944:	dc 01       	movw	r26, r24
    1946:	99 27       	eor	r25, r25
    1948:	88 27       	eor	r24, r24
    194a:	60 e0       	ldi	r22, 0x00	; 0
    194c:	70 e0       	ldi	r23, 0x00	; 0
    194e:	84 2b       	or	r24, r20
    1950:	95 2b       	or	r25, r21
    1952:	a6 2b       	or	r26, r22
    1954:	b7 2b       	or	r27, r23
    1956:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    195a:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    195e:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1962:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1966:	b0 9b       	sbis	0x16, 0	; 22
    1968:	1b c0       	rjmp	.+54     	; 0x19a0 <__vector_22+0x98>
    196a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    196e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1972:	c9 01       	movw	r24, r18
    1974:	01 96       	adiw	r24, 0x01	; 1
    1976:	09 2e       	mov	r0, r25
    1978:	00 0c       	add	r0, r0
    197a:	aa 0b       	sbc	r26, r26
    197c:	bb 0b       	sbc	r27, r27
    197e:	dc 01       	movw	r26, r24
    1980:	99 27       	eor	r25, r25
    1982:	88 27       	eor	r24, r24
    1984:	60 e0       	ldi	r22, 0x00	; 0
    1986:	70 e0       	ldi	r23, 0x00	; 0
    1988:	84 2b       	or	r24, r20
    198a:	95 2b       	or	r25, r21
    198c:	a6 2b       	or	r26, r22
    198e:	b7 2b       	or	r27, r23
    1990:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1994:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1998:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    199c:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    19a0:	e0 91 14 02 	lds	r30, 0x0214	; 0x800214 <mtable+0x22>
    19a4:	f0 91 15 02 	lds	r31, 0x0215	; 0x800215 <mtable+0x23>
    19a8:	30 97       	sbiw	r30, 0x00	; 0
    19aa:	39 f0       	breq	.+14     	; 0x19ba <__vector_22+0xb2>
    19ac:	61 e1       	ldi	r22, 0x11	; 17
    19ae:	70 e0       	ldi	r23, 0x00	; 0
    19b0:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <otable+0x22>
    19b4:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <otable+0x23>
    19b8:	09 95       	icall
    19ba:	0e 94 1d 05 	call	0xa3a	; 0xa3a <schedule>
    19be:	ff 91       	pop	r31
    19c0:	ef 91       	pop	r30
    19c2:	bf 91       	pop	r27
    19c4:	af 91       	pop	r26
    19c6:	9f 91       	pop	r25
    19c8:	8f 91       	pop	r24
    19ca:	7f 91       	pop	r23
    19cc:	6f 91       	pop	r22
    19ce:	5f 91       	pop	r21
    19d0:	4f 91       	pop	r20
    19d2:	3f 91       	pop	r19
    19d4:	2f 91       	pop	r18
    19d6:	0f 90       	pop	r0
    19d8:	0f be       	out	0x3f, r0	; 63
    19da:	0f 90       	pop	r0
    19dc:	1f 90       	pop	r1
    19de:	18 95       	reti

000019e0 <enqueueByDeadline>:
    19e0:	ef 92       	push	r14
    19e2:	ff 92       	push	r15
    19e4:	0f 93       	push	r16
    19e6:	1f 93       	push	r17
    19e8:	cf 93       	push	r28
    19ea:	df 93       	push	r29
    19ec:	7b 01       	movw	r14, r22
    19ee:	eb 01       	movw	r28, r22
    19f0:	a8 81       	ld	r26, Y
    19f2:	b9 81       	ldd	r27, Y+1	; 0x01
    19f4:	10 97       	sbiw	r26, 0x00	; 0
    19f6:	61 f1       	breq	.+88     	; 0x1a50 <enqueueByDeadline+0x70>
    19f8:	fc 01       	movw	r30, r24
    19fa:	06 81       	ldd	r16, Z+6	; 0x06
    19fc:	17 81       	ldd	r17, Z+7	; 0x07
    19fe:	20 85       	ldd	r18, Z+8	; 0x08
    1a00:	31 85       	ldd	r19, Z+9	; 0x09
    1a02:	16 96       	adiw	r26, 0x06	; 6
    1a04:	4d 91       	ld	r20, X+
    1a06:	5d 91       	ld	r21, X+
    1a08:	6d 91       	ld	r22, X+
    1a0a:	7c 91       	ld	r23, X
    1a0c:	19 97       	sbiw	r26, 0x09	; 9
    1a0e:	04 17       	cp	r16, r20
    1a10:	15 07       	cpc	r17, r21
    1a12:	26 07       	cpc	r18, r22
    1a14:	37 07       	cpc	r19, r23
    1a16:	14 f4       	brge	.+4      	; 0x1a1c <enqueueByDeadline+0x3c>
    1a18:	1b c0       	rjmp	.+54     	; 0x1a50 <enqueueByDeadline+0x70>
    1a1a:	df 01       	movw	r26, r30
    1a1c:	ed 91       	ld	r30, X+
    1a1e:	fc 91       	ld	r31, X
    1a20:	11 97       	sbiw	r26, 0x01	; 1
    1a22:	30 97       	sbiw	r30, 0x00	; 0
    1a24:	49 f0       	breq	.+18     	; 0x1a38 <enqueueByDeadline+0x58>
    1a26:	46 81       	ldd	r20, Z+6	; 0x06
    1a28:	57 81       	ldd	r21, Z+7	; 0x07
    1a2a:	60 85       	ldd	r22, Z+8	; 0x08
    1a2c:	71 85       	ldd	r23, Z+9	; 0x09
    1a2e:	04 17       	cp	r16, r20
    1a30:	15 07       	cpc	r17, r21
    1a32:	26 07       	cpc	r18, r22
    1a34:	37 07       	cpc	r19, r23
    1a36:	8c f7       	brge	.-30     	; 0x1a1a <enqueueByDeadline+0x3a>
    1a38:	ec 01       	movw	r28, r24
    1a3a:	f9 83       	std	Y+1, r31	; 0x01
    1a3c:	e8 83       	st	Y, r30
    1a3e:	10 97       	sbiw	r26, 0x00	; 0
    1a40:	21 f4       	brne	.+8      	; 0x1a4a <enqueueByDeadline+0x6a>
    1a42:	f7 01       	movw	r30, r14
    1a44:	91 83       	std	Z+1, r25	; 0x01
    1a46:	80 83       	st	Z, r24
    1a48:	07 c0       	rjmp	.+14     	; 0x1a58 <enqueueByDeadline+0x78>
    1a4a:	8d 93       	st	X+, r24
    1a4c:	9c 93       	st	X, r25
    1a4e:	04 c0       	rjmp	.+8      	; 0x1a58 <enqueueByDeadline+0x78>
    1a50:	ec 01       	movw	r28, r24
    1a52:	b9 83       	std	Y+1, r27	; 0x01
    1a54:	a8 83       	st	Y, r26
    1a56:	f5 cf       	rjmp	.-22     	; 0x1a42 <enqueueByDeadline+0x62>
    1a58:	df 91       	pop	r29
    1a5a:	cf 91       	pop	r28
    1a5c:	1f 91       	pop	r17
    1a5e:	0f 91       	pop	r16
    1a60:	ff 90       	pop	r15
    1a62:	ef 90       	pop	r14
    1a64:	08 95       	ret

00001a66 <enqueueByBaseline>:
    1a66:	ef 92       	push	r14
    1a68:	ff 92       	push	r15
    1a6a:	0f 93       	push	r16
    1a6c:	1f 93       	push	r17
    1a6e:	cf 93       	push	r28
    1a70:	df 93       	push	r29
    1a72:	7b 01       	movw	r14, r22
    1a74:	eb 01       	movw	r28, r22
    1a76:	a8 81       	ld	r26, Y
    1a78:	b9 81       	ldd	r27, Y+1	; 0x01
    1a7a:	10 97       	sbiw	r26, 0x00	; 0
    1a7c:	61 f1       	breq	.+88     	; 0x1ad6 <enqueueByBaseline+0x70>
    1a7e:	fc 01       	movw	r30, r24
    1a80:	02 81       	ldd	r16, Z+2	; 0x02
    1a82:	13 81       	ldd	r17, Z+3	; 0x03
    1a84:	24 81       	ldd	r18, Z+4	; 0x04
    1a86:	35 81       	ldd	r19, Z+5	; 0x05
    1a88:	12 96       	adiw	r26, 0x02	; 2
    1a8a:	4d 91       	ld	r20, X+
    1a8c:	5d 91       	ld	r21, X+
    1a8e:	6d 91       	ld	r22, X+
    1a90:	7c 91       	ld	r23, X
    1a92:	15 97       	sbiw	r26, 0x05	; 5
    1a94:	04 17       	cp	r16, r20
    1a96:	15 07       	cpc	r17, r21
    1a98:	26 07       	cpc	r18, r22
    1a9a:	37 07       	cpc	r19, r23
    1a9c:	14 f4       	brge	.+4      	; 0x1aa2 <enqueueByBaseline+0x3c>
    1a9e:	1b c0       	rjmp	.+54     	; 0x1ad6 <enqueueByBaseline+0x70>
    1aa0:	df 01       	movw	r26, r30
    1aa2:	ed 91       	ld	r30, X+
    1aa4:	fc 91       	ld	r31, X
    1aa6:	11 97       	sbiw	r26, 0x01	; 1
    1aa8:	30 97       	sbiw	r30, 0x00	; 0
    1aaa:	49 f0       	breq	.+18     	; 0x1abe <enqueueByBaseline+0x58>
    1aac:	42 81       	ldd	r20, Z+2	; 0x02
    1aae:	53 81       	ldd	r21, Z+3	; 0x03
    1ab0:	64 81       	ldd	r22, Z+4	; 0x04
    1ab2:	75 81       	ldd	r23, Z+5	; 0x05
    1ab4:	04 17       	cp	r16, r20
    1ab6:	15 07       	cpc	r17, r21
    1ab8:	26 07       	cpc	r18, r22
    1aba:	37 07       	cpc	r19, r23
    1abc:	8c f7       	brge	.-30     	; 0x1aa0 <enqueueByBaseline+0x3a>
    1abe:	ec 01       	movw	r28, r24
    1ac0:	f9 83       	std	Y+1, r31	; 0x01
    1ac2:	e8 83       	st	Y, r30
    1ac4:	10 97       	sbiw	r26, 0x00	; 0
    1ac6:	21 f4       	brne	.+8      	; 0x1ad0 <enqueueByBaseline+0x6a>
    1ac8:	f7 01       	movw	r30, r14
    1aca:	91 83       	std	Z+1, r25	; 0x01
    1acc:	80 83       	st	Z, r24
    1ace:	07 c0       	rjmp	.+14     	; 0x1ade <enqueueByBaseline+0x78>
    1ad0:	8d 93       	st	X+, r24
    1ad2:	9c 93       	st	X, r25
    1ad4:	04 c0       	rjmp	.+8      	; 0x1ade <enqueueByBaseline+0x78>
    1ad6:	ec 01       	movw	r28, r24
    1ad8:	b9 83       	std	Y+1, r27	; 0x01
    1ada:	a8 83       	st	Y, r26
    1adc:	f5 cf       	rjmp	.-22     	; 0x1ac8 <enqueueByBaseline+0x62>
    1ade:	df 91       	pop	r29
    1ae0:	cf 91       	pop	r28
    1ae2:	1f 91       	pop	r17
    1ae4:	0f 91       	pop	r16
    1ae6:	ff 90       	pop	r15
    1ae8:	ef 90       	pop	r14
    1aea:	08 95       	ret

00001aec <dequeue>:
    1aec:	dc 01       	movw	r26, r24
    1aee:	ed 91       	ld	r30, X+
    1af0:	fc 91       	ld	r31, X
    1af2:	11 97       	sbiw	r26, 0x01	; 1
    1af4:	30 97       	sbiw	r30, 0x00	; 0
    1af6:	59 f4       	brne	.+22     	; 0x1b0e <dequeue+0x22>
    1af8:	8f ef       	ldi	r24, 0xFF	; 255
    1afa:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
    1afe:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
    1b02:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
    1b06:	81 e0       	ldi	r24, 0x01	; 1
    1b08:	83 bf       	out	0x33, r24	; 51
    1b0a:	88 95       	sleep
    1b0c:	fd cf       	rjmp	.-6      	; 0x1b08 <dequeue+0x1c>
    1b0e:	20 81       	ld	r18, Z
    1b10:	31 81       	ldd	r19, Z+1	; 0x01
    1b12:	2d 93       	st	X+, r18
    1b14:	3c 93       	st	X, r19
    1b16:	cf 01       	movw	r24, r30
    1b18:	08 95       	ret

00001b1a <__vector_9>:
    1b1a:	1f 92       	push	r1
    1b1c:	0f 92       	push	r0
    1b1e:	0f b6       	in	r0, 0x3f	; 63
    1b20:	0f 92       	push	r0
    1b22:	11 24       	eor	r1, r1
    1b24:	2f 93       	push	r18
    1b26:	3f 93       	push	r19
    1b28:	4f 93       	push	r20
    1b2a:	5f 93       	push	r21
    1b2c:	6f 93       	push	r22
    1b2e:	7f 93       	push	r23
    1b30:	8f 93       	push	r24
    1b32:	9f 93       	push	r25
    1b34:	ef 93       	push	r30
    1b36:	ff 93       	push	r31
    1b38:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <__data_end>
    1b3c:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <__data_end+0x1>
    1b40:	01 96       	adiw	r24, 0x01	; 1
    1b42:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <__data_end+0x1>
    1b46:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <__data_end>
    1b4a:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <timerQ>
    1b4e:	f0 91 57 01 	lds	r31, 0x0157	; 0x800157 <timerQ+0x1>
    1b52:	30 97       	sbiw	r30, 0x00	; 0
    1b54:	01 f1       	breq	.+64     	; 0x1b96 <__vector_9+0x7c>
    1b56:	42 81       	ldd	r20, Z+2	; 0x02
    1b58:	53 81       	ldd	r21, Z+3	; 0x03
    1b5a:	64 81       	ldd	r22, Z+4	; 0x04
    1b5c:	75 81       	ldd	r23, Z+5	; 0x05
    1b5e:	86 17       	cp	r24, r22
    1b60:	97 07       	cpc	r25, r23
    1b62:	c9 f4       	brne	.+50     	; 0x1b96 <__vector_9+0x7c>
    1b64:	ca 01       	movw	r24, r20
    1b66:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b6a:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b6e:	42 1b       	sub	r20, r18
    1b70:	53 0b       	sbc	r21, r19
    1b72:	41 30       	cpi	r20, 0x01	; 1
    1b74:	51 05       	cpc	r21, r1
    1b76:	29 f4       	brne	.+10     	; 0x1b82 <__vector_9+0x68>
    1b78:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b7c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b80:	01 96       	adiw	r24, 0x01	; 1
    1b82:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1b86:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1b8a:	ef e6       	ldi	r30, 0x6F	; 111
    1b8c:	f0 e0       	ldi	r31, 0x00	; 0
    1b8e:	80 81       	ld	r24, Z
    1b90:	82 60       	ori	r24, 0x02	; 2
    1b92:	80 83       	st	Z, r24
    1b94:	05 c0       	rjmp	.+10     	; 0x1ba0 <__vector_9+0x86>
    1b96:	ef e6       	ldi	r30, 0x6F	; 111
    1b98:	f0 e0       	ldi	r31, 0x00	; 0
    1b9a:	80 81       	ld	r24, Z
    1b9c:	8d 7f       	andi	r24, 0xFD	; 253
    1b9e:	80 83       	st	Z, r24
    1ba0:	ff 91       	pop	r31
    1ba2:	ef 91       	pop	r30
    1ba4:	9f 91       	pop	r25
    1ba6:	8f 91       	pop	r24
    1ba8:	7f 91       	pop	r23
    1baa:	6f 91       	pop	r22
    1bac:	5f 91       	pop	r21
    1bae:	4f 91       	pop	r20
    1bb0:	3f 91       	pop	r19
    1bb2:	2f 91       	pop	r18
    1bb4:	0f 90       	pop	r0
    1bb6:	0f be       	out	0x3f, r0	; 63
    1bb8:	0f 90       	pop	r0
    1bba:	1f 90       	pop	r1
    1bbc:	18 95       	reti

00001bbe <__vector_7>:
    1bbe:	1f 92       	push	r1
    1bc0:	0f 92       	push	r0
    1bc2:	0f b6       	in	r0, 0x3f	; 63
    1bc4:	0f 92       	push	r0
    1bc6:	11 24       	eor	r1, r1
    1bc8:	cf 92       	push	r12
    1bca:	df 92       	push	r13
    1bcc:	ef 92       	push	r14
    1bce:	ff 92       	push	r15
    1bd0:	2f 93       	push	r18
    1bd2:	3f 93       	push	r19
    1bd4:	4f 93       	push	r20
    1bd6:	5f 93       	push	r21
    1bd8:	6f 93       	push	r22
    1bda:	7f 93       	push	r23
    1bdc:	8f 93       	push	r24
    1bde:	9f 93       	push	r25
    1be0:	af 93       	push	r26
    1be2:	bf 93       	push	r27
    1be4:	ef 93       	push	r30
    1be6:	ff 93       	push	r31
    1be8:	c0 90 50 01 	lds	r12, 0x0150	; 0x800150 <__data_end>
    1bec:	d0 90 51 01 	lds	r13, 0x0151	; 0x800151 <__data_end+0x1>
    1bf0:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1bf4:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1bf8:	b0 99       	sbic	0x16, 0	; 22
    1bfa:	0f c0       	rjmp	.+30     	; 0x1c1a <__vector_7+0x5c>
    1bfc:	0d 2c       	mov	r0, r13
    1bfe:	00 0c       	add	r0, r0
    1c00:	ee 08       	sbc	r14, r14
    1c02:	ff 08       	sbc	r15, r15
    1c04:	d6 01       	movw	r26, r12
    1c06:	99 27       	eor	r25, r25
    1c08:	88 27       	eor	r24, r24
    1c0a:	69 01       	movw	r12, r18
    1c0c:	e1 2c       	mov	r14, r1
    1c0e:	f1 2c       	mov	r15, r1
    1c10:	c8 2a       	or	r12, r24
    1c12:	d9 2a       	or	r13, r25
    1c14:	ea 2a       	or	r14, r26
    1c16:	fb 2a       	or	r15, r27
    1c18:	15 c0       	rjmp	.+42     	; 0x1c44 <__vector_7+0x86>
    1c1a:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c1e:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c22:	8f ef       	ldi	r24, 0xFF	; 255
    1c24:	c8 1a       	sub	r12, r24
    1c26:	d8 0a       	sbc	r13, r24
    1c28:	0d 2c       	mov	r0, r13
    1c2a:	00 0c       	add	r0, r0
    1c2c:	ee 08       	sbc	r14, r14
    1c2e:	ff 08       	sbc	r15, r15
    1c30:	d6 01       	movw	r26, r12
    1c32:	99 27       	eor	r25, r25
    1c34:	88 27       	eor	r24, r24
    1c36:	69 01       	movw	r12, r18
    1c38:	e1 2c       	mov	r14, r1
    1c3a:	f1 2c       	mov	r15, r1
    1c3c:	c8 2a       	or	r12, r24
    1c3e:	d9 2a       	or	r13, r25
    1c40:	ea 2a       	or	r14, r26
    1c42:	fb 2a       	or	r15, r27
    1c44:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <timerQ>
    1c48:	f0 91 57 01 	lds	r31, 0x0157	; 0x800157 <timerQ+0x1>
    1c4c:	30 97       	sbiw	r30, 0x00	; 0
    1c4e:	09 f4       	brne	.+2      	; 0x1c52 <__vector_7+0x94>
    1c50:	42 c0       	rjmp	.+132    	; 0x1cd6 <__vector_7+0x118>
    1c52:	82 81       	ldd	r24, Z+2	; 0x02
    1c54:	93 81       	ldd	r25, Z+3	; 0x03
    1c56:	a4 81       	ldd	r26, Z+4	; 0x04
    1c58:	b5 81       	ldd	r27, Z+5	; 0x05
    1c5a:	8c 19       	sub	r24, r12
    1c5c:	9d 09       	sbc	r25, r13
    1c5e:	ae 09       	sbc	r26, r14
    1c60:	bf 09       	sbc	r27, r15
    1c62:	18 16       	cp	r1, r24
    1c64:	19 06       	cpc	r1, r25
    1c66:	1a 06       	cpc	r1, r26
    1c68:	1b 06       	cpc	r1, r27
    1c6a:	ec f1       	brlt	.+122    	; 0x1ce6 <__vector_7+0x128>
    1c6c:	86 e5       	ldi	r24, 0x56	; 86
    1c6e:	91 e0       	ldi	r25, 0x01	; 1
    1c70:	0e 94 76 0d 	call	0x1aec	; 0x1aec <dequeue>
    1c74:	68 e5       	ldi	r22, 0x58	; 88
    1c76:	71 e0       	ldi	r23, 0x01	; 1
    1c78:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <enqueueByDeadline>
    1c7c:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <timerQ>
    1c80:	f0 91 57 01 	lds	r31, 0x0157	; 0x800157 <timerQ+0x1>
    1c84:	30 97       	sbiw	r30, 0x00	; 0
    1c86:	39 f1       	breq	.+78     	; 0x1cd6 <__vector_7+0x118>
    1c88:	82 81       	ldd	r24, Z+2	; 0x02
    1c8a:	93 81       	ldd	r25, Z+3	; 0x03
    1c8c:	a4 81       	ldd	r26, Z+4	; 0x04
    1c8e:	b5 81       	ldd	r27, Z+5	; 0x05
    1c90:	8c 19       	sub	r24, r12
    1c92:	9d 09       	sbc	r25, r13
    1c94:	ae 09       	sbc	r26, r14
    1c96:	bf 09       	sbc	r27, r15
    1c98:	18 16       	cp	r1, r24
    1c9a:	19 06       	cpc	r1, r25
    1c9c:	1a 06       	cpc	r1, r26
    1c9e:	1b 06       	cpc	r1, r27
    1ca0:	2c f7       	brge	.-54     	; 0x1c6c <__vector_7+0xae>
    1ca2:	21 c0       	rjmp	.+66     	; 0x1ce6 <__vector_7+0x128>
    1ca4:	9c 01       	movw	r18, r24
    1ca6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1caa:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1cae:	84 1b       	sub	r24, r20
    1cb0:	95 0b       	sbc	r25, r21
    1cb2:	01 97       	sbiw	r24, 0x01	; 1
    1cb4:	31 f4       	brne	.+12     	; 0x1cc2 <__vector_7+0x104>
    1cb6:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1cba:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1cbe:	2f 5f       	subi	r18, 0xFF	; 255
    1cc0:	3f 4f       	sbci	r19, 0xFF	; 255
    1cc2:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1cc6:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1cca:	ef e6       	ldi	r30, 0x6F	; 111
    1ccc:	f0 e0       	ldi	r31, 0x00	; 0
    1cce:	80 81       	ld	r24, Z
    1cd0:	82 60       	ori	r24, 0x02	; 2
    1cd2:	80 83       	st	Z, r24
    1cd4:	05 c0       	rjmp	.+10     	; 0x1ce0 <__vector_7+0x122>
    1cd6:	ef e6       	ldi	r30, 0x6F	; 111
    1cd8:	f0 e0       	ldi	r31, 0x00	; 0
    1cda:	80 81       	ld	r24, Z
    1cdc:	8d 7f       	andi	r24, 0xFD	; 253
    1cde:	80 83       	st	Z, r24
    1ce0:	0e 94 1d 05 	call	0xa3a	; 0xa3a <schedule>
    1ce4:	0c c0       	rjmp	.+24     	; 0x1cfe <__vector_7+0x140>
    1ce6:	82 81       	ldd	r24, Z+2	; 0x02
    1ce8:	93 81       	ldd	r25, Z+3	; 0x03
    1cea:	a4 81       	ldd	r26, Z+4	; 0x04
    1cec:	b5 81       	ldd	r27, Z+5	; 0x05
    1cee:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    1cf2:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1cf6:	2a 17       	cp	r18, r26
    1cf8:	3b 07       	cpc	r19, r27
    1cfa:	69 f7       	brne	.-38     	; 0x1cd6 <__vector_7+0x118>
    1cfc:	d3 cf       	rjmp	.-90     	; 0x1ca4 <__vector_7+0xe6>
    1cfe:	ff 91       	pop	r31
    1d00:	ef 91       	pop	r30
    1d02:	bf 91       	pop	r27
    1d04:	af 91       	pop	r26
    1d06:	9f 91       	pop	r25
    1d08:	8f 91       	pop	r24
    1d0a:	7f 91       	pop	r23
    1d0c:	6f 91       	pop	r22
    1d0e:	5f 91       	pop	r21
    1d10:	4f 91       	pop	r20
    1d12:	3f 91       	pop	r19
    1d14:	2f 91       	pop	r18
    1d16:	ff 90       	pop	r15
    1d18:	ef 90       	pop	r14
    1d1a:	df 90       	pop	r13
    1d1c:	cf 90       	pop	r12
    1d1e:	0f 90       	pop	r0
    1d20:	0f be       	out	0x3f, r0	; 63
    1d22:	0f 90       	pop	r0
    1d24:	1f 90       	pop	r1
    1d26:	18 95       	reti

00001d28 <async>:
    1d28:	3f 92       	push	r3
    1d2a:	4f 92       	push	r4
    1d2c:	5f 92       	push	r5
    1d2e:	6f 92       	push	r6
    1d30:	7f 92       	push	r7
    1d32:	8f 92       	push	r8
    1d34:	9f 92       	push	r9
    1d36:	af 92       	push	r10
    1d38:	bf 92       	push	r11
    1d3a:	cf 92       	push	r12
    1d3c:	df 92       	push	r13
    1d3e:	ef 92       	push	r14
    1d40:	ff 92       	push	r15
    1d42:	0f 93       	push	r16
    1d44:	1f 93       	push	r17
    1d46:	cf 93       	push	r28
    1d48:	df 93       	push	r29
    1d4a:	2b 01       	movw	r4, r22
    1d4c:	3c 01       	movw	r6, r24
    1d4e:	49 01       	movw	r8, r18
    1d50:	5a 01       	movw	r10, r20
    1d52:	8f b7       	in	r24, 0x3f	; 63
    1d54:	80 78       	andi	r24, 0x80	; 128
    1d56:	38 2e       	mov	r3, r24
    1d58:	f8 94       	cli
    1d5a:	86 e0       	ldi	r24, 0x06	; 6
    1d5c:	91 e0       	ldi	r25, 0x01	; 1
    1d5e:	0e 94 76 0d 	call	0x1aec	; 0x1aec <dequeue>
    1d62:	ec 01       	movw	r28, r24
    1d64:	1b 87       	std	Y+11, r17	; 0x0b
    1d66:	0a 87       	std	Y+10, r16	; 0x0a
    1d68:	fd 86       	std	Y+13, r15	; 0x0d
    1d6a:	ec 86       	std	Y+12, r14	; 0x0c
    1d6c:	df 86       	std	Y+15, r13	; 0x0f
    1d6e:	ce 86       	std	Y+14, r12	; 0x0e
    1d70:	33 20       	and	r3, r3
    1d72:	61 f0       	breq	.+24     	; 0x1d8c <async+0x64>
    1d74:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d78:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d7c:	02 80       	ldd	r0, Z+2	; 0x02
    1d7e:	f3 81       	ldd	r31, Z+3	; 0x03
    1d80:	e0 2d       	mov	r30, r0
    1d82:	82 81       	ldd	r24, Z+2	; 0x02
    1d84:	93 81       	ldd	r25, Z+3	; 0x03
    1d86:	a4 81       	ldd	r26, Z+4	; 0x04
    1d88:	b5 81       	ldd	r27, Z+5	; 0x05
    1d8a:	08 c0       	rjmp	.+16     	; 0x1d9c <async+0x74>
    1d8c:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <timestamp>
    1d90:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <timestamp+0x1>
    1d94:	a0 91 54 01 	lds	r26, 0x0154	; 0x800154 <timestamp+0x2>
    1d98:	b0 91 55 01 	lds	r27, 0x0155	; 0x800155 <timestamp+0x3>
    1d9c:	48 0e       	add	r4, r24
    1d9e:	59 1e       	adc	r5, r25
    1da0:	6a 1e       	adc	r6, r26
    1da2:	7b 1e       	adc	r7, r27
    1da4:	4a 82       	std	Y+2, r4	; 0x02
    1da6:	5b 82       	std	Y+3, r5	; 0x03
    1da8:	6c 82       	std	Y+4, r6	; 0x04
    1daa:	7d 82       	std	Y+5, r7	; 0x05
    1dac:	18 14       	cp	r1, r8
    1dae:	19 04       	cpc	r1, r9
    1db0:	1a 04       	cpc	r1, r10
    1db2:	1b 04       	cpc	r1, r11
    1db4:	44 f0       	brlt	.+16     	; 0x1dc6 <async+0x9e>
    1db6:	0f 2e       	mov	r0, r31
    1db8:	88 24       	eor	r8, r8
    1dba:	8a 94       	dec	r8
    1dbc:	98 2c       	mov	r9, r8
    1dbe:	a8 2c       	mov	r10, r8
    1dc0:	ff e7       	ldi	r31, 0x7F	; 127
    1dc2:	bf 2e       	mov	r11, r31
    1dc4:	f0 2d       	mov	r31, r0
    1dc6:	84 0c       	add	r8, r4
    1dc8:	95 1c       	adc	r9, r5
    1dca:	a6 1c       	adc	r10, r6
    1dcc:	b7 1c       	adc	r11, r7
    1dce:	8e 82       	std	Y+6, r8	; 0x06
    1dd0:	9f 82       	std	Y+7, r9	; 0x07
    1dd2:	a8 86       	std	Y+8, r10	; 0x08
    1dd4:	b9 86       	std	Y+9, r11	; 0x09
    1dd6:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <__data_end>
    1dda:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <__data_end+0x1>
    1dde:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1de2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1de6:	b0 99       	sbic	0x16, 0	; 22
    1de8:	0e c0       	rjmp	.+28     	; 0x1e06 <async+0xde>
    1dea:	09 2e       	mov	r0, r25
    1dec:	00 0c       	add	r0, r0
    1dee:	aa 0b       	sbc	r26, r26
    1df0:	bb 0b       	sbc	r27, r27
    1df2:	dc 01       	movw	r26, r24
    1df4:	99 27       	eor	r25, r25
    1df6:	88 27       	eor	r24, r24
    1df8:	60 e0       	ldi	r22, 0x00	; 0
    1dfa:	70 e0       	ldi	r23, 0x00	; 0
    1dfc:	84 2b       	or	r24, r20
    1dfe:	95 2b       	or	r25, r21
    1e00:	a6 2b       	or	r26, r22
    1e02:	b7 2b       	or	r27, r23
    1e04:	13 c0       	rjmp	.+38     	; 0x1e2c <async+0x104>
    1e06:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1e0a:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1e0e:	01 96       	adiw	r24, 0x01	; 1
    1e10:	09 2e       	mov	r0, r25
    1e12:	00 0c       	add	r0, r0
    1e14:	aa 0b       	sbc	r26, r26
    1e16:	bb 0b       	sbc	r27, r27
    1e18:	dc 01       	movw	r26, r24
    1e1a:	99 27       	eor	r25, r25
    1e1c:	88 27       	eor	r24, r24
    1e1e:	a9 01       	movw	r20, r18
    1e20:	60 e0       	ldi	r22, 0x00	; 0
    1e22:	70 e0       	ldi	r23, 0x00	; 0
    1e24:	84 2b       	or	r24, r20
    1e26:	95 2b       	or	r25, r21
    1e28:	a6 2b       	or	r26, r22
    1e2a:	b7 2b       	or	r27, r23
    1e2c:	48 1a       	sub	r4, r24
    1e2e:	59 0a       	sbc	r5, r25
    1e30:	6a 0a       	sbc	r6, r26
    1e32:	7b 0a       	sbc	r7, r27
    1e34:	14 14       	cp	r1, r4
    1e36:	15 04       	cpc	r1, r5
    1e38:	16 04       	cpc	r1, r6
    1e3a:	17 04       	cpc	r1, r7
    1e3c:	ac f5       	brge	.+106    	; 0x1ea8 <async+0x180>
    1e3e:	66 e5       	ldi	r22, 0x56	; 86
    1e40:	71 e0       	ldi	r23, 0x01	; 1
    1e42:	ce 01       	movw	r24, r28
    1e44:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <enqueueByBaseline>
    1e48:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <timerQ>
    1e4c:	f0 91 57 01 	lds	r31, 0x0157	; 0x800157 <timerQ+0x1>
    1e50:	30 97       	sbiw	r30, 0x00	; 0
    1e52:	21 f1       	breq	.+72     	; 0x1e9c <async+0x174>
    1e54:	82 81       	ldd	r24, Z+2	; 0x02
    1e56:	93 81       	ldd	r25, Z+3	; 0x03
    1e58:	a4 81       	ldd	r26, Z+4	; 0x04
    1e5a:	b5 81       	ldd	r27, Z+5	; 0x05
    1e5c:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__data_end>
    1e60:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__data_end+0x1>
    1e64:	2a 17       	cp	r18, r26
    1e66:	3b 07       	cpc	r19, r27
    1e68:	c9 f4       	brne	.+50     	; 0x1e9c <async+0x174>
    1e6a:	9c 01       	movw	r18, r24
    1e6c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1e70:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1e74:	84 1b       	sub	r24, r20
    1e76:	95 0b       	sbc	r25, r21
    1e78:	01 97       	sbiw	r24, 0x01	; 1
    1e7a:	31 f4       	brne	.+12     	; 0x1e88 <async+0x160>
    1e7c:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1e80:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1e84:	2f 5f       	subi	r18, 0xFF	; 255
    1e86:	3f 4f       	sbci	r19, 0xFF	; 255
    1e88:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1e8c:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1e90:	ef e6       	ldi	r30, 0x6F	; 111
    1e92:	f0 e0       	ldi	r31, 0x00	; 0
    1e94:	80 81       	ld	r24, Z
    1e96:	82 60       	ori	r24, 0x02	; 2
    1e98:	80 83       	st	Z, r24
    1e9a:	41 c0       	rjmp	.+130    	; 0x1f1e <async+0x1f6>
    1e9c:	ef e6       	ldi	r30, 0x6F	; 111
    1e9e:	f0 e0       	ldi	r31, 0x00	; 0
    1ea0:	80 81       	ld	r24, Z
    1ea2:	8d 7f       	andi	r24, 0xFD	; 253
    1ea4:	80 83       	st	Z, r24
    1ea6:	3b c0       	rjmp	.+118    	; 0x1f1e <async+0x1f6>
    1ea8:	68 e5       	ldi	r22, 0x58	; 88
    1eaa:	71 e0       	ldi	r23, 0x01	; 1
    1eac:	ce 01       	movw	r24, r28
    1eae:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <enqueueByDeadline>
    1eb2:	33 20       	and	r3, r3
    1eb4:	b9 f1       	breq	.+110    	; 0x1f24 <async+0x1fc>
    1eb6:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1eba:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1ebe:	00 97       	sbiw	r24, 0x00	; 0
    1ec0:	81 f1       	breq	.+96     	; 0x1f22 <async+0x1fa>
    1ec2:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1ec6:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1eca:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <msgQ>
    1ece:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <msgQ+0x1>
    1ed2:	02 81       	ldd	r16, Z+2	; 0x02
    1ed4:	13 81       	ldd	r17, Z+3	; 0x03
    1ed6:	d9 01       	movw	r26, r18
    1ed8:	16 96       	adiw	r26, 0x06	; 6
    1eda:	4d 91       	ld	r20, X+
    1edc:	5d 91       	ld	r21, X+
    1ede:	6d 91       	ld	r22, X+
    1ee0:	7c 91       	ld	r23, X
    1ee2:	19 97       	sbiw	r26, 0x09	; 9
    1ee4:	d8 01       	movw	r26, r16
    1ee6:	16 96       	adiw	r26, 0x06	; 6
    1ee8:	0d 91       	ld	r16, X+
    1eea:	1d 91       	ld	r17, X+
    1eec:	2d 91       	ld	r18, X+
    1eee:	3c 91       	ld	r19, X
    1ef0:	19 97       	sbiw	r26, 0x09	; 9
    1ef2:	40 1b       	sub	r20, r16
    1ef4:	51 0b       	sbc	r21, r17
    1ef6:	62 0b       	sbc	r22, r18
    1ef8:	73 0b       	sbc	r23, r19
    1efa:	9a f4       	brpl	.+38     	; 0x1f22 <async+0x1fa>
    1efc:	dc 01       	movw	r26, r24
    1efe:	2d 91       	ld	r18, X+
    1f00:	3c 91       	ld	r19, X
    1f02:	11 97       	sbiw	r26, 0x01	; 1
    1f04:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
    1f08:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
    1f0c:	ed 93       	st	X+, r30
    1f0e:	fc 93       	st	X, r31
    1f10:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
    1f14:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
    1f18:	0e 94 fd 04 	call	0x9fa	; 0x9fa <dispatch>
    1f1c:	02 c0       	rjmp	.+4      	; 0x1f22 <async+0x1fa>
    1f1e:	33 20       	and	r3, r3
    1f20:	09 f0       	breq	.+2      	; 0x1f24 <async+0x1fc>
    1f22:	78 94       	sei
    1f24:	ce 01       	movw	r24, r28
    1f26:	df 91       	pop	r29
    1f28:	cf 91       	pop	r28
    1f2a:	1f 91       	pop	r17
    1f2c:	0f 91       	pop	r16
    1f2e:	ff 90       	pop	r15
    1f30:	ef 90       	pop	r14
    1f32:	df 90       	pop	r13
    1f34:	cf 90       	pop	r12
    1f36:	bf 90       	pop	r11
    1f38:	af 90       	pop	r10
    1f3a:	9f 90       	pop	r9
    1f3c:	8f 90       	pop	r8
    1f3e:	7f 90       	pop	r7
    1f40:	6f 90       	pop	r6
    1f42:	5f 90       	pop	r5
    1f44:	4f 90       	pop	r4
    1f46:	3f 90       	pop	r3
    1f48:	08 95       	ret

00001f4a <sync>:
    1f4a:	cf 92       	push	r12
    1f4c:	df 92       	push	r13
    1f4e:	ef 92       	push	r14
    1f50:	ff 92       	push	r15
    1f52:	0f 93       	push	r16
    1f54:	1f 93       	push	r17
    1f56:	cf 93       	push	r28
    1f58:	df 93       	push	r29
    1f5a:	ec 01       	movw	r28, r24
    1f5c:	7b 01       	movw	r14, r22
    1f5e:	6a 01       	movw	r12, r20
    1f60:	1f b7       	in	r17, 0x3f	; 63
    1f62:	10 78       	andi	r17, 0x80	; 128
    1f64:	f8 94       	cli
    1f66:	a8 81       	ld	r26, Y
    1f68:	b9 81       	ldd	r27, Y+1	; 0x01
    1f6a:	10 97       	sbiw	r26, 0x00	; 0
    1f6c:	61 f1       	breq	.+88     	; 0x1fc6 <sync+0x7c>
    1f6e:	14 96       	adiw	r26, 0x04	; 4
    1f70:	ed 91       	ld	r30, X+
    1f72:	fc 91       	ld	r31, X
    1f74:	15 97       	sbiw	r26, 0x05	; 5
    1f76:	30 97       	sbiw	r30, 0x00	; 0
    1f78:	41 f0       	breq	.+16     	; 0x1f8a <sync+0x40>
    1f7a:	a0 81       	ld	r26, Z
    1f7c:	b1 81       	ldd	r27, Z+1	; 0x01
    1f7e:	14 96       	adiw	r26, 0x04	; 4
    1f80:	ed 91       	ld	r30, X+
    1f82:	fc 91       	ld	r31, X
    1f84:	15 97       	sbiw	r26, 0x05	; 5
    1f86:	30 97       	sbiw	r30, 0x00	; 0
    1f88:	c1 f7       	brne	.-16     	; 0x1f7a <sync+0x30>
    1f8a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f8e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f92:	2a 17       	cp	r18, r26
    1f94:	3b 07       	cpc	r19, r27
    1f96:	21 f0       	breq	.+8      	; 0x1fa0 <sync+0x56>
    1f98:	11 23       	and	r17, r17
    1f9a:	09 f4       	brne	.+2      	; 0x1f9e <sync+0x54>
    1f9c:	3d c0       	rjmp	.+122    	; 0x2018 <sync+0xce>
    1f9e:	07 c0       	rjmp	.+14     	; 0x1fae <sync+0x64>
    1fa0:	11 23       	and	r17, r17
    1fa2:	09 f4       	brne	.+2      	; 0x1fa6 <sync+0x5c>
    1fa4:	3c c0       	rjmp	.+120    	; 0x201e <sync+0xd4>
    1fa6:	78 94       	sei
    1fa8:	8f ef       	ldi	r24, 0xFF	; 255
    1faa:	9f ef       	ldi	r25, 0xFF	; 255
    1fac:	52 c0       	rjmp	.+164    	; 0x2052 <sync+0x108>
    1fae:	8a 81       	ldd	r24, Y+2	; 0x02
    1fb0:	9b 81       	ldd	r25, Y+3	; 0x03
    1fb2:	00 97       	sbiw	r24, 0x00	; 0
    1fb4:	d1 f1       	breq	.+116    	; 0x202a <sync+0xe0>
    1fb6:	fc 01       	movw	r30, r24
    1fb8:	15 82       	std	Z+5, r1	; 0x05
    1fba:	14 82       	std	Z+4, r1	; 0x04
    1fbc:	36 c0       	rjmp	.+108    	; 0x202a <sync+0xe0>
    1fbe:	78 94       	sei
    1fc0:	80 e0       	ldi	r24, 0x00	; 0
    1fc2:	90 e0       	ldi	r25, 0x00	; 0
    1fc4:	46 c0       	rjmp	.+140    	; 0x2052 <sync+0x108>
    1fc6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1fca:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1fce:	99 83       	std	Y+1, r25	; 0x01
    1fd0:	88 83       	st	Y, r24
    1fd2:	11 23       	and	r17, r17
    1fd4:	29 f0       	breq	.+10     	; 0x1fe0 <sync+0x96>
    1fd6:	8a 81       	ldd	r24, Y+2	; 0x02
    1fd8:	9b 81       	ldd	r25, Y+3	; 0x03
    1fda:	01 97       	sbiw	r24, 0x01	; 1
    1fdc:	09 f0       	breq	.+2      	; 0x1fe0 <sync+0x96>
    1fde:	78 94       	sei
    1fe0:	b6 01       	movw	r22, r12
    1fe2:	ce 01       	movw	r24, r28
    1fe4:	f7 01       	movw	r30, r14
    1fe6:	09 95       	icall
    1fe8:	f8 2e       	mov	r15, r24
    1fea:	09 2f       	mov	r16, r25
    1fec:	8f b7       	in	r24, 0x3f	; 63
    1fee:	f8 94       	cli
    1ff0:	19 82       	std	Y+1, r1	; 0x01
    1ff2:	18 82       	st	Y, r1
    1ff4:	8a 81       	ldd	r24, Y+2	; 0x02
    1ff6:	9b 81       	ldd	r25, Y+3	; 0x03
    1ff8:	82 30       	cpi	r24, 0x02	; 2
    1ffa:	91 05       	cpc	r25, r1
    1ffc:	38 f0       	brcs	.+14     	; 0x200c <sync+0xc2>
    1ffe:	1b 82       	std	Y+3, r1	; 0x03
    2000:	1a 82       	std	Y+2, r1	; 0x02
    2002:	fc 01       	movw	r30, r24
    2004:	15 82       	std	Z+5, r1	; 0x05
    2006:	14 82       	std	Z+4, r1	; 0x04
    2008:	0e 94 fd 04 	call	0x9fa	; 0x9fa <dispatch>
    200c:	11 23       	and	r17, r17
    200e:	51 f0       	breq	.+20     	; 0x2024 <sync+0xda>
    2010:	78 94       	sei
    2012:	8f 2d       	mov	r24, r15
    2014:	90 2f       	mov	r25, r16
    2016:	1d c0       	rjmp	.+58     	; 0x2052 <sync+0x108>
    2018:	8f ef       	ldi	r24, 0xFF	; 255
    201a:	9f ef       	ldi	r25, 0xFF	; 255
    201c:	1a c0       	rjmp	.+52     	; 0x2052 <sync+0x108>
    201e:	8f ef       	ldi	r24, 0xFF	; 255
    2020:	9f ef       	ldi	r25, 0xFF	; 255
    2022:	17 c0       	rjmp	.+46     	; 0x2052 <sync+0x108>
    2024:	8f 2d       	mov	r24, r15
    2026:	90 2f       	mov	r25, r16
    2028:	14 c0       	rjmp	.+40     	; 0x2052 <sync+0x108>
    202a:	3b 83       	std	Y+3, r19	; 0x03
    202c:	2a 83       	std	Y+2, r18	; 0x02
    202e:	f9 01       	movw	r30, r18
    2030:	d5 83       	std	Z+5, r29	; 0x05
    2032:	c4 83       	std	Z+4, r28	; 0x04
    2034:	cd 01       	movw	r24, r26
    2036:	0e 94 fd 04 	call	0x9fa	; 0x9fa <dispatch>
    203a:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    203e:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2042:	82 81       	ldd	r24, Z+2	; 0x02
    2044:	93 81       	ldd	r25, Z+3	; 0x03
    2046:	89 2b       	or	r24, r25
    2048:	09 f4       	brne	.+2      	; 0x204c <sync+0x102>
    204a:	b9 cf       	rjmp	.-142    	; 0x1fbe <sync+0x74>
    204c:	f9 83       	std	Y+1, r31	; 0x01
    204e:	e8 83       	st	Y, r30
    2050:	c2 cf       	rjmp	.-124    	; 0x1fd6 <sync+0x8c>
    2052:	df 91       	pop	r29
    2054:	cf 91       	pop	r28
    2056:	1f 91       	pop	r17
    2058:	0f 91       	pop	r16
    205a:	ff 90       	pop	r15
    205c:	ef 90       	pop	r14
    205e:	df 90       	pop	r13
    2060:	cf 90       	pop	r12
    2062:	08 95       	ret

00002064 <run>:
    2064:	00 91 00 01 	lds	r16, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2068:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    206c:	88 e5       	ldi	r24, 0x58	; 88
    206e:	91 e0       	ldi	r25, 0x01	; 1
    2070:	0e 94 76 0d 	call	0x1aec	; 0x1aec <dequeue>
    2074:	ec 01       	movw	r28, r24
    2076:	d8 01       	movw	r26, r16
    2078:	13 96       	adiw	r26, 0x03	; 3
    207a:	9c 93       	st	X, r25
    207c:	8e 93       	st	-X, r24
    207e:	12 97       	sbiw	r26, 0x02	; 2
    2080:	78 94       	sei
    2082:	4e 85       	ldd	r20, Y+14	; 0x0e
    2084:	5f 85       	ldd	r21, Y+15	; 0x0f
    2086:	6c 85       	ldd	r22, Y+12	; 0x0c
    2088:	7d 85       	ldd	r23, Y+13	; 0x0d
    208a:	8a 85       	ldd	r24, Y+10	; 0x0a
    208c:	9b 85       	ldd	r25, Y+11	; 0x0b
    208e:	0e 94 a5 0f 	call	0x1f4a	; 0x1f4a <sync>
    2092:	8f b7       	in	r24, 0x3f	; 63
    2094:	f8 94       	cli
    2096:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <msgPool>
    209a:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <msgPool+0x1>
    209e:	99 83       	std	Y+1, r25	; 0x01
    20a0:	88 83       	st	Y, r24
    20a2:	d0 93 07 01 	sts	0x0107, r29	; 0x800107 <msgPool+0x1>
    20a6:	c0 93 06 01 	sts	0x0106, r28	; 0x800106 <msgPool>
    20aa:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    20ae:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    20b2:	00 81       	ld	r16, Z
    20b4:	11 81       	ldd	r17, Z+1	; 0x01
    20b6:	e8 01       	movw	r28, r16
    20b8:	2a 81       	ldd	r18, Y+2	; 0x02
    20ba:	3b 81       	ldd	r19, Y+3	; 0x03
    20bc:	a0 91 58 01 	lds	r26, 0x0158	; 0x800158 <msgQ>
    20c0:	b0 91 59 01 	lds	r27, 0x0159	; 0x800159 <msgQ+0x1>
    20c4:	10 97       	sbiw	r26, 0x00	; 0
    20c6:	c1 f0       	breq	.+48     	; 0x20f8 <run+0x94>
    20c8:	21 15       	cp	r18, r1
    20ca:	31 05       	cpc	r19, r1
    20cc:	59 f2       	breq	.-106    	; 0x2064 <run>
    20ce:	16 96       	adiw	r26, 0x06	; 6
    20d0:	8d 91       	ld	r24, X+
    20d2:	9d 91       	ld	r25, X+
    20d4:	0d 90       	ld	r0, X+
    20d6:	bc 91       	ld	r27, X
    20d8:	a0 2d       	mov	r26, r0
    20da:	e9 01       	movw	r28, r18
    20dc:	4e 81       	ldd	r20, Y+6	; 0x06
    20de:	5f 81       	ldd	r21, Y+7	; 0x07
    20e0:	68 85       	ldd	r22, Y+8	; 0x08
    20e2:	79 85       	ldd	r23, Y+9	; 0x09
    20e4:	84 1b       	sub	r24, r20
    20e6:	95 0b       	sbc	r25, r21
    20e8:	a6 0b       	sbc	r26, r22
    20ea:	b7 0b       	sbc	r27, r23
    20ec:	18 16       	cp	r1, r24
    20ee:	19 06       	cpc	r1, r25
    20f0:	1a 06       	cpc	r1, r26
    20f2:	1b 06       	cpc	r1, r27
    20f4:	0c f0       	brlt	.+2      	; 0x20f8 <run+0x94>
    20f6:	b6 cf       	rjmp	.-148    	; 0x2064 <run>
    20f8:	10 93 03 01 	sts	0x0103, r17	; 0x800103 <activeStack+0x1>
    20fc:	00 93 02 01 	sts	0x0102, r16	; 0x800102 <activeStack>
    2100:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    2104:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    2108:	91 83       	std	Z+1, r25	; 0x01
    210a:	80 83       	st	Z, r24
    210c:	f0 93 05 01 	sts	0x0105, r31	; 0x800105 <threadPool+0x1>
    2110:	e0 93 04 01 	sts	0x0104, r30	; 0x800104 <threadPool>
    2114:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <activeStack>
    2118:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <activeStack+0x1>
    211c:	14 96       	adiw	r26, 0x04	; 4
    211e:	ed 91       	ld	r30, X+
    2120:	fc 91       	ld	r31, X
    2122:	15 97       	sbiw	r26, 0x05	; 5
    2124:	30 97       	sbiw	r30, 0x00	; 0
    2126:	41 f0       	breq	.+16     	; 0x2138 <run+0xd4>
    2128:	a0 81       	ld	r26, Z
    212a:	b1 81       	ldd	r27, Z+1	; 0x01
    212c:	14 96       	adiw	r26, 0x04	; 4
    212e:	ed 91       	ld	r30, X+
    2130:	fc 91       	ld	r31, X
    2132:	15 97       	sbiw	r26, 0x05	; 5
    2134:	30 97       	sbiw	r30, 0x00	; 0
    2136:	c1 f7       	brne	.-16     	; 0x2128 <run+0xc4>
    2138:	cd 01       	movw	r24, r26
    213a:	0e 94 fd 04 	call	0x9fa	; 0x9fa <dispatch>
    213e:	92 cf       	rjmp	.-220    	; 0x2064 <run>

00002140 <install>:
    2140:	42 31       	cpi	r20, 0x12	; 18
    2142:	b8 f4       	brcc	.+46     	; 0x2172 <install+0x32>
    2144:	2f b7       	in	r18, 0x3f	; 63
    2146:	f8 94       	cli
    2148:	50 e0       	ldi	r21, 0x00	; 0
    214a:	44 0f       	add	r20, r20
    214c:	55 1f       	adc	r21, r21
    214e:	fa 01       	movw	r30, r20
    2150:	e6 5a       	subi	r30, 0xA6	; 166
    2152:	fe 4f       	sbci	r31, 0xFE	; 254
    2154:	91 83       	std	Z+1, r25	; 0x01
    2156:	80 83       	st	Z, r24
    2158:	fa 01       	movw	r30, r20
    215a:	ee 50       	subi	r30, 0x0E	; 14
    215c:	fe 4f       	sbci	r31, 0xFE	; 254
    215e:	71 83       	std	Z+1, r23	; 0x01
    2160:	60 83       	st	Z, r22
    2162:	41 e0       	ldi	r20, 0x01	; 1
    2164:	50 e0       	ldi	r21, 0x00	; 0
    2166:	fc 01       	movw	r30, r24
    2168:	53 83       	std	Z+3, r21	; 0x03
    216a:	42 83       	std	Z+2, r20	; 0x02
    216c:	22 23       	and	r18, r18
    216e:	0c f4       	brge	.+2      	; 0x2172 <install+0x32>
    2170:	78 94       	sei
    2172:	08 95       	ret

00002174 <tinytimber>:
    2174:	8c 01       	movw	r16, r24
    2176:	7b 01       	movw	r14, r22
    2178:	6a 01       	movw	r12, r20
    217a:	8f b7       	in	r24, 0x3f	; 63
    217c:	f8 94       	cli
    217e:	0e 94 92 04 	call	0x924	; 0x924 <initialize>
    2182:	78 94       	sei
    2184:	e1 14       	cp	r14, r1
    2186:	f1 04       	cpc	r15, r1
    2188:	41 f0       	breq	.+16     	; 0x219a <tinytimber+0x26>
    218a:	20 e0       	ldi	r18, 0x00	; 0
    218c:	30 e0       	ldi	r19, 0x00	; 0
    218e:	a9 01       	movw	r20, r18
    2190:	60 e0       	ldi	r22, 0x00	; 0
    2192:	70 e0       	ldi	r23, 0x00	; 0
    2194:	cb 01       	movw	r24, r22
    2196:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <async>
    219a:	8f b7       	in	r24, 0x3f	; 63
    219c:	f8 94       	cli
    219e:	0e 94 1d 05 	call	0xa3a	; 0xa3a <schedule>
    21a2:	78 94       	sei
    21a4:	81 e0       	ldi	r24, 0x01	; 1
    21a6:	83 bf       	out	0x33, r24	; 51
    21a8:	88 95       	sleep
    21aa:	fd cf       	rjmp	.-6      	; 0x21a6 <tinytimber+0x32>

000021ac <__divmodsi4>:
    21ac:	05 2e       	mov	r0, r21
    21ae:	97 fb       	bst	r25, 7
    21b0:	1e f4       	brtc	.+6      	; 0x21b8 <__divmodsi4+0xc>
    21b2:	00 94       	com	r0
    21b4:	0e 94 ed 10 	call	0x21da	; 0x21da <__negsi2>
    21b8:	57 fd       	sbrc	r21, 7
    21ba:	07 d0       	rcall	.+14     	; 0x21ca <__divmodsi4_neg2>
    21bc:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__udivmodsi4>
    21c0:	07 fc       	sbrc	r0, 7
    21c2:	03 d0       	rcall	.+6      	; 0x21ca <__divmodsi4_neg2>
    21c4:	4e f4       	brtc	.+18     	; 0x21d8 <__divmodsi4_exit>
    21c6:	0c 94 ed 10 	jmp	0x21da	; 0x21da <__negsi2>

000021ca <__divmodsi4_neg2>:
    21ca:	50 95       	com	r21
    21cc:	40 95       	com	r20
    21ce:	30 95       	com	r19
    21d0:	21 95       	neg	r18
    21d2:	3f 4f       	sbci	r19, 0xFF	; 255
    21d4:	4f 4f       	sbci	r20, 0xFF	; 255
    21d6:	5f 4f       	sbci	r21, 0xFF	; 255

000021d8 <__divmodsi4_exit>:
    21d8:	08 95       	ret

000021da <__negsi2>:
    21da:	90 95       	com	r25
    21dc:	80 95       	com	r24
    21de:	70 95       	com	r23
    21e0:	61 95       	neg	r22
    21e2:	7f 4f       	sbci	r23, 0xFF	; 255
    21e4:	8f 4f       	sbci	r24, 0xFF	; 255
    21e6:	9f 4f       	sbci	r25, 0xFF	; 255
    21e8:	08 95       	ret

000021ea <__usmulhisi3>:
    21ea:	0e 94 1e 11 	call	0x223c	; 0x223c <__umulhisi3>

000021ee <__usmulhisi3_tail>:
    21ee:	b7 ff       	sbrs	r27, 7
    21f0:	08 95       	ret
    21f2:	82 1b       	sub	r24, r18
    21f4:	93 0b       	sbc	r25, r19
    21f6:	08 95       	ret

000021f8 <__udivmodsi4>:
    21f8:	a1 e2       	ldi	r26, 0x21	; 33
    21fa:	1a 2e       	mov	r1, r26
    21fc:	aa 1b       	sub	r26, r26
    21fe:	bb 1b       	sub	r27, r27
    2200:	fd 01       	movw	r30, r26
    2202:	0d c0       	rjmp	.+26     	; 0x221e <__udivmodsi4_ep>

00002204 <__udivmodsi4_loop>:
    2204:	aa 1f       	adc	r26, r26
    2206:	bb 1f       	adc	r27, r27
    2208:	ee 1f       	adc	r30, r30
    220a:	ff 1f       	adc	r31, r31
    220c:	a2 17       	cp	r26, r18
    220e:	b3 07       	cpc	r27, r19
    2210:	e4 07       	cpc	r30, r20
    2212:	f5 07       	cpc	r31, r21
    2214:	20 f0       	brcs	.+8      	; 0x221e <__udivmodsi4_ep>
    2216:	a2 1b       	sub	r26, r18
    2218:	b3 0b       	sbc	r27, r19
    221a:	e4 0b       	sbc	r30, r20
    221c:	f5 0b       	sbc	r31, r21

0000221e <__udivmodsi4_ep>:
    221e:	66 1f       	adc	r22, r22
    2220:	77 1f       	adc	r23, r23
    2222:	88 1f       	adc	r24, r24
    2224:	99 1f       	adc	r25, r25
    2226:	1a 94       	dec	r1
    2228:	69 f7       	brne	.-38     	; 0x2204 <__udivmodsi4_loop>
    222a:	60 95       	com	r22
    222c:	70 95       	com	r23
    222e:	80 95       	com	r24
    2230:	90 95       	com	r25
    2232:	9b 01       	movw	r18, r22
    2234:	ac 01       	movw	r20, r24
    2236:	bd 01       	movw	r22, r26
    2238:	cf 01       	movw	r24, r30
    223a:	08 95       	ret

0000223c <__umulhisi3>:
    223c:	a2 9f       	mul	r26, r18
    223e:	b0 01       	movw	r22, r0
    2240:	b3 9f       	mul	r27, r19
    2242:	c0 01       	movw	r24, r0
    2244:	a3 9f       	mul	r26, r19
    2246:	70 0d       	add	r23, r0
    2248:	81 1d       	adc	r24, r1
    224a:	11 24       	eor	r1, r1
    224c:	91 1d       	adc	r25, r1
    224e:	b2 9f       	mul	r27, r18
    2250:	70 0d       	add	r23, r0
    2252:	81 1d       	adc	r24, r1
    2254:	11 24       	eor	r1, r1
    2256:	91 1d       	adc	r25, r1
    2258:	08 95       	ret

0000225a <setjmp>:
    225a:	dc 01       	movw	r26, r24
    225c:	2d 92       	st	X+, r2
    225e:	3d 92       	st	X+, r3
    2260:	4d 92       	st	X+, r4
    2262:	5d 92       	st	X+, r5
    2264:	6d 92       	st	X+, r6
    2266:	7d 92       	st	X+, r7
    2268:	8d 92       	st	X+, r8
    226a:	9d 92       	st	X+, r9
    226c:	ad 92       	st	X+, r10
    226e:	bd 92       	st	X+, r11
    2270:	cd 92       	st	X+, r12
    2272:	dd 92       	st	X+, r13
    2274:	ed 92       	st	X+, r14
    2276:	fd 92       	st	X+, r15
    2278:	0d 93       	st	X+, r16
    227a:	1d 93       	st	X+, r17
    227c:	cd 93       	st	X+, r28
    227e:	dd 93       	st	X+, r29
    2280:	ff 91       	pop	r31
    2282:	ef 91       	pop	r30
    2284:	8d b7       	in	r24, 0x3d	; 61
    2286:	8d 93       	st	X+, r24
    2288:	8e b7       	in	r24, 0x3e	; 62
    228a:	8d 93       	st	X+, r24
    228c:	8f b7       	in	r24, 0x3f	; 63
    228e:	8d 93       	st	X+, r24
    2290:	ed 93       	st	X+, r30
    2292:	fd 93       	st	X+, r31
    2294:	88 27       	eor	r24, r24
    2296:	99 27       	eor	r25, r25
    2298:	09 94       	ijmp

0000229a <longjmp>:
    229a:	dc 01       	movw	r26, r24
    229c:	cb 01       	movw	r24, r22
    229e:	81 30       	cpi	r24, 0x01	; 1
    22a0:	91 05       	cpc	r25, r1
    22a2:	81 1d       	adc	r24, r1
    22a4:	2d 90       	ld	r2, X+
    22a6:	3d 90       	ld	r3, X+
    22a8:	4d 90       	ld	r4, X+
    22aa:	5d 90       	ld	r5, X+
    22ac:	6d 90       	ld	r6, X+
    22ae:	7d 90       	ld	r7, X+
    22b0:	8d 90       	ld	r8, X+
    22b2:	9d 90       	ld	r9, X+
    22b4:	ad 90       	ld	r10, X+
    22b6:	bd 90       	ld	r11, X+
    22b8:	cd 90       	ld	r12, X+
    22ba:	dd 90       	ld	r13, X+
    22bc:	ed 90       	ld	r14, X+
    22be:	fd 90       	ld	r15, X+
    22c0:	0d 91       	ld	r16, X+
    22c2:	1d 91       	ld	r17, X+
    22c4:	cd 91       	ld	r28, X+
    22c6:	dd 91       	ld	r29, X+
    22c8:	ed 91       	ld	r30, X+
    22ca:	fd 91       	ld	r31, X+
    22cc:	0d 90       	ld	r0, X+
    22ce:	f8 94       	cli
    22d0:	fe bf       	out	0x3e, r31	; 62
    22d2:	0f be       	out	0x3f, r0	; 63
    22d4:	ed bf       	out	0x3d, r30	; 61
    22d6:	ed 91       	ld	r30, X+
    22d8:	fd 91       	ld	r31, X+
    22da:	09 94       	ijmp

000022dc <_exit>:
    22dc:	f8 94       	cli

000022de <__stop_program>:
    22de:	ff cf       	rjmp	.-2      	; 0x22de <__stop_program>
